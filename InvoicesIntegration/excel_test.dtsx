<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/22/2020 1:03:32 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{317395E9-83DD-456A-90E8-AD2ADDF3C00C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="excel_test"
  DTS:PackageType="5"
  DTS:VersionBuild="23"
  DTS:VersionGUID="{C2975BF2-F7F4-4FD2-8D49-1C30EFCACCE4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Диспетчер соединений Excel]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{A54C4B9A-1DB5-4561-A7A4-1BB2F01AB924}"
      DTS:ObjectName="Диспетчер соединений Excel">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + @[User::ttr_path]   + ";Extended Properties=Excel 12.0"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\10.10.0.28\alta\Robot\Data\шаблон_пир_ттр.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE3F1193-9014-4F5C-86C4-3B0D741DD9A3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ttr_path">
      <DTS:VariableValue
        DTS:DataType="8">\\10.10.0.28\alta\Robot\Data\шаблон_пир_ттр.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{4475BA48-F9E8-4AF8-959A-D4E1AD929AB9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f350b002bdc24bb6880532207a49ac10"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="ST_f350b002bdc24bb6880532207a49ac10.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6CC16D2E-8252-49BE-AAFB-3BEFF6C2276F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f350b002bdc24bb6880532207a49ac10</RootNamespace>
    <AssemblyName>ST_f350b002bdc24bb6880532207a49ac10</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="Microsoft.Office.Core">
      <Guid>{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}</Guid>
      <VersionMajor>2</VersionMajor>
      <VersionMinor>5</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="Microsoft.Office.Interop.Excel">
      <Guid>{00020813-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>7</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="VBIDE">
      <Guid>{0002E157-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>5</VersionMajor>
      <VersionMinor>3</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f350b002bdc24bb6880532207a49ac10.Properties.Settings.get_Default():ST_f350b002bdc24bb6880532207a49ac10.Properties.Sett" +
    "ings")]

namespace ST_f350b002bdc24bb6880532207a49ac10.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
#endregion
using Excel = Microsoft.Office.Interop.Excel;

namespace ST_f350b002bdc24bb6880532207a49ac10
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            try
            {
                Excel.Application xlApp = new Excel.Application();
                Excel.Workbook xlWorkBook = xlApp.Workbooks.Open(@"\\10.10.0.28\alta\Robot\test.xlsx");
                Excel.Worksheet xlWorkSheet = xlWorkBook.Sheets[1];

                xlWorkSheet.Cells[1, 1].Value = "ChangedAgain";
                xlWorkBook.Save();
                xlWorkBook.Close();
                xlApp.Quit();

                DeallocateObject(xlApp);
                DeallocateObject(xlWorkBook);
                DeallocateObject(xlWorkSheet);
            }
            catch (Exception ex) 
            {
                Dts.Events.FireError(0, "", ex.Message, "", 0);
            }
        }

        private static void DeallocateObject(object obj)
        {
            try
            {
                System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
                obj = null;
            }
            catch (Exception)
            {
            }
            finally
            {
                GC.Collect();
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_f350b002bdc24bb6880532207a49ac10</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_f350b002bdc24bb6880532207a49ac10</msb:DisplayName>
		<msb:ProjectId>{DBD805CB-0467-41C2-B8D7-3FB250EBD369}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f350b002bdc24bb6880532207a49ac10.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f350b002bdc24bb6880532207a49ac10")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f350b002bdc24bb6880532207a49ac10")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f350b002bdc24bb6880532207a49ac10.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f350b002bdc24bb6880532207a49ac10.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f350b002bdc24bb6880532207a49ac10.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f350b002bdc24bb6880532207a49ac10.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f350b002bdc24bb6880532207a49ac10.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f350b002bdc24bb6880532207a49ac10.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAj7p14AAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAvkAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGxAAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
QAAAAAAAAEgAAAACAAUAsCIAAAQdAAABAAAAAAAAALQ/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswEACPAQAAAQAAEXIBAABwcxkAAAooGgAACigbAAAKdAcA
AAIKBm8TAAAGcksAAHB+HAAACn4cAAAKfhwAAAp+HAAACn4cAAAKfhwAAAp+HAAACn4cAAAKfhwA
AAp+HAAACn4cAAAKfhwAAAp+HAAACn4cAAAKbxEAAAYLfgcAAAQtJBbQEAAAAigdAAAK0AIAAAIo
HQAACigeAAAKKB8AAAqABwAABH4HAAAEeyAAAAp+BwAABAdvHQAABheMLgAAAW8PAAAGbyEAAAoM
fggAAAQtORZyjwAAcNACAAACKB0AAAoYjS8AAAElFhYUKCIAAAqiJRcZFCgiAAAKoigjAAAKKCQA
AAqACAAABH4IAAAEeyUAAAp+CAAABAhvHwAABheMLgAAAReMLgAAAW8MAAAGcpsAAHBvJgAACiYH
bxsAAAYHfhwAAAp+HAAACn4cAAAKbxkAAAYGbxcAAAYGKAIAAAYHKAIAAAYIKAIAAAbeJg0CKCcA
AApvKAAAChZytQAAcAlvKQAACnK1AABwFm8qAAAKJt4AKgBBHAAAAAAAAAAAAABoAQAAaAEAACYA
AAAPAAABGzABABYAAAAAAAAAAigrAAAKJhQQAN4JJt4GKCwAAArcKgAAARwAAAAAAAAMDAADDwAA
AQIAAAAPDwAGAAAAAB4CKC0AAAoqHgIoLgAACiqufgEAAAQtHnK3AABw0AMAAAIoHQAACm8vAAAK
czAAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigxAAAKKi5zCQAABoADAAAE
KgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAArAoAACN+AAAYCwAAnAkAACNT
dHJpbmdzAAAAALQUAAAsAQAAI1VTAOAVAAAQAAAAI0dVSUQAAADwFQAAFAcAACNCbG9iAAAAAAAA
AAIAAAFXP6IJCQMAAAD6ATMAFgAAAQAAADUAAAAVAAAACAAAAB8AAAAhAAAACQAAADEAAAACAAAA
XQAAAB8AAAABAAAABwAAAAkAAAALAAAABAAAAAEAAAAFAAAAAQAAAAIAAAAAAJUFAQAAAAAABgDx
AzYHBgCRBDYHBgDfAgQHDwCqBwAABgAMAyMGBgClAyMGBgCGAyMGBgB4BCMGBgAiBCMGBgA7BCMG
BgA6AyMGBgBVA7oECgBWBBcFCgAPAhcFBgA1Br0FBgDXCL0FBgDEBb0FBgB+AjYHDgBiADYHBgCA
AL0FDgBlAjYHBgCUAL0FBgDCAgQHBgCrBlYHBgA/Bg4GEgBQAn8FEgDzAn8FEgArAvkFBgCZAhcH
BgAjAxcHBgDZAxcHBgDOAb0FBgCnAhcHBgARBBcHBgDCAyMGBgCMAUsIBgBuAhcHBgBuAxcHBgA+
Ab0FBgBGBRcHBgDtBr0FBgChAb0FFgCgBnkGDgCYBjYHFgAMCHkGBgB6AL0FFgBLBnkGFgD0B3kG
BgBUAP0ACgBtBRcFCgC7BhcFBgDYAL0FBgCJCSMGAAAAAM8AAAAAAAEAAQABABAA2gUBADkAAQAB
AAAAEABdB8UHQQABAAQAAAEQAB4IxQdxAAMACAChEAAAqwhOBQAABAALAKEQAABICU4FAAAEAAsA
oRAAAO0FTgUAAAQACwChEAAAkghOBQAABAALAKEQAAAjCU4FAAAEAAsAoRAAAH8BTgUAAAQACwCh
EAAAcghOBQAABAAOAKEQAADvBE4FAAAEABAAoRAAAJwITgUAAAQAEAChEAAAMwlOBQAABAAQAKEQ
AAA3CE4FAAAEABAAoRAAAOcITgUAAAQAEgChEAAA7AVOBQAABAASAKEQAADgBE4FAAAEABgAoRAA
AOYITgUAAAQAHgADAQAAeQgAAEUABAAgAIMBEAA/AAAAQQAHACAAEQDJBT0BEQD/AUEBEQBjAUUB
BgbsAEkBVoBeCEwBVoDfAUwBFgBGAFABFgBNAF8BUCAAAAAAhgDgBQYAAQAIIgAAAACRALwIbgEB
AEgiAAAAAIYY9wYGAAIAUCIAAAAAgxj3BgYAAgBYIgAAAACTCKcGcwECAIQiAAAAAJMI5wF4AQIA
iyIAAAAAkwjzAX0BAgCTIgAAAACWCBcJgwEDAJoiAAAAAIYY9wYGAAMAoiIAAAAAkRj9Bv4AAwAA
AAAAAwAGGJsABgADAAAAAACDEMYN/QiIAQMAAAAAAIMQxg0KCY4BBgAAAAAAAwAGGLYABgAJAAAA
AAADEMYN/QiVAQkAAAAAAAMABhhtAAYACwAAAAAAAxDGBdUFmgELAAAAAAADAAYYmwAGABsAAAAA
AAMQxg0zCK4BGwAAAAAAAwAGGDIABgAcAAAAAAADEMYN/QjsABwAAAAAAAMABhioAAYAHQAAAAAA
AxDGBfgIBgAdAAAAAAADAAYYJQAGAB0AAAAAAAMQxgVDAo4BHQAAAAAAAwAGGIcABgAgAAAAAAAD
EMYFtQQGACAAAAAAAAMABhjDAAYAIAAAAAAAAxDGDW4IswEgAAAAAAADAAYYmwAGACEAAAAAAAMQ
xg1BCLgBIQAAAAEA3AQAAAEArwQAIAAAAAARIAEAdQkRIAIAaQkRIAEAdQkRIAIAaQkRIAMAAAAA
IAAAAAABIAEAeAkAIAAAAAABIAEAxQERIAIAJwgRIAMAkgkRIAQAtQgRIAUASwERIAYAQwERIAcA
JAERIAgA5QURIAkAzwYRIAoAmAERIAsAfgkRIAwA2QYRIA0AYAkRIA4AQAURIA8AGAEAIAAAAAAA
IAAAAAARIAEAuQcRIAIAxQERIAMA6gQAIAAAAAAAIAAAAAAHAEQABwAYAAoAkQALAJEADABIAAwA
OAAPAJEAEABMABAAJAAJAPcGAQARAPcGBgAZAPcGCgApAPcGEAAxAPcGEAA5APcGEABBAPcGEABJ
APcGEABRAPcGEABZAPcGEABhAPcGEABpAPcGBgCRAPcGBgC5APcGBgDZAPcGFQDpAPcGEADxAPcG
GwD5APcGBgAJAfcGIAD5APcGKgARAfcGMAAZAfcGEAApAfcGAQAxAfcGAQA5AfcGEABBAdsAQgBJ
AVQBSwABAdQEUgABAbMBVQBZAVgJXgAMAEkCewAMAPEIhwAUAIUBlQB5AUkCngBZAW8GqAAcAEkC
ewAcAPEIhwAkAIUB1QBxAGYI4ACRAYcI5gB5AHMB7ACZAeMG8ABBAc0I+QChAd4I/gBxAPcGBgCB
APcGBgABAYUJAgHBAPcGCAHhAPcGBgAIABQAKwEIABgAMAEpAHsAEgIuAAsA6gEuABMA8wEuABsA
EgIuACMAGwIuACsARAIuADMARAIuADsARAIuAEMAGwIuAEsASgIuAFMARAIuAFsAYQJDAGMAMAFJ
AHsAEgJhAGsAMAFjAHMAMAGJALsAqwKjAGsAMAGjAIMABQOjAIsALwOjAJMAMAGpALsAqwLDAGsA
MAHDAJsANgPDAKMAjQPJALsAxgLjAGsAMAHjAIMA5gPjAKsAEATjAJMAMAHpALsAqwIDAWsAMAED
AYMAcAQDAYsALwMDAZMAMAEJAbsA8wIjAWsAMAEjAZsAmgQjAaMA8QQpAbsA/AJDAWsAMAFDAYsA
LwNDAbMASgVDAYMAWAVDAZMAMAFjAWsAMAFjAYMAggVjAbMASgVjAZMAMAGAAbsAqwKDAWsAMAGD
AYMArAWDAasAEASDAZMAMAGgAbsAqwKjAWsAMAGjAYMA1gWjAYsALwOjAZMAMAHDAWsAMAHDAZsA
AAbDAaMAYQbgAbsAqwLjAWsAMAHjAYMAvwbjAbMASgXjAZMAMAEDAmsAMAEDAqsAEAQDAoMA6QYD
ApMAMAEgAsMAtAIgArsAvQIjAmsAMAEjArMASgUjAoMA5gMjApMAMAFDAmsAMAFDAoMArAVDApMA
MAFgArsAxgJjAmsAMAFjAoMA6QZjApMAMAGgArsAqwKjAmsAMAHgArsAzwIgA8MA2AIgA7sA4QJg
A7sA6gJgA8MAqwKgA7sA8wLgA7sA/AIHADUBCQA1AQsANQENADUBDwA1AREANQETADcBFQA1ARcA
OQEZADsBGwA1AR0ANQEfADUBIQA1ASMANQElADUBJwA1ASkANQErADUBLQA1AS8ANQExADUBMwA1
ATUANQE3ADkBOQA7ATsANQE9ADUBPwA1AUEAOQFDADkBNwADAAEABAADAAoABAALAAUAEQAGABIA
CAATAAkAAACrBr0BAAAHAsIBAAAbCccBAAAaCcwBAAAaCdIBAAA3CNcBAAAaCdwBAAByCOABAABF
COUBAgAFAAMAAgAGAAUAAQAHAAUAAgAIAAcAAgAMAAkAAQANAAkAAgAPAAsAAgATAA0AAgAVAA8A
AgAdABEAAgAfABMAbQCLAL0AywAEgAAAAQAAAP8cnFkAAAAAAAABAAAABAAAAAAAAAAAAAAAEAH0
AAAAAAANAAAAAAAAAAAAAAAZAfgEAAAAAAQAAAAAAAAAAAAAABAB0wEAAAAABAAAAAAAAAAAAAAA
EAG9BQAAAAAEAAAAAAAAAAAAAAAiAV4GAAAAAAAAAAABAAAAZwcAABQAAgAVAAIAAAAAU1RfZjM1
MGIwMDJiZGMyNGJiNjg4MDUzMjIwN2E0OWFjMTAAX1Z0YmxHYXAxXzIwAF9WdGJsR2FwMl82MAA8
Pm9fXzAAPD5wX18wADw+cF9fMQBJRW51bWVyYWJsZWAxAENhbGxTaXRlYDEAX1Z0YmxHYXAxXzEy
AEludDMyAEZ1bmNgMwBfVnRibEdhcDJfNzQARnVuY2A0AF9WdGJsR2FwMV80NQBfVnRibEdhcDNf
MTE2AF9WdGJsR2FwMV8xOABfVnRibEdhcDNfOQA8TW9kdWxlPgBHQwBHZXRUeXBlRnJvbUNMU0lE
AHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQ29ycnVwdExvYWQA
SWdub3JlUmVhZE9ubHlSZWNvbW1lbmRlZABHdWlkAFdyaXRlUmVzUGFzc3dvcmQAQ3JlYXRlSW5z
dGFuY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFJhbmdlAEludm9rZQBJRW51bWVyYWJs
ZQBFZGl0YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlbmFtZQBU
eXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ2FsbFNpdGUARGlzcElkQXR0cmli
dXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQ29tRXZlbnRJbnRl
cmZhY2VBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAElu
dGVyZmFjZVR5cGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAExDSURDb252ZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAERlZmF1bHRNZW1iZXJB
dHRyaWJ1dGUAVHlwZUlkZW50aWZpZXJBdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBDb0NsYXNzQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVl
AFNhdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBNaXNzaW5nAG9iagBfV29ya2Jvb2sAUm91
dGVXb3JrYm9vawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBMb2NhbABNYXJzaGFsAE1pY3Jvc29mdC5PZmZpY2Uu
SW50ZXJvcC5FeGNlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
ZjM1MGIwMDJiZGMyNGJiNjg4MDUzMjIwN2E0OWFjMTAuZGxsAFN5c3RlbQBFbnVtAHJlc291cmNl
TWFuAE9wZW4AU2NyaXB0TWFpbgBPcmlnaW4AX0FwcGxpY2F0aW9uAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0
dXJlSW5mbwBDU2hhcnBBcmd1bWVudEluZm8ATWljcm9zb2Z0LkNTaGFycABTZXRNZW1iZXIATWlj
cm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBEZWxpbWl0ZXIAQ29udmVydGVyAEZpcmVFcnJvcgBB
Y3RpdmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUX2YzNTBiMDAyYmRjMjRiYjY4ODA1MzIyMDdhNDlhYzEwLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTYXZlQ2hhbmdlcwBTVF9mMzUwYjAwMmJk
YzI0YmI2ODgwNTMyMjA3YTQ5YWMxMC5Qcm9wZXJ0aWVzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdz
AENTaGFycEJpbmRlckZsYWdzAFNldHRpbmdzAFVwZGF0ZUxpbmtzAGdldF9Xb3JrYm9va3MAZ2V0
X0NlbGxzAFN5c3RlbS5Db2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAZ2V0X1NoZWV0cwBTY3Jp
cHRSZXN1bHRzAGdldF9FdmVudHMARG9jRXZlbnRzAFdvcmtib29rRXZlbnRzAEFwcEV2ZW50cwBG
b3JtYXQARGVhbGxvY2F0ZU9iamVjdABSZWxlYXNlQ29tT2JqZWN0AENvbGxlY3QAX1dvcmtzaGVl
dABUYXJnZXQAUXVpdABnZXRfX0RlZmF1bHQAc2V0X19EZWZhdWx0AGdldF9EZWZhdWx0AERvY0V2
ZW50c19FdmVudABXb3JrYm9va0V2ZW50c19FdmVudABBcHBFdmVudHNfRXZlbnQAQ29udmVydABB
ZGRUb01ydQBDb2x1bW5JbmRleABSb3dJbmRleABOb3RpZnkAZ2V0X0Fzc2VtYmx5AFJlYWRPbmx5
AAAASTAAMAAwADIANAA1ADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AQwAwADAAMAAtADAAMAAw
ADAAMAAwADAAMAAwADAANAA2AAFDXABcADEAMAAuADEAMAAuADAALgAyADgAXABhAGwAdABhAFwA
UgBvAGIAbwB0AFwAdABlAHMAdAAuAHgAbABzAHgAAAtWAGEAbAB1AGUAABlDAGgAYQBuAGcAZQBk
AEEAZwBhAGkAbgAAAQBxUwBUAF8AZgAzADUAMABiADAAMAAyAGIAZABjADIANABiAGIANgA4ADgA
MAA1ADMAMgAyADAANwBhADQAOQBhAGMAMQAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAAAAAANvEkeG09VSKtOcOWG5he5AAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFpBCABAQYJIAIBEoCBEoCBBSACAQ4OBiABARKAgQoHBBIcEjASQBI9CAABEoCBEYCdBgABHBKA
gQIGHAgAARKAgRGAqQ4AAxKAsRGAtRKAgRKAgQ0VEk0BFRJRAxJVHBJACwABFRJNARMAEoCxAwYT
AAkVElEDElUcEkAIIAITAhMAEwEJAAISgL0RgMEOFAAEEoCxEYC1DhKAgRUSgMUBEoC9DRUSTQEV
ElkEElUcDhwJFRJZBBJVHA4cCiADEwMTABMBEwIFIAASgMkFIAASgM0DIAAOCCAFAggODg4IBAAB
CBwDAAABBSAAEoDVByACAQ4SgNUIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoEAAAAAAQBAAAA
ARsBGgEcARMDBhJhAwYSZQMGEhACBggDBhFQDgYVEk0BFRJRAxJVHBJADgYVEk0BFRJZBBJVHA4c
BAABARwEAAASYQQAABJlBQABARJlBAAAEhAFIAIcHBwGIAMBHBwcBCABHBwTIA8SMA4cHBwcHBwc
HBwcHBwcHAQgABI8BCAAEiwEIAASKAQIABJhBAgAEmUECAASEAUIAhwcHAQIARwcBAgAEjwDCAAO
BAgAEiwECAASKAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfZjM1MGIwMDJiZGMyNGJiNjg4MDUzMjIwN2E0OWFjMTAAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUIAQAAAAAAAAAIAQAPAAAAAAAIAQCDBwAA
AAAIAQA8AgAAAAAIAQAuAQAAAAAIAQADAAAAAAAIAQAVAQAAAAAIAQAbAQAAAAAIAQDlAQAAAAAI
AQDuAAAAAAApAQAkMDAwMjQ0MTMtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAAGAQACAAAA
VgEAKE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHMoTWljcm9zb2Z0Lk9m
ZmljZS5JbnRlcm9wLkV4Y2VsLkFwcEV2ZW50cwAAWAEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAw
LTAwMDAwMDAwMDA0Ni5NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzX0V2
ZW50AAApAQAkMDAwMjA4RDUtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AABfAQBaU3lzdGVt
Lk9iamVjdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5AAApAQAkMDAwMjQ0MTEtMDAwMC0wMDAwLUMwMDAt
MDAwMDAwMDAwMDQ2AABWAQAoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50
cyhNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuRG9jRXZlbnRzAABYAQAkMDAwMjA4MTMt
MDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2Lk1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNl
bC5Eb2NFdmVudHNfRXZlbnQAAA0BAAhfRGVmYXVsdAAAKQEAJDAwMDIwODQ2LTAwMDAtMDAwMC1D
MDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDIwOEQ3LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0
NgAAKQEAJDAwMDIwOERBLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDI0NDEy
LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAYAEALU1pY3Jvc29mdC5PZmZpY2UuSW50ZXJv
cC5FeGNlbC5Xb3JrYm9va0V2ZW50cy1NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuV29y
a2Jvb2tFdmVudHMAAF0BACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYzTWlj
cm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmtib29rRXZlbnRzX0V2ZW50AAApAQAkMDAw
MjA4REItMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAApAQAkMDAwMjA4RDgtMDAwMC0wMDAw
LUMwMDAtMDAwMDAwMDAwMDQ2AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJRAAAAAAAAAAAAAAK5AAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACgQAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQCcWf8cAAABAJxZ/xw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
AGYAMwA1ADAAYgAwADAAMgBiAGQAYwAyADQAYgBiADYAOAA4ADAANQAzADIAMgAwADcAYQA0ADkA
YQBjADEAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADQAMgAz
AC4AMgAyADkANAAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYA
MwA1ADAAYgAwADAAMgBiAGQAYwAyADQAYgBiADYAOAA4ADAANQAzADIAMgAwADcAYQA0ADkAYQBj
ADEAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AZgAzADUAMABiADAAMAAyAGIAZABjADIANABiAGIANgA4ADgAMAA1ADMAMgAyADAANwBh
ADQAOQBhAGMAMQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGYAMwA1ADAAYgAwADAAMgBiAGQAYwAyADQAYgBiADYAOAA4ADAANQAzADIAMgAwADcAYQA0
ADkAYQBjADEAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NwA0ADIAMwAuADIAMgA5ADQAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwA0ADIAMwAuADIAMgA5ADQAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="496,307" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>