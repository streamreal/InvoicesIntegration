<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/14/2020 11:18:27 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{F2CA52CB-2BC9-439C-A0AA-83168F09BA33}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="29"
  DTS:VersionGUID="{F4B00B22-95A7-4FA5-988E-954E75468095}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Загрузка не взятых в управление за 24 часа"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AB614839-21DC-4E20-8EB9-E99F71CF5A2A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Загрузка не взятых в управление за 24 часа"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="INSERT [aberration].[dbo].[obligations_take]&#xA;([id]&#xA;,[Obligation_Name]&#xA;,[CustomerName]&#xA;,[Import_DateTime]&#xA;,[RegNum]&#xA;,[Delivery]&#xA;,[CargoID]&#xA;,[STOSalesPersonName]&#xA;,[RegUsername_Full])&#xA;SELECT&#xA;[id],&#xA;[Obligation_Name],&#xA;[CustomerName],&#xA;[Import_DateTime],&#xA;COALESCE([RegNum], '-') [RegNum],&#xA;[Delivery],&#xA;COALESCE([CargoID], '-') [CargoID],&#xA;COALESCE([STOSalesPersonName], '-') [STOSalesPersonName],&#xA;COALESCE([RegUsername_Full], '-') [RegUsername_Full]&#xA;FROM [BI].[dwh].[Obligations] o&#xA;WHERE [ID_category] = 1&#xA;AND [ID_obligation] IN (0,1,2,3,4,5,6,7,8)&#xA;AND [Specialist] IS NULL&#xA;AND DATEDIFF(hour, Import_DateTime, GETDATE()) &gt; 24&#xA;AND NOT EXISTS(SELECT 0 FROM [aberration].[dbo].[obligations_take] a WHERE a.id = o.id)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Загрузка просроченных"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FC40B442-E83C-4573-8314-52E31A8AB89E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Загрузка просроченных"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="INSERT [aberration].[dbo].[obligations_overdue]&#xA;           ([id]&#xA;           ,[Obligation_Name]&#xA;           ,[Marginal_Action_Date]&#xA;           ,[CustomerName]&#xA;           ,[Delivery]&#xA;           ,[RegNum]&#xA;           ,[Specialist])&#xA;SELECT&#xA;[id]&#xA;,[Obligation_Name]&#xA;,[Marginal_Action_Date]&#xA;,[CustomerName]&#xA;,[Delivery]&#xA;,[RegNum]&#xA;,[Specialist]&#xA;FROM [BI].[dwh].[Obligations] o&#xA;WHERE &#xA;NOT EXISTS(SELECT 0 FROM [aberration].[dbo].[obligations_overdue] a WHERE a.id = o.id)&#xA;AND&#xA;(&#xA;&#x9;([ID_category] = 2 AND [ID_obligation] IN (0,1,2,3,4,5))&#xA;&#x9;OR&#xA;&#x9;([ID_obligation] = 96 AND ID_Category = 1 AND GETDATE() &gt; Marginal_Action_Date)&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Обновление таблицы"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7499BB4F-6FF9-49FF-B114-35C029329E00}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Обновление таблицы"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="UPDATE o&#xA;SET &#xA;o.bitrix_message_id = oa.bitrix_message_id,&#xA;o.date_publish = oa.date_publish,&#xA;o.date_notice = DATEADD(day, 1, oa.date_publish)&#xA;FROM [aberration].[dbo].[obligations_take] o&#xA;OUTER APPLY&#xA;(SELECT TOP (1) bitrix_message_id, CAST(CAST(date_publish as datetimeoffset) as datetime) date_publish&#xA;FROM [aberration].[dbo].[messages_330] m&#xA;WHERE m.delivery_id = o.Delivery&#xA;AND m.detail LIKE '%' + o.Obligation_Name + '%'&#xA;AND m.[message] LIKE '%Незавершенное обязательство не взято в управление%') AS oa&#xA;WHERE o.message_sent = 1 AND o.bitrix_message_id IS NULL&#xA;&#xA;UPDATE o&#xA;SET o.has_specialist = &#xA;(CASE&#xA;WHEN EXISTS(SELECT 0 &#xA;&#x9;&#x9;&#x9;FROM [BI].[dwh].[Obligations] ob &#xA;&#x9;&#x9;&#x9;WHERE ob.id = o.id &#xA;&#x9;&#x9;&#x9;AND &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(COALESCE(ob.Specialist, '') &lt;&gt; '' OR ob.ID_Category IN ('2','3'))&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;THEN 1&#xA;ELSE 0&#xA;END)&#xA;FROM [aberration].[dbo].[obligations_take] o&#xA;WHERE o.has_specialist = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Сообщения по не взятым в управление"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{91B1731A-A1FE-4850-9B05-61360590CDB7}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Сообщения по не взятым в управление"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7639802c320a4eaa97aae0ef685da060"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Aberration.cs"
            Encoding="UTF8"><![CDATA[using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System;

namespace ST_7639802c320a4eaa97aae0ef685da060
{
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aberration")]
	public partial class AberrationContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();

    #endregion
		public AberrationContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AberrationContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AberrationContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AberrationContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<obligations_take> obligations_take
		{
			get
			{
				return this.GetTable<obligations_take>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name= "aberration.dbo.obligations_take")]
	public partial class obligations_take
	{
		
		private int _table_id;
		
		private int _message_sent;
		
		private System.Nullable<int> _id;
		
		private string _Obligation_Name;
		
		private string _CustomerName;
		
		private System.DateTime _Import_DateTime;
		
		private string _RegNum;
		
		private string _Delivery;
		
		private string _CargoID;
		
		private string _STOSalesPersonName;
		
		private string _RegUsername_Full;
		
		private System.DateTime _load_datetime;

		private System.Nullable<int> _bitrix_message_id;

		private System.Nullable<System.DateTime> _date_publish;

		private System.Nullable<System.DateTime> _date_notice;

		private int _has_specialist;

		public obligations_take()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_table_id", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int table_id
		{
			get
			{
				return this._table_id;
			}
			set
			{
				if ((this._table_id != value))
				{
					this._table_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message_sent", DbType="Int NOT NULL")]
		public int message_sent
		{
			get
			{
				return this._message_sent;
			}
			set
			{
				if ((this._message_sent != value))
				{
					this._message_sent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obligation_Name", DbType="VarChar(100)")]
		public string Obligation_Name
		{
			get
			{
				return this._Obligation_Name;
			}
			set
			{
				if ((this._Obligation_Name != value))
				{
					this._Obligation_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(150)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime Import_DateTime
		{
			get
			{
				return this._Import_DateTime;
			}
			set
			{
				if ((this._Import_DateTime != value))
				{
					this._Import_DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNum", DbType="VarChar(25)")]
		public string RegNum
		{
			get
			{
				return this._RegNum;
			}
			set
			{
				if ((this._RegNum != value))
				{
					this._RegNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(30)")]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this._Delivery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargoID", DbType="VarChar(20)")]
		public string CargoID
		{
			get
			{
				return this._CargoID;
			}
			set
			{
				if ((this._CargoID != value))
				{
					this._CargoID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOSalesPersonName", DbType="VarChar(200)")]
		public string STOSalesPersonName
		{
			get
			{
				return this._STOSalesPersonName;
			}
			set
			{
				if ((this._STOSalesPersonName != value))
				{
					this._STOSalesPersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegUsername_Full", DbType="VarChar(40)")]
		public string RegUsername_Full
		{
			get
			{
				return this._RegUsername_Full;
			}
			set
			{
				if ((this._RegUsername_Full != value))
				{
					this._RegUsername_Full = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_load_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime load_datetime
		{
			get
			{
				return this._load_datetime;
			}
			set
			{
				if ((this._load_datetime != value))
				{
					this._load_datetime = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bitrix_message_id", DbType = "Int")]
		public System.Nullable<int> bitrix_message_id
		{
			get
			{
				return this._bitrix_message_id;
			}
			set
			{
				if ((this._bitrix_message_id != value))
				{
					this._bitrix_message_id = value;

				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_date_publish", DbType = "DateTime")]
		public System.Nullable<System.DateTime> date_publish
		{
			get
			{
				return this._date_publish;
			}
			set
			{
				if ((this._date_publish != value))
				{

					this._date_publish = value;
	
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_date_notice", DbType = "DateTime")]
		public System.Nullable<System.DateTime> date_notice
		{
			get
			{
				return this._date_notice;
			}
			set
			{
				if ((this._date_notice != value))
				{

					this._date_notice = value;

				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_has_specialist", DbType = "Int NOT NULL")]
		public int has_specialist
		{
			get
			{
				return this._has_specialist;
			}
			set
			{
				if ((this._has_specialist != value))
				{
					this._has_specialist = value;
				}
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data.SqlClient;
#endregion
using System.Linq;

namespace ST_7639802c320a4eaa97aae0ef685da060
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            Bitrix24 bx_logon = new Bitrix24();
            string message = String.Empty;

            SqlConnection connection = (SqlConnection)Dts.Connections["10.10.0.28.automation.phpuser"].AcquireConnection(Dts.Transaction);

            AberrationContext db = new AberrationContext(connection);

            var messagesToSend = db.obligations_take.Where(m => m.message_sent == 0).Select(m => m);

            foreach (obligations_take msg in messagesToSend)
            {
                message = "Наименование обязательства: " + msg.Obligation_Name + System.Environment.NewLine +
                          "Заказчик: " + msg.CustomerName + System.Environment.NewLine +
                          "Дата и время загрузки в базу: " + msg.Import_DateTime + System.Environment.NewLine +
                          "Номер ДТ: " + msg.RegNum + System.Environment.NewLine +
                          "Доставка: " + msg.Delivery + System.Environment.NewLine +
                          "Номер груза: " + msg.CargoID + System.Environment.NewLine +
                          "Специалист СТО (заявитель в доставке): " + msg.STOSalesPersonName + System.Environment.NewLine +
                          "Подал ДТ: " + msg.RegUsername_Full;
                try
                {
                    _ = bx_logon.SendCommand("log.blogpost.add", "",
                    "USER_ID=1716" +
                    "&POST_TITLE=Незавершенное обязательство не взято в управление в течение 24 часов" +
                    "&POST_MESSAGE=" + message +
                    "&DEST[0]=SG330"
                    );
                }
                catch
                {
                    continue;
                }

                msg.message_sent = 1;
            }

            db.SubmitChanges();

            var commentsToSend = db.obligations_take.Where(c => 
                c.has_specialist == 0 
                && c.date_notice != null
                && DateTime.Now > c.date_notice.Value
                ).Select(c => c);

            foreach (obligations_take comment in commentsToSend)
            {
                try
                {
                    _ = bx_logon.SendCommand("log.blogcomment.add", "",
                      "USER_ID=1716" +
                      "&POST_ID=" + comment.bitrix_message_id.ToString() +
                      "&TEXT=Незавершенное обязательство по-прежнему не взято в управление"
                      );
                }
                catch
                {
                    continue;
                }

                comment.date_notice = comment.date_notice.Value.AddDays(1);
            }

            db.SubmitChanges();

            Dts.Connections["10.10.0.28.automation.phpuser"].ReleaseConnection(connection);
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Bitrix24.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
#endregion
using System.IO;
using System.Net;
using System.Text;

partial class Bitrix24
{
    public string SendCommand(string Command, string GetParams = "", string PostParams = "")
    {
        string BX_REST_URI = "https://bitrix.eltransplus.ru/rest/1/szxa4ogn53mr5x0z/" + Command + ".json";

        if (String.IsNullOrEmpty(GetParams) == false)
        {
            BX_REST_URI = BX_REST_URI + "&" + GetParams;
        }

        //Создаем новое HTTP подключение для отправки REST-запроса в Битрикс24
        HttpWebRequest requestBitrixREST = (HttpWebRequest)WebRequest.Create(BX_REST_URI);
        requestBitrixREST.Method = "POST";

        //Готовим тело запроса и вставляем его в тело POST-запроса  
        byte[] byteArrayBody = Encoding.UTF8.GetBytes(PostParams);
        requestBitrixREST.ContentType = "application/x-www-form-urlencoded";
        requestBitrixREST.ContentLength = byteArrayBody.Length;

        Stream dataBodyStream = requestBitrixREST.GetRequestStream();
        dataBodyStream.Write(byteArrayBody, 0, byteArrayBody.Length);
        dataBodyStream.Close();

        //Отправляем данные в Битрикс24
        HttpWebResponse responseBitrixREST = (HttpWebResponse)requestBitrixREST.GetResponse();

        //Читаем тело ответа от Битрикс24
        Stream dataStreamBitrixREST = responseBitrixREST.GetResponseStream();
        var readerBitrixREST = new StreamReader(dataStreamBitrixREST);
        string stringBitrixREST = readerBitrixREST.ReadToEnd();

        //Закрываем все подключения и потоки
        readerBitrixREST.Close();
        dataStreamBitrixREST.Close();
        responseBitrixREST.Close();

        //Возвращаем строку ответа в формате JSON
        return stringBitrixREST;
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_7639802c320a4eaa97aae0ef685da060.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FAA850E3-1365-411C-9F7F-019988C4C350}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7639802c320a4eaa97aae0ef685da060</RootNamespace>
    <AssemblyName>ST_7639802c320a4eaa97aae0ef685da060</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Aberration.cs" />
    <Compile Include="Bitrix24.cs" />
    <Compile Include="objLogonBitrixOAuth.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7639802c320a4eaa97aae0ef685da060</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7639802c320a4eaa97aae0ef685da060</msb:DisplayName>
		<msb:ProjectId>{A9122BC1-F625-415B-BA6D-DE98FEE4844D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7639802c320a4eaa97aae0ef685da060.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Aberration.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="Bitrix24.cs"/>
		<msb:File Include="objLogonBitrixOAuth.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7639802c320a4eaa97aae0ef685da060.Properties.Settings.get_Default():ST_7639802c320a4eaa97aae0ef685da060.Properties.Sett" +
    "ings")]

namespace ST_7639802c320a4eaa97aae0ef685da060.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="objLogonBitrixOAuth.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
#endregion
using System.Runtime.Serialization;

partial class Bitrix24
    {
    [DataContract]
        public class objLogonBitrixOAuth
        {
            [DataMember]
            public string expires_in { get; set; }
            [DataMember]
            public string refresh_token { get; set; }
            [DataMember]
            public string access_token { get; set; }
        }
    }]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7639802c320a4eaa97aae0ef685da060")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7639802c320a4eaa97aae0ef685da060")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
[assembly: NeutralResourcesLanguage("ru")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7639802c320a4eaa97aae0ef685da060.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7639802c320a4eaa97aae0ef685da060.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7639802c320a4eaa97aae0ef685da060.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7639802c320a4eaa97aae0ef685da060.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7639802c320a4eaa97aae0ef685da060.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7639802c320a4eaa97aae0ef685da060.dll">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
AAAEKhp+EwAABCoeAoATAAAEKhp+FAAABCoeAihYAAAKKi5zMQAABoAUAAAEKh4CexUAAAQqIgID
fRUAAAQqHgJ7FgAABCoiAgN9FgAABCoeAnsXAAAEKiICA30XAAAEKi5zOwAABoAbAAAEKgAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAwNAAAjfgAAeA0AAFgNAAAjU3RyaW5n
cwAAAADQGgAAuAQAACNVUwCIHwAAEAAAACNHVUlEAAAAmB8AAEgHAAAjQmxvYgAAAAAAAAACAAAB
Vx2iCQkLAAAA+gEzABYAAAEAAABGAAAACgAAABsAAAA7AAAAHQAAAFgAAAAEAAAAMQAAAAQAAAAF
AAAAFwAAACsAAAAEAAAAAQAAAAgAAAABAAAAAwAAAAUAAAAAAMcHAQAAAAAABgDhBawKBgCGBqwK
BgD3BJkKDwAgCwAABgAkBZEJBgCwBZEJBgCRBZEJBgBtBpEJBgAXBpEJBgAwBpEJBgBNBZEJBgDG
BMwKBgBoBcoGBgD7C0UICgABBmQJBgCOBKwKCgDNBWQJDgA7BeQGDgDkDA0KDgAlAuQGEgCjCeoA
DgAlAA0KDgDoBOQGBgAtAEUIBgBYA0UIDgCBBeQGFgBLBm0HFgAOBG0HEgDVCUoMGgACCZMLBgBg
AAMBBgBiCEUIBgCpBJkKBgBGCswKBgD5CU8JHgBzBLEHHgALBbEHHgAqBDoJBgD/BkUIHgCeDAkM
HgCaDAkMBgDBBtgMBgA1CLIAHgBGBAkMHgBCBAkMBgAqCrIABgA3CrIADgAcAuQGFgCfB20HIgDC
C4UDIgBWCoUDBgC8A0UIBgCJAkUIGgAvCZMLBgADBJEJBgB1AkUIBgDuCZEJGgDxCJMLBgBuAEUI
GgAWCZMLGgApCZMLBgB0AEUIGgBTAJMLGgBrAh4KGgBGAB4KBgA4AAMBBgBgDEUIBgByCqsLBgBf
AkUIBgAODZEJAAAAAJEAAAAAAAEAAQAAABAAewAAADkAAQABAAEAEADwDAEATQABAAMAAQAQAEUC
AQA5AAIACQABABAA5ggBAHEAEgAqAAAAEADTCj0LOQASACwAAAEQAHULPQuZABQAMAACABAAOgcA
ADkAFQAzAAMBAADeCwAAgQAYADoAAyEQAP8AAAA5ABsAOgARADMCLwIBAFoBMwIBAIwMMwIBAG4B
NgIBANgC5wABACsD5wABAFADPQIBAFoI5wABACcN5wABAKkA5wABAAMD5wABAAcI5wABAHYDPQIB
ADcBNgIBABoHQQIBAP8BQQIBAL8MMwIRAGcISQIRAPMDTgIRAAwCUwIBAK8B5wABAHIB5wABAJEB
5wAGBtsAMwJWgM4LVwJWgNMDVwI2AI0AWwJQIAAAAACGANUBXwIBAP0gAAAAAIYYjAoGAAQABSEA
AAAAhhiMChAABAATIQAAAACGGIwKZgIFACEhAAAAAIYYjApmAAYAKyEAAAAAhhiMCm0ACAA1IQAA
AACGCEECbAIKAD0hAAAAAJEYkgp1AgoA/SAAAAAAhhiMCgYACgBJIQAAAACGCEoBeQIKAFEhAAAA
AIYIVwEBAAoAYyEAAAAAhgh4DHkCCwBrIQAAAACGCIkMAQALAH0hAAAAAIYIZAF9AgwAiCEAAAAA
hghrAYUCDADIIQAAAACGCMECYgANANAhAAAAAIYI1QIQAA0A5yEAAAAAhggXA2IADgDvIQAAAACG
CCgDEAAOAAYiAAAAAIYIOQOOAg8ADiIAAAAAhghNA5MCDwAlIgAAAACGCEwIYgAQAC0iAAAAAIYI
VwgQABAARCIAAAAAhggXDWIAEQBMIgAAAACGCCQNEAARAGMiAAAAAIYImgBiABIAayIAAAAAhgim
ABAAEgCCIgAAAACGCOkCYgATAIoiAAAAAIYIAAMQABMAoSIAAAAAhgjvB2IAFACpIgAAAACGCAQI
EAAUAMAiAAAAAIYIYQOOAhUAyCIAAAAAhghzA5MCFQDfIgAAAACGCB4BfQIWAOgiAAAAAIYINAGF
AhYAKCMAAAAAhggGB5kCFwAwIwAAAACGCBcHogIXAIEjAAAAAIYI7AGZAhgAjCMAAAAAhgj8AaIC
GADdIwAAAACGCKkMeQIZAOUjAAAAAIYIvAwBABkA+CMAAAAAhgDsCAYAGgCAKAAAAACGGIwKBgAa
AP0gAAAAAIMYjAoGABoAiCgAAAAAkwhCCqwCGgC0KAAAAACTCNsDsgIaALsoAAAAAJMI5wO4AhoA
wygAAAAAlggUDL8CGwDKKAAAAACGGIwKBgAbANIoAAAAAJEYkgp1AhsA3igAAAAAhgjICGIAGwDm
KAAAAACGCNcIEAAbAO8oAAAAAIYIgghiABwA9ygAAAAAhgiUCBAAHAAAKQAAAACGCKYIYgAdAAgp
AAAAAIYItwgQAB0A/SAAAAAAhhiMCgYAHgARKQAAAACRGJIKdQIeAP0gAAAAAIYYjAoGAB4AAAAB
ANkBEBACAH4LEBADAIgLAAABAOMJAAABAOMJAAABAOMJAAACADMCAAABAOMJAAACADMCAAABALsG
AAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAAB
ALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsGAAABALsG
CQCMCgEAEQCMCgYAGQCMCgoAKQCMChAAMQCMChAAOQCMChAAQQCMChAASQCMChAAUQCMChAAWQCM
ChAAYQCMChAAaQCMChAAeQCMCgYAgQCMCgYAiQCMCgYAkQCMCgYAuQCMCgYA0QCMCgYA2QCMCgYA
CQGMCgYAKQGMChUAOQH0CyMAOQE/DSoAQQFsBC8AQQHhARAAUQGEADYAUQFsCzwAQQGxAxAAQQEo
B0IAQQErCEcAWQGIBE0AWQFeBAYAQQFSBFUAYQEZCEcAcQGMClsAeQHLAWIAeQFeBAYAYQFeBAYA
cQCMCgYAmQCMCmYAmQCMCm0AmQBWAnUAgQGMCgYADAAgDJcADACuBpwAOQExDaAAyQAxDaYAFACu
BpwAFAAgDJcAOQFHDecA4QDWC+oAiQG+C/AAkQE8CPYAiQGBCf0AmQGxCQEBoQGvAgYBsQFoCg8B
uQGbAhgBsQFNDSEBsQFBDC0BsQGZBzcBsQHjAEMBAQLBA18BAQICDIoBHAB+CrkBJABsDJcAGQKl
A8kByQD9BmIAOQH0C80BIQLPDJwAKQJkBAYAmQAvCwYAsQGWB9MBsQEFCjcByQACDeMBFACkBpcA
uQGbAugByQBzCKYAsQF2CNMBcQD9BmIAyQDsC/QBFACMCvoBmQHDCQACiQEyDAEA4QCMCgYAoQEK
DQUCEQGMCgsCMQGMCgYADgAJAAAADgANAAAACABkACUCCABoACoCLgALAPwCLgATAAUDLgAbACQD
LgAjAC0DLgArAFYDLgAzAFYDLgA7AFYDLgBDAC0DLgBLAFwDLgBTAFYDLgBbAHMDLgBjAHsDSQCT
AAgEYwCDAMUDaQCTAGEEgwCLANwDiQCTAJQEowCbACoCqQCTALQEwwCjACoCyQCTAOoE6QCTAB0F
AwFrACoCCQGTAFgFKQGTAIQFQwFzACoCSQGTALIFaQGTAN8FiQGTABgGqQGTAE4GyQGTAIcG6QGT
ALYGCQKTAOUGKQKTABMHSQKrACQDaQKrACQDgQJzACoCoQJzACoCqQJ7ACoCwQJzACoCyQJ7ACoC
4QJzACoC6QJ7ACoCYAZzACoCgAZzACoCoAZzACoCwAZzACoC4AZzACoCAAdzACoCHACEAK4AxAAD
AAEABAACAAYAEgAHABQACAAVAAAARQLEAgAAWwHNAgAAjQzNAgAAbwHRAgAA2QLZAgAALAPZAgAA
UQPdAgAAWwjZAgAAKA3ZAgAAqgDZAgAABAPZAgAACAjZAgAAdwPdAgAAOAHRAgAAGwfiAgAAAALi
AgAAwAzNAgAARgrrAgAA+wPxAgAAKgz3AgAA2wjZAgAAmAjZAgAAuwjZAgIABwADAAIACgAFAAEA
CwAFAAIADAAHAAEADQAHAAIADgAJAAEADwAJAAIAEAALAAEAEQALAAIAEgANAAEAEwANAAIAFAAP
AAEAFQAPAAIAFgARAAEAFwARAAIAGAATAAEAGQATAAIAGgAVAAEAGwAVAAIAHAAXAAEAHQAXAAIA
HgAZAAEAHwAZAAIAIAAbAAEAIQAbAAIAIgAdAAEAIwAdAAIAJAAfAAEAJQAfAAIAJgAhAAEAJwAh
AAIAKAAjAAEAKQAjAAIALQAlAAIALgAnAAEALwAnAAIAMAApAAIAMwArAAEANAArAAIANQAtAAEA
NgAtAAIANwAvAAEAOAAvAJEAvQCxAcIBBIAAAAEAAADoHd16AAAAAAAAAQAAAAQAAAAAAAAAAAAA
ABMC9gAAAAAABAAAAAAAAAAAAAAAEwJkCQAAAAAEAAAAAAAAAAAAAAATAg0KAAAAAAQAAAAAAAAA
AAAAABMC6gAAAAAADQAAAAAAAAAAAAAAHAJOBwAAAAAEAAAAAAAAAAAAAAATAscDAAAAAAQAAAAA
AAAAAAAAABMCRQgAAAAADQAAAAAAAAAAAAAAHAK8AAAAAAAAAAAAAQAAAN0KAAAIAAIACQAFAAoA
BQBVAH8AfQBUAX8AfwB9AH4BgQCqAQAAAAAAU1RfNzYzOTgwMmMzMjBhNGVhYTk3YWFlMGVmNjg1
ZGEwNjAAVGFibGVgMQBOdWxsYWJsZWAxAElFbnVtZXJhYmxlYDEASVF1ZXJ5YWJsZWAxAEV4cHJl
c3Npb25gMQBJRW51bWVyYXRvcmAxAEludDMyAEZ1bmNgMgBCaXRyaXgyNABnZXRfVVRGOAA8PjkA
PE1vZHVsZT4AZ2V0X0NhcmdvSUQAc2V0X0NhcmdvSUQAU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAExhbWJkYQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgA8PmMA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X2JpdHJpeF9tZXNzYWdlX2lkAHNldF9iaXRy
aXhfbWVzc2FnZV9pZABnZXRfdGFibGVfaWQAc2V0X3RhYmxlX2lkAGdldF9pZABzZXRfaWQAPHJl
ZnJlc2hfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxk
ADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZABSZWFkVG9FbmQAU2VuZENvbW1hbmQAc2V0X01l
dGhvZABnZXRfZGF0ZV9ub3RpY2UAc2V0X2RhdGVfbm90aWNlAGRlZmF1bHRJbnN0YW5jZQBBdHRy
aWJ1dGVNYXBwaW5nU291cmNlAG1hcHBpbmdTb3VyY2UAZ2V0X29ibGlnYXRpb25zX3Rha2UAR2V0
VGFibGUASURpc3Bvc2FibGUAUXVlcnlhYmxlAFJ1bnRpbWVNZXRob2RIYW5kbGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0TWV0aG9kRnJvbUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfT2JsaWdh
dGlvbl9OYW1lAHNldF9PYmxpZ2F0aW9uX05hbWUAZ2V0X1NUT1NhbGVzUGVyc29uTmFtZQBzZXRf
U1RPU2FsZXNQZXJzb25OYW1lAGdldF9DdXN0b21lck5hbWUAc2V0X0N1c3RvbWVyTmFtZQBnZXRf
SW1wb3J0X0RhdGVUaW1lAHNldF9JbXBvcnRfRGF0ZVRpbWUAZ2V0X2xvYWRfZGF0ZXRpbWUAc2V0
X2xvYWRfZGF0ZXRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBnZXRfTmV3TGlu
ZQBzZXRfQ29udGVudFR5cGUAV2hlcmUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASHR0cFdlYlJlc3BvbnNlAEdldFJlc3Bv
bnNlAENsb3NlAERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFdyaXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUATmV1dHJh
bFJlc291cmNlc0xhbmd1YWdlQXR0cmlidXRlAFRhYmxlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUARGF0
YWJhc2VBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAENvbHVtbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBEYXRhTWVtYmVyQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBnZXRfSGFzVmFsdWUAdmFsdWUARW5jb2RpbmcAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTeXN0ZW0uRGF0YS5MaW5xLk1hcHBpbmcAVG9TdHJpbmcA
Z2V0X2RhdGVfcHVibGlzaABzZXRfZGF0ZV9wdWJsaXNoAHNldF9Db250ZW50TGVuZ3RoAG9iakxv
Z29uQml0cml4T0F1dGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sATm90RXF1YWwAU2NyaXB0T2JqZWN0TW9kZWwA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzc2Mzk4MDJjMzIwYTRlYWE5N2FhZTBlZjY4NWRhMDYw
LmRsbABnZXRfUmVnVXNlcm5hbWVfRnVsbABzZXRfUmVnVXNlcm5hbWVfRnVsbABHZXRSZXNwb25z
ZVN0cmVhbQBHZXRSZXF1ZXN0U3RyZWFtAGdldF9JdGVtAFN5c3RlbQBnZXRfUmVnTnVtAHNldF9S
ZWdOdW0ARW51bQByZXNvdXJjZU1hbgBvcF9HcmVhdGVyVGhhbgBnZXRfcmVmcmVzaF90b2tlbgBz
ZXRfcmVmcmVzaF90b2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBNZW1iZXJFeHByZXNzaW9uAFBhcmFt
ZXRlckV4cHJlc3Npb24AQ29uc3RhbnRFeHByZXNzaW9uAEJpbmFyeUV4cHJlc3Npb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFs
aXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24ASURiQ29ubmVjdGlvbgBB
Y3F1aXJlQ29ubmVjdGlvbgBSZWxlYXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAGNvbm5lY3Rp
b24ATWV0aG9kSW5mbwBDdWx0dXJlSW5mbwBBbmRBbHNvAFN5c3RlbS5EYXRhLkxpbnEAU3lzdGVt
LkxpbnEAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0
aW9uTWFuYWdlcgBQYXJhbWV0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0
b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTVF83NjM5ODAyYzMyMGE0ZWFhOTdhYWUwZWY2ODVkYTA2MC5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU3VibWl0Q2hhbmdlcwBTVF83
NjM5ODAyYzMyMGE0ZWFhOTdhYWUwZWY2ODVkYTA2MC5Qcm9wZXJ0aWVzAEdldEJ5dGVzAFNldHRp
bmdzAEdldFBhcmFtcwBQb3N0UGFyYW1zAFN5c3RlbS5MaW5xLkV4cHJlc3Npb25zAFN5c3RlbS5D
b2xsZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMA
QWRkRGF5cwBDb25jYXQAT2JqZWN0AFNlbGVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AEdldFZh
bHVlT3JEZWZhdWx0AHNldF9UYXNrUmVzdWx0AENvbnN0YW50AFN5c3RlbS5EYXRhLlNxbENsaWVu
dABFbnZpcm9ubWVudABnZXRfQ3VycmVudABnZXRfbWVzc2FnZV9zZW50AHNldF9tZXNzYWdlX3Nl
bnQASHR0cFdlYlJlcXVlc3QAZ2V0X2hhc19zcGVjaWFsaXN0AHNldF9oYXNfc3BlY2lhbGlzdABN
b3ZlTmV4dABTeXN0ZW0uVGV4dABEYXRhQ29udGV4dABBYmVycmF0aW9uQ29udGV4dABnZXRfTm93
AGdldF9Bc3NlbWJseQBnZXRfRGVsaXZlcnkAc2V0X0RlbGl2ZXJ5AG9wX0luZXF1YWxpdHkASXNO
dWxsT3JFbXB0eQBQcm9wZXJ0eQAAAABtaAB0AHQAcABzADoALwAvAGIAaQB0AHIAaQB4AC4AZQBs
AHQAcgBhAG4AcwBwAGwAdQBzAC4AcgB1AC8AcgBlAHMAdAAvADEALwBzAHoAeABhADQAbwBnAG4A
NQAzAG0AcgA1AHgAMAB6AC8AAAsuAGoAcwBvAG4AAAMmAAAJUABPAFMAVAAAQ2EAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQAZQBkAAE7
MQAwAC4AMQAwAC4AMAAuADIAOAAuAGEAdQB0AG8AbQBhAHQAaQBvAG4ALgBwAGgAcAB1AHMAZQBy
AAADbQAAOR0EMAQ4BDwENQQ9BD4EMgQwBD0EOAQ1BCAAPgQxBE8ENwQwBEIENQQ7BEwEQQRCBDIE
MAQ6ACAAARUXBDAEOgQwBDcERwQ4BDoEOgAgAAE9FAQwBEIEMAQgADgEIAAyBEAENQQ8BE8EIAA3
BDAEMwRABEMENwQ6BDgEIAAyBCAAMQQwBDcEQwQ6ACAAARUdBD4EPAQ1BEAEIAAUBCIEOgAgAAEV
FAQ+BEEEQgQwBDIEOgQwBDoAIAABGx0EPgQ8BDUEQAQgADMEQARDBDcEMAQ6ACAAAU8hBD8ENQRG
BDgEMAQ7BDgEQQRCBCAAIQQiBB4EIAAoADcEMARPBDIEOARCBDUEOwRMBCAAMgQgADQEPgRBBEIE
MAQyBDoENQQpADoAIAABFR8EPgQ0BDAEOwQgABQEIgQ6ACAAASFsAG8AZwAuAGIAbABvAGcAcABv
AHMAdAAuAGEAZABkAAABAIDVVQBTAEUAUgBfAEkARAA9ADEANwAxADYAJgBQAE8AUwBUAF8AVABJ
AFQATABFAD0AHQQ1BDcEMAQyBDUEQARIBDUEPQQ9BD4ENQQgAD4EMQRPBDcEMARCBDUEOwRMBEEE
QgQyBD4EIAA9BDUEIAAyBDcETwRCBD4EIAAyBCAAQwQ/BEAEMAQyBDsENQQ9BDgENQQgADIEIABC
BDUERwQ1BD0EOAQ1BCAAMgA0ACAARwQwBEEEPgQyBCYAUABPAFMAVABfAE0ARQBTAFMAQQBHAEUA
PQABHSYARABFAFMAVABbADAAXQA9AFMARwAzADMAMAAAA2MAACdsAG8AZwAuAGIAbABvAGcAYwBv
AG0AbQBlAG4AdAAuAGEAZABkAAArVQBTAEUAUgBfAEkARAA9ADEANwAxADYAJgBQAE8AUwBUAF8A
SQBEAD0AAICHJgBUAEUAWABUAD0AHQQ1BDcEMAQyBDUEQARIBDUEPQQ9BD4ENQQgAD4EMQRPBDcE
MARCBDUEOwRMBEEEQgQyBD4EIAA/BD4ELQA/BEAENQQ2BD0ENQQ8BEMEIAA9BDUEIAAyBDcETwRC
BD4EIAAyBCAAQwQ/BEAEMAQyBDsENQQ9BDgENQQBcVMAVABfADcANgAzADkAOAAwADIAYwAzADIA
MABhADQAZQBhAGEAOQA3AGEAYQBlADAAZQBmADYAOAA1AGQAYQAwADYAMAAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAJUEanbAt60mDfMGe4HYxVwAEIAEBCAMg
AAEFIAEBEREEIAEBDgYgAQERgJEGBwMOHQUOBgADDg4ODgQAAQIOBgABEoChDgUAABKAqQUgAR0F
DgQgAQEKBSAAEoCtByADAR0FCAgFIAASgLEGIAEBEoCtAyAADgYgAgEOElEHIAIBElUSUQkwAQAV
ElkBHgAECgESEAwHAhURYQEIFRFhAQgFFRFhAQgEIAATAAMgAAIFAAICDg4HAAICEWURZQ4HAhUR
YQERZRURYQERZQYVEWEBEWUiBwsSCA4SdRIMEnkVEn0BEhASEBFlFRFhARFlEhAVEWEBCAIGDgUg
ABKAxQUgABKAyQYgARKAzRwDIAAcBCABHBwIAAESgNERgNUIAAISeRKA0Q4IAAESgN0RgOELAAIS
gOkSgNkSgOUJAAISgPEcEoDRCwACEoD1EoDZEoDZEBABAhUSgP0BHgASgNkdEnkKCgEVEoD5AhIQ
Ah4QAQIVEoEFAR4AFRKBBQEeABUSgP0BFRKA+QIeAAILCgEVEoD5AhIQEhAfEAICFRKBBQEeARUS
gQUBHgAVEoD9ARUSgPkCHgAeAQYKAhIQEhAHFRKBCQESEAggABUSfQETAAYVEn0BEhADAAAOBQAB
Dh0ODwAEEoD1EoDZEoDZAhKA5QQAABFlCwACEoDdEYDhEYDVBSABEWUNBSABARMABCABARwFIAAS
gRkHIAIBDhKBGQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAgYIBgYVEWEBCAMGEWUH
BhURYQERZQQGEoCJBAYSgI0DBhIcAwYRJAMGEigGIAMODg4OBSABARJVCCAAFRJZARIQAwAAAQMg
AAgHIAAVEWEBCAggAQEVEWEBCAQgABFlBSABARFlCCAAFRFhARFlCSABARURYQERZQUAABKAiQUA
ABKAjQYAAQESgI0EAAASHAgoABUSWQESEAMoAAgHKAAVEWEBCAMoAA4EKAARZQgoABURYQERZQUI
ABKAiQUIABKAjQQIABIcCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF83NjM5ODAyYzMyMGE0ZWFhOTdhYWUwZWY2ODVkYTA2MAAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIwAAAHAQACcnUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41FgEAAQBUDgROYW1l
CmFiZXJyYXRpb24rAQABAFQOBE5hbWUfYWJlcnJhdGlvbi5kYm8ub2JsaWdhdGlvbnNfdGFrZVgB
AAQAVA4HU3RvcmFnZQlfdGFibGVfaWRUDgZEYlR5cGUVSW50IE5PVCBOVUxMIElERU5USVRZVAIM
SXNQcmltYXJ5S2V5AVQCDUlzRGJHZW5lcmF0ZWQBMgEAAgBUDgdTdG9yYWdlDV9tZXNzYWdlX3Nl
bnRUDgZEYlR5cGUMSW50IE5PVCBOVUxMHwEAAgBUDgdTdG9yYWdlA19pZFQOBkRiVHlwZQNJbnQ1
AQACAFQOB1N0b3JhZ2UQX09ibGlnYXRpb25fTmFtZVQOBkRiVHlwZQxWYXJDaGFyKDEwMCkyAQAC
AFQOB1N0b3JhZ2UNX0N1c3RvbWVyTmFtZVQOBkRiVHlwZQxWYXJDaGFyKDE1MCk6AQACAFQOB1N0
b3JhZ2UQX0ltcG9ydF9EYXRlVGltZVQOBkRiVHlwZRFEYXRlVGltZSBOT1QgTlVMTCsBAAIAVA4H
U3RvcmFnZQdfUmVnTnVtVA4GRGJUeXBlC1ZhckNoYXIoMjUpLQEAAgBUDgdTdG9yYWdlCV9EZWxp
dmVyeVQOBkRiVHlwZQtWYXJDaGFyKDMwKSwBAAIAVA4HU3RvcmFnZQhfQ2FyZ29JRFQOBkRiVHlw
ZQtWYXJDaGFyKDIwKTgBAAIAVA4HU3RvcmFnZRNfU1RPU2FsZXNQZXJzb25OYW1lVA4GRGJUeXBl
DFZhckNoYXIoMjAwKTUBAAIAVA4HU3RvcmFnZRFfUmVnVXNlcm5hbWVfRnVsbFQOBkRiVHlwZQtW
YXJDaGFyKDQwKTgBAAIAVA4HU3RvcmFnZQ5fbG9hZF9kYXRldGltZVQOBkRiVHlwZRFEYXRlVGlt
ZSBOT1QgTlVMTC4BAAIAVA4HU3RvcmFnZRJfYml0cml4X21lc3NhZ2VfaWRUDgZEYlR5cGUDSW50
LgEAAgBUDgdTdG9yYWdlDV9kYXRlX3B1Ymxpc2hUDgZEYlR5cGUIRGF0ZVRpbWUtAQACAFQOB1N0
b3JhZ2UMX2RhdGVfbm90aWNlVA4GRGJUeXBlCERhdGVUaW1lNAEAAgBUDgdTdG9yYWdlD19oYXNf
c3BlY2lhbGlzdFQOBkRiVHlwZQxJbnQgTk9UIE5VTEy0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA4FAAAAAAAAAAAAAA
+lAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOxQAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAA
AAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
3XroHQAAAQDdeugdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
AAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA3ADYAMwA5
ADgAMAAyAGMAMwAyADAAYQA0AGUAYQBhADkANwBhAGEAZQAwAGUAZgA2ADgANQBkAGEAMAA2ADAA
AAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA2ADUANgAuADMAMQA0
ADUAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA3ADYAMwA5ADgA
MAAyAGMAMwAyADAAYQA0AGUAYQBhADkANwBhAGEAZQAwAGUAZgA2ADgANQBkAGEAMAA2ADAALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADcA
NgAzADkAOAAwADIAYwAzADIAMABhADQAZQBhAGEAOQA3AGEAYQBlADAAZQBmADYAOAA1AGQAYQAw
ADYAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA3ADYA
MwA5ADgAMAAyAGMAMwAyADAAYQA0AGUAYQBhADkANwBhAGEAZQAwAGUAZgA2ADgANQBkAGEAMAA2
ADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA1ADYA
LgAzADEANAA1ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANgA1ADYALgAzADEANAA1ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAADDEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Сообщения по просроченным"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{AECC9927-A99D-4B74-8C51-76CDB3C79990}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Сообщения по просроченным"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c4cda4674fd44832910fa87dc2f79d2e"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Overdue.cs"
            Encoding="UTF8"><![CDATA[using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System;

namespace ST_c4cda4674fd44832910fa87dc2f79d2e
{
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aberration")]
	public partial class OverdueContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertobligations_overdue(obligations_overdue instance);
    partial void Updateobligations_overdue(obligations_overdue instance);
    partial void Deleteobligations_overdue(obligations_overdue instance);
    #endregion
		
		public OverdueContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OverdueContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OverdueContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OverdueContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<obligations_overdue> obligations_overdue
		{
			get
			{
				return this.GetTable<obligations_overdue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name= "aberration.dbo.obligations_overdue")]
	public partial class obligations_overdue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _id;
		
		private string _Obligation_Name;
		
		private System.Nullable<System.DateTime> _Marginal_Action_Date;
		
		private string _CustomerName;
		
		private string _Delivery;
		
		private string _RegNum;
		
		private string _Specialist;
		
		private int _table_id;
		
		private System.DateTime _load_datetime;
		
		private int _message_sent;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Nullable<int> value);
    partial void OnidChanged();
    partial void OnObligation_NameChanging(string value);
    partial void OnObligation_NameChanged();
    partial void OnMarginal_Action_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnMarginal_Action_DateChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnDeliveryChanging(string value);
    partial void OnDeliveryChanged();
    partial void OnRegNumChanging(string value);
    partial void OnRegNumChanged();
    partial void OnSpecialistChanging(string value);
    partial void OnSpecialistChanged();
    partial void Ontable_idChanging(int value);
    partial void Ontable_idChanged();
    partial void Onload_datetimeChanging(System.DateTime value);
    partial void Onload_datetimeChanged();
    partial void Onmessage_sentChanging(int value);
    partial void Onmessage_sentChanged();
    #endregion
		
		public obligations_overdue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obligation_Name", DbType="VarChar(100)")]
		public string Obligation_Name
		{
			get
			{
				return this._Obligation_Name;
			}
			set
			{
				if ((this._Obligation_Name != value))
				{
					this.OnObligation_NameChanging(value);
					this.SendPropertyChanging();
					this._Obligation_Name = value;
					this.SendPropertyChanged("Obligation_Name");
					this.OnObligation_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marginal_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Marginal_Action_Date
		{
			get
			{
				return this._Marginal_Action_Date;
			}
			set
			{
				if ((this._Marginal_Action_Date != value))
				{
					this.OnMarginal_Action_DateChanging(value);
					this.SendPropertyChanging();
					this._Marginal_Action_Date = value;
					this.SendPropertyChanged("Marginal_Action_Date");
					this.OnMarginal_Action_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(150)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(30)")]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this.OnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._Delivery = value;
					this.SendPropertyChanged("Delivery");
					this.OnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNum", DbType="VarChar(25)")]
		public string RegNum
		{
			get
			{
				return this._RegNum;
			}
			set
			{
				if ((this._RegNum != value))
				{
					this.OnRegNumChanging(value);
					this.SendPropertyChanging();
					this._RegNum = value;
					this.SendPropertyChanged("RegNum");
					this.OnRegNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialist", DbType="VarChar(50)")]
		public string Specialist
		{
			get
			{
				return this._Specialist;
			}
			set
			{
				if ((this._Specialist != value))
				{
					this.OnSpecialistChanging(value);
					this.SendPropertyChanging();
					this._Specialist = value;
					this.SendPropertyChanged("Specialist");
					this.OnSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_table_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int table_id
		{
			get
			{
				return this._table_id;
			}
			set
			{
				if ((this._table_id != value))
				{
					this.Ontable_idChanging(value);
					this.SendPropertyChanging();
					this._table_id = value;
					this.SendPropertyChanged("table_id");
					this.Ontable_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_load_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime load_datetime
		{
			get
			{
				return this._load_datetime;
			}
			set
			{
				if ((this._load_datetime != value))
				{
					this.Onload_datetimeChanging(value);
					this.SendPropertyChanging();
					this._load_datetime = value;
					this.SendPropertyChanged("load_datetime");
					this.Onload_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message_sent", DbType="Int NOT NULL")]
		public int message_sent
		{
			get
			{
				return this._message_sent;
			}
			set
			{
				if ((this._message_sent != value))
				{
					this.Onmessage_sentChanging(value);
					this.SendPropertyChanging();
					this._message_sent = value;
					this.SendPropertyChanged("message_sent");
					this.Onmessage_sentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591]]></ProjectItem>
          <ProjectItem
            Name="Bitrix24.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
#endregion
using System.IO;
using System.Net;
using System.Text;

partial class Bitrix24
{
    public string SendCommand(string Command, string GetParams = "", string PostParams = "")
    {
        string BX_REST_URI = "https://bitrix.eltransplus.ru/rest/1/szxa4ogn53mr5x0z/" + Command + ".json";

        if (String.IsNullOrEmpty(GetParams) == false)
        {
            BX_REST_URI = BX_REST_URI + "&" + GetParams;
        }

        //Создаем новое HTTP подключение для отправки REST-запроса в Битрикс24
        HttpWebRequest requestBitrixREST = (HttpWebRequest)WebRequest.Create(BX_REST_URI);
        requestBitrixREST.Method = "POST";

        //Готовим тело запроса и вставляем его в тело POST-запроса  
        byte[] byteArrayBody = Encoding.UTF8.GetBytes(PostParams);
        requestBitrixREST.ContentType = "application/x-www-form-urlencoded";
        requestBitrixREST.ContentLength = byteArrayBody.Length;

        Stream dataBodyStream = requestBitrixREST.GetRequestStream();
        dataBodyStream.Write(byteArrayBody, 0, byteArrayBody.Length);
        dataBodyStream.Close();

        //Отправляем данные в Битрикс24
        HttpWebResponse responseBitrixREST = (HttpWebResponse)requestBitrixREST.GetResponse();

        //Читаем тело ответа от Битрикс24
        Stream dataStreamBitrixREST = responseBitrixREST.GetResponseStream();
        var readerBitrixREST = new StreamReader(dataStreamBitrixREST);
        string stringBitrixREST = readerBitrixREST.ReadToEnd();

        //Закрываем все подключения и потоки
        readerBitrixREST.Close();
        dataStreamBitrixREST.Close();
        responseBitrixREST.Close();

        //Возвращаем строку ответа в формате JSON
        return stringBitrixREST;
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_c4cda4674fd44832910fa87dc2f79d2e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ACF59E87-19FF-4172-A04A-02B15CE8073F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c4cda4674fd44832910fa87dc2f79d2e</RootNamespace>
    <AssemblyName>ST_c4cda4674fd44832910fa87dc2f79d2e</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Bitrix24.cs" />
    <Compile Include="objLogonBitrixOAuth.cs" />
    <Compile Include="Overdue.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c4cda4674fd44832910fa87dc2f79d2e</msb:CodeName>
		<msb:DisplayName>ST_c4cda4674fd44832910fa87dc2f79d2e</msb:DisplayName>
		<msb:ProjectId>{63970D7A-E627-4E46-9065-4F5507A41BBE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c4cda4674fd44832910fa87dc2f79d2e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="Overdue.cs"/>
		<msb:File Include="Bitrix24.cs"/>
		<msb:File Include="objLogonBitrixOAuth.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Linq;
#endregion

namespace ST_c4cda4674fd44832910fa87dc2f79d2e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Bitrix24 bx_logon = new Bitrix24();
            string message = String.Empty;

            SqlConnection connection = (SqlConnection)Dts.Connections["10.10.0.28.automation.phpuser"].AcquireConnection(Dts.Transaction);

            OverdueContext db = new OverdueContext(connection);

            var messagesToSend = db.obligations_overdue.Where(m => m.message_sent == 0).Select(m => m);

            foreach (obligations_overdue msg in messagesToSend)
            {
                message = "Наименование обязательства: " + msg.Obligation_Name + System.Environment.NewLine +
                          "Заказчик: " + msg.CustomerName + System.Environment.NewLine +
                          "Предельная дата предоставления документов/подачи ДТ: " + msg.Marginal_Action_Date + System.Environment.NewLine +
                          "Номер ДТ: " + msg.RegNum + System.Environment.NewLine +
                          "Доставка: " + msg.Delivery + System.Environment.NewLine +
                          "Специалист, управляющий обязательством: " + msg.Specialist;
                try
                {
                    _ = bx_logon.SendCommand("log.blogpost.add", "",
                    "USER_ID=1716" +
                    "&POST_TITLE=Просрочено исполнение незавершенного обязательства" +
                    "&POST_MESSAGE=" + message +
                    "&DEST[0]=SG330"
                    );
                }
                catch
                {
                    continue;
                }

                msg.message_sent = 1;
            }

            db.SubmitChanges();
            Dts.Connections["10.10.0.28.automation.phpuser"].ReleaseConnection(connection);
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4cda4674fd44832910fa87dc2f79d2e.Properties.Settings.get_Default():ST_c4cda4674fd44832910fa87dc2f79d2e.Properties.Sett" +
    "ings")]

namespace ST_c4cda4674fd44832910fa87dc2f79d2e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="objLogonBitrixOAuth.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
#endregion
using System.Runtime.Serialization;

partial class Bitrix24
    {
    [DataContract]
        public class objLogonBitrixOAuth
        {
            [DataMember]
            public string expires_in { get; set; }
            [DataMember]
            public string refresh_token { get; set; }
            [DataMember]
            public string access_token { get; set; }
        }
    }]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c4cda4674fd44832910fa87dc2f79d2e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c4cda4674fd44832910fa87dc2f79d2e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
[assembly: NeutralResourcesLanguage("ru")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4cda4674fd44832910fa87dc2f79d2e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4cda4674fd44832910fa87dc2f79d2e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4cda4674fd44832910fa87dc2f79d2e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c4cda4674fd44832910fa87dc2f79d2e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c4cda4674fd44832910fa87dc2f79d2e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c4cda4674fd44832910fa87dc2f79d2e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD1r218AAAAAAAAAAOAAIiALATAAADAAAAAIAAAAAAAAHk8A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMxOAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJC8AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
TwAAAAAAAEgAAAACAAUAoCcAAHQmAAABAAAAAAAAABROAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgChAAAAAQAAEXIBAABwA3JvAABwKBYAAAoKBCgXAAAK
LQ0GcnsAAHAEKBYAAAoKBigYAAAKdC8AAAElcn8AAHBvGQAACigaAAAKBW8bAAAKCyVyiQAAcG8c
AAAKJQeOaWpvHQAACiVvHgAACiUHFgeOaW8fAAAKbyAAAApvIQAACnQzAAABJW8iAAAKJXMjAAAK
JW8kAAAKDG8lAAAKbyAAAApvJgAACggqHgIoJwAACio2AgN+AQAABCgoAAAKKjYCA34BAAAEKCkA
AAoqJgIDBCgoAAAKKiYCAwQoKQAACioeAigBAAArKi5zKwAACoABAAAEKh4CewMAAAQqAAAAEzAD
AEUAAAACAAARAnsDAAAECgMLEgAoLAAAChIBKCwAAAr+ARIAKC0AAAoSASgtAAAK/gFfLRgCbyIA
AAYCA30DAAAEAnLNAABwbyMAAAYqHgJ7BAAABCqeAnsEAAAEAyguAAAKLBgCbyIAAAYCA30EAAAE
AnLTAABwbyMAAAYqHgJ7BQAABCoAAAATMAIAVgAAAAMAABECewUAAAQKAwsSACgvAAAKEgEoLwAA
Ci4DFysfEgAoLwAACi0DFisTEgAoMAAAChIBKDAAAAooMQAACiwYAm8iAAAGAgN9BQAABAJy8wAA
cG8jAAAGKh4CewYAAAQqngJ7BgAABAMoLgAACiwYAm8iAAAGAgN9BgAABAJyHQEAcG8jAAAGKh4C
ewcAAAQqngJ7BwAABAMoLgAACiwYAm8iAAAGAgN9BwAABAJyNwEAcG8jAAAGKh4CewgAAAQqngJ7
CAAABAMoLgAACiwYAm8iAAAGAgN9CAAABAJySQEAcG8jAAAGKh4CewkAAAQqngJ7CQAABAMoLgAA
CiwYAm8iAAAGAgN9CQAABAJyVwEAcG8jAAAGKh4CewoAAAQqigJ7CgAABAMuGAJvIgAABgIDfQoA
AAQCcm0BAHBvIwAABioeAnsLAAAEKp4CewsAAAQDKDEAAAosGAJvIgAABgIDfQsAAAQCcn8BAHBv
IwAABioeAnsMAAAEKooCewwAAAQDLhgCbyIAAAYCA30MAAAEAnKbAQBwbyMAAAYqEzADACkAAAAE
AAARAnsNAAAECgYLBwMoMgAACnQaAAABDAJ8DQAABAgHKAIAACsKBgcz3yoAAAATMAMAKQAAAAQA
ABECew0AAAQKBgsHAyg0AAAKdBoAAAEMAnwNAAAECAcoAgAAKwoGBzPfKgAAABMwAwApAAAABQAA
EQJ7DgAABAoGCwcDKDIAAAp0GwAAAQwCfA4AAAQIBygDAAArCgYHM98qAAAAEzADACkAAAAFAAAR
AnsOAAAECgYLBwMoNAAACnQbAAABDAJ8DgAABAgHKAMAACsKBgcz3ypqAnsNAAAELBECew0AAAQC
fgIAAARvNQAACipuAnsOAAAELBICew4AAAQCA3M2AAAKbzcAAAoqQn44AAAKczkAAAqAAgAABCoA
AAAbMAYADwIAAAYAABFzAgAABgp+OAAACgsCKDoAAApvOwAACnK1AQBwbzwAAAoCKDoAAApvPQAA
Cm8+AAAKdCMAAAEMCHMEAAAGDQlvBwAABtAEAAACKD8AAApy8QEAcChAAAAKEwQRBNAcAAAGKEEA
AAp0QgAAAShCAAAKFoxEAAAB0EQAAAEoPwAACihDAAAKKEQAAAoXjSQAAAElFhEEoigEAAArKAUA
ACvQBAAAAig/AAAKcvEBAHAoQAAAChMEEQQXjSQAAAElFhEEoigGAAArKAcAACtvSAAAChMFOO8A
AAARBW9JAAAKEwYfEY0tAAABJRZy9QEAcKIlFxEGbwwAAAaiJRgoSgAACqIlGXIvAgBwoiUaEQZv
EAAABqIlGyhKAAAKoiUcckUCAHCiJR0RBm8OAAAGEwcSB/4WAgAAG29LAAAKoiUeKEoAAAqiJR8J
crECAHCiJR8KEQZvFAAABqIlHwsoSgAACqIlHwxyxwIAcKIlHw0RBm8SAAAGoiUfDihKAAAKoiUf
D3LdAgBwoiUfEBEGbxYAAAaiKEwAAAoLBnIvAwBwclEDAHByUwMAcAdyBgQAcCgWAAAKbwEAAAYm
3gMm3ggRBhdvHQAABhEFb00AAAo6Bf///94MEQUsBxEFb04AAArcCW9PAAAKAig6AAAKbzsAAApy
tQEAcG88AAAKCG9QAAAKAig6AAAKFm9RAAAKKgBBNAAAAAAAAJkBAAAjAAAAvAEAAAMAAAAOAAAB
AgAAANMAAAACAQAA1QEAAAwAAAAAAAAAHgIoUgAACiqufg8AAAQtHnIkBABw0AYAAAIoPwAACm9T
AAAKc1QAAAqADwAABH4PAAAEKhp+EAAABCoeAoAQAAAEKhp+EQAABCoeAihVAAAKKi5zLAAABoAR
AAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9EwAABCoeAnsUAAAEKiICA30UAAAEKi5z
NgAABoAYAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKwMAAAjfgAA
GA0AAOQNAAAjU3RyaW5ncwAAAAD8GgAAmAQAACNVUwCUHwAAEAAAACNHVUlEAAAApB8AANAGAAAj
QmxvYgAAAAAAAAACAAABVx+2CQkLAAAA+gEzABYAAAEAAABPAAAACgAAABgAAAA2AAAAHAAAAAIA
AABVAAAABAAAADEAAAAGAAAAAQAAAAIAAAAFAAAAEQAAACMAAAAEAAAAAQAAAAgAAAABAAAAAwAA
AAcAAAAAAC4IAQAAAAAABgDtBQsLBgCSBgsLBgADBfgKDwB/CwAABgAwBb8JBgC8Bb8JBgCdBb8J
BgB5Br8JBgAjBr8JBgA8Br8JBgBZBb8JBgDSBCsLBgB0BVYHBgCcDIIICgANBpIJBgCaBAsLCgDZ
BZIJDgBHBXAHDgB9DTMKDgAsAnAHEgDRCa4ADgABADMKDgD0BHAHFgA+BxgIFgAqARgIFgCqChgI
FgCOChgIFgANDBgIBgAJAIIIBgAhA4IIDgCNBXAHDgDiAHAHGgBXBtcHGgDfA9cHEgADCusMHgAw
CTwMBgA8AMcABgCfCIIIBgC1BPgKBgBsCisLBgAnCn0JFgB/BBgIFgAXBRgIFgD7A2gJBgCLB4II
FgA/DaoMFgA7DaoMBgDzBnENBgByCHYAFgAXBKoMFgATBKoMBgBQCnYABgBdCnYADgAjAnAHBgB2
BIIIBgBBAeIGFgDdCxgIGgAGCNcHIgBrDE4DIgB8Ck4DBgCNA4IIBgCSAoIIHgBdCTwMBgDUA78J
BgB+AoIIBgAcCr8JHgAfCTwMBgBKAIIIHgBECTwMHgBXCTwMBgBQAIIIHgAvADwMHgB0AkQKHgAi
AEQKBgAUAMcABgABDYIIBgDRClQMBgBoAoIIBgCcDb8JAAAAAG0AAAAAAAEAAQAAABAAVwAAADkA
AQABAAEAEACJDe8BTQABAAMAAQAQALQG7wE5AAIACQABABAAFAnvAYkADwAlAAAAEAAyC5wLOQAP
ACcAAAEQANQLnAuxABEAKwACABAApAcAADkAEgAuAAMBAACHDAAAmQAVADUAAyEQAMMAAAA5ABgA
NQARADoCRAIRAPYLSAIBAHEBTAIBAOECCAEBAFkEUwIBAAYDCAEBALUNCAEBAJcICAEBAFwNCAEB
AF0BWwIBAD8DXgIBAC0NWwIBAEUHYgIBADEBZgIRAKQIagIRAMQDbwIRABMCdAIBALIBCAEBAHUB
CAEBAJQBCAEGBp8AWwJWgHcMeAJWgKQDeAI2AGkAfAJQIAAAAACGANgBgAIBAP0gAAAAAIYY6woG
AAQABSEAAAAAhhjrChAABAATIQAAAACGGOsKhwIFACEhAAAAAIYY6wpmAAYAKyEAAAAAhhjrCm0A
CAA1IQAAAACGCLAGjQIKAD0hAAAAAJEY8QqWAgoA/SAAAAAAhhjrCgYACgBJIQAAAACGCGcBmgIK
AFQhAAAAAIYIbgGiAgoApSEAAAAAhgjKAmIACwCtIQAAAACGCN4CEAALANUhAAAAAIYIPQSrAgwA
4CEAAAAAhghWBLQCDABCIgAAAACGCPICYgANAEoiAAAAAIYIAwMQAA0AciIAAAAAhgilDWIADgB6
IgAAAACGCLINEAAOAKIiAAAAAIYIiQhiAA8AqiIAAAAAhgiUCBAADwDSIgAAAACGCEoNYgAQANoi
AAAAAIYIWQ0QABAAAiMAAAAAhghNAb4CEQAKIwAAAACGCFoBAQARAC0jAAAAAIYIKgPCAhIANSMA
AAAAhgg8A8cCEgBdIwAAAACGCBkNvgITAGUjAAAAAIYIKg0BABMAiCMAAAAA5gn8Bs0CFADAIwAA
AADmCREHzQIVAPgjAAAAAOYJ6wDTAhYAMCQAAAAA5gn/ANMCFwBlJAAAAADEASkHBgAYAIAkAAAA
AMQBFgEQABgAnCQAAAAAkRjxCpYCGQCwJAAAAACGABoJBgAZAAAnAAAAAIYY6woGABkA/SAAAAAA
gxjrCgYAGQAIJwAAAACTCGgK2QIZADQnAAAAAJMIrAPfAhkAOycAAAAAkwi4A+UCGQBDJwAAAACW
CLUM7AIaAEonAAAAAIYY6woGABoAUicAAAAAkRjxCpYCGgBeJwAAAACGCPYIYgAaAGYnAAAAAIYI
BQkQABoAbycAAAAAhgiwCGIAGwB3JwAAAACGCMIIEAAbAIAnAAAAAIYI1AhiABwAiCcAAAAAhgjl
CBAAHAD9IAAAAACGGOsKBgAdAJEnAAAAAJEY8QqWAh0A/SAAAAAAhhjrCgYAHQAAAAEA3AEQEAIA
JwwQEAMAMQwAAAEAEQoAAAEAEQoAAAEAEQoAAAIAOgIAAAEAEQoAAAIAOgIAAAEA1QYAAAEA1QYA
AAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYAAAEA
1QYAAAEA1QYAAAEA1QYAAAEAFAMAAAEA1QYAAAEA1QYAAAEA1QYAAAEA1QYEAGEABABlAAkA6woB
ABEA6woGABkA6woKACkA6woQADEA6woQADkA6woQAEEA6woQAEkA6woQAFEA6woQAFkA6woQAGEA
6woQAGkA6woQAHkA6woGAIEA6woGAIkA6woGAJEA6woGALkA6woGAPkA6woGAAkB6woGADkB6woG
AFkB6woVAGkBlQwjAGkBzQ0qAHEBbwQvAHEB5AEQAIEBYAA2AIEByws8AHEBggMQAHEBkgdCAHEB
aAhHAIkBlARNAIkBLwQGAHEBIwRVAJEBVghHAKEB6wpbAKkBzgFiAKkBLwQGAJEBLwQGAHEA6woG
AJkA6wpmAJkA6wptAJkAXwJ1ALEB6woGAAwAwQyXAAwAyAacAGkBvw2gABQAyAacABQAwQyXAPEA
vw28ALkBegPNAMEBSALZALkB2wbNANEAWAL5AMkB6woQANkAWAIAAWkB1Q0IAeEA6woQABEBfwwo
AdEBZwwuAdkBeQg0AdEBrwk7AeEB3wk/AekBuAJEAfkBxwpNAQECpAJXAfkB2w1gAfkB4gxsAfkB
AAh2AfkBpwCCAUkCkgOfAUkCowzKARwA3Qr5ASQADQ2XAGECbgMLAnEAiQdiAGkBlQwPAmkCaA2c
AHECNQQGAJkAjgsGAOEB8QkVAtEB0wwBABEB6woGAOkBmA0aAkEB6wogAmEB6woGAA4ACQAAAA4A
DQAAAAgAWAA6AggAXAA/Ai4ACwApAy4AEwAyAy4AGwBRAy4AIwBaAy4AKwCDAy4AMwCDAy4AOwCD
Ay4AQwBaAy4ASwCJAy4AUwCDAy4AWwCgAy4AYwCoA0kAkwA4BGMAgwDyA2kAkwBYBIMAiwAJBIkA
kwCOBKMAmwA/AqkAkwDFBMMAowA/AskAkwD4BOkAkwAmBQMBawA/AgkBkwBSBSkBkwCCBUMBcwA/
AkkBkwBiBmkBkwCbBokBqwBRA6EBcwA/AqkBqwBRA8EBcwA/AukBewA/AgkCewA/AiECcwA/AikC
ewA/AkECcwA/AmECcwA/AoECcwA/AsADcwA/AuADcwA/AgAEcwA/AiAEcwA/AsAFcwA/AuAFcwA/
AgAGcwA/AiAGcwA/AkAGcwA/AmAGcwA/AhwAhACmAMQA6wALAQQAAQAAAEUHaQAAADEBbQADAAEA
BAACAAYADAAHAA4ACAAPAAAAtAbxAgAAcgH6AgAA4gICAwAAWgQGAwAABwMCAwAAtg0CAwAAmAgC
AwAAXQ0CAwAAXgEPAwAAQAMTAwAALg0PAwAAbAoYAwAAzAMeAwAAywwkAwAACQkCAwAAxggCAwAA
6QgCAwgAHgACABAAHwACAAIABwADAAgAIAAEABAAIQAEAAIACgAFAAEACwAFAAIADAAHAAEADQAH
AAIADgAJAAEADwAJAAIAEAALAAEAEQALAAIAEgANAAEAEwANAAIAFAAPAAEAFQAPAAIAFgARAAEA
FwARAAIAGAATAAEAGQATAAIAGgAVAAEAGwAVAAIAHAAXAAEAHQAXAAIAKAAZAAIAKQAbAAEAKgAb
AAIAKwAdAAIALgAfAAEALwAfAAIAMAAhAAEAMQAhAAIAMgAjAAEAMwAjAJEAtQDxAQMCBIAAAAEA
AADoHfZ6AAAAAAAA7wEAAAQAAAAAAAAAAAAAACgCugAAAAAABAAAAAAAAAAAAAAAKAKSCQAAAAAE
AAAAAAAAAAAAAAAoAjMKAAAAAAQAAAAAAAAAAAAAACgCrgAAAAAABAAAAAAAAAAAAAAAKAKCCAAA
AAANAAAAAAAAAAAAAAAxArgHAAAAAAQAAAAAAAAAAAAAACgCmAMAAAAADQAAAAAAAAAAAAAAMQKA
AAAAAAAAAAAAAQAAADwLAAAIAAIACQAFAAoABQBVAH8AZwDmAGcA9ACLAJQBjQB/AIsAvgGPAOoB
AAAAVGFibGVgMQBOdWxsYWJsZWAxAElFbnVtZXJhYmxlYDEASVF1ZXJ5YWJsZWAxAEV4cHJlc3Np
b25gMQBJRW51bWVyYXRvcmAxAEludDMyAEZ1bmNgMgBCaXRyaXgyNABnZXRfVVRGOAA8PjkAPE1v
ZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAExh
bWJkYQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMA
QXV0b1N5bmMAYWRkX1Byb3BlcnR5Q2hhbmdlZAByZW1vdmVfUHJvcGVydHlDaGFuZ2VkAFNlbmRQ
cm9wZXJ0eUNoYW5nZWQASU5vdGlmeVByb3BlcnR5Q2hhbmdlZABJbnRlcmxvY2tlZABnZXRfdGFi
bGVfaWQAc2V0X3RhYmxlX2lkAGdldF9pZABzZXRfaWQAPHJlZnJlc2hfdG9rZW4+a19fQmFja2lu
Z0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxleHBpcmVzX2luPmtfX0JhY2tp
bmdGaWVsZABSZWFkVG9FbmQAU2VuZENvbW1hbmQAc2V0X01ldGhvZABTVF9jNGNkYTQ2NzRmZDQ0
ODMyOTEwZmE4N2RjMmY3OWQyZQBkZWZhdWx0SW5zdGFuY2UAQXR0cmlidXRlTWFwcGluZ1NvdXJj
ZQBtYXBwaW5nU291cmNlAENvbXBhcmVFeGNoYW5nZQBJbnZva2UAR2V0VGFibGUASURpc3Bvc2Fi
bGUAUXVlcnlhYmxlAFJ1bnRpbWVNZXRob2RIYW5kbGUAUnVudGltZVR5cGVIYW5kbGUAR2V0TWV0
aG9kRnJvbUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfT2JsaWdhdGlvbl9OYW1lAHNldF9P
YmxpZ2F0aW9uX05hbWUAZ2V0X0N1c3RvbWVyTmFtZQBzZXRfQ3VzdG9tZXJOYW1lAHByb3BlcnR5
TmFtZQBEYXRlVGltZQBnZXRfbG9hZF9kYXRldGltZQBzZXRfbG9hZF9kYXRldGltZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAGdldF9OZXdMaW5lAENvbWJpbmUAc2V0X0NvbnRlbnRU
eXBlAFdoZXJlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAE1ldGhvZEJhc2UAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEh0dHBXZWJSZXNwb25zZQBHZXRSZXNwb25zZQBDbG9zZQBEaXNw
b3NlAGdldF9NYXJnaW5hbF9BY3Rpb25fRGF0ZQBzZXRfTWFyZ2luYWxfQWN0aW9uX0RhdGUAQ3Jl
YXRlAERlbGVnYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFdyaXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUATmV1dHJhbFJlc291cmNlc0xh
bmd1YWdlQXR0cmlidXRlAFRhYmxlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUARGF0YWJhc2VBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAENv
bHVtbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBEYXRhTWVtYmVyQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAGdldF9vYmxpZ2F0aW9uc19vdmVyZHVlAGdldF9IYXNWYWx1ZQB2YWx1ZQBSZW1vdmUAU3lz
dGVtLlRocmVhZGluZwBFbmNvZGluZwBhZGRfUHJvcGVydHlDaGFuZ2luZwByZW1vdmVfUHJvcGVy
dHlDaGFuZ2luZwBTZW5kUHJvcGVydHlDaGFuZ2luZwBJTm90aWZ5UHJvcGVydHlDaGFuZ2luZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN5c3RlbS5EYXRhLkxpbnEuTWFwcGluZwBUb1N0cmlu
ZwBzZXRfQ29udGVudExlbmd0aABvYmpMb2dvbkJpdHJpeE9BdXRoAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAEVx
dWFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9jNGNkYTQ2NzRm
ZDQ0ODMyOTEwZmE4N2RjMmY3OWQyZS5kbGwAR2V0UmVzcG9uc2VTdHJlYW0AR2V0UmVxdWVzdFN0
cmVhbQBnZXRfSXRlbQBTeXN0ZW0AZ2V0X1JlZ051bQBzZXRfUmVnTnVtAEVudW0AcmVzb3VyY2VN
YW4AZ2V0X3JlZnJlc2hfdG9rZW4Ac2V0X3JlZnJlc2hfdG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBz
ZXRfYWNjZXNzX3Rva2VuAGdldF9leHBpcmVzX2luAHNldF9leHBpcmVzX2luAFNjcmlwdE1haW4A
TWVtYmVyRXhwcmVzc2lvbgBQYXJhbWV0ZXJFeHByZXNzaW9uAENvbnN0YW50RXhwcmVzc2lvbgBC
aW5hcnlFeHByZXNzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAElEYkNvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFzZUNvbm5lY3Rpb24A
U3FsQ29ubmVjdGlvbgBjb25uZWN0aW9uAE1ldGhvZEluZm8AQ3VsdHVyZUluZm8AU3lzdGVtLkRh
dGEuTGlucQBTeXN0ZW0uTGlucQBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFByb3BlcnR5Q2hhbmdlZEV2ZW50SGFuZGxlcgBQcm9w
ZXJ0eUNoYW5naW5nRXZlbnRIYW5kbGVyAFBhcmFtZXRlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJh
dG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2M0Y2RhNDY3NGZkNDQ4MzI5MTBmYTg3ZGMy
Zjc5ZDJlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTdWJt
aXRDaGFuZ2VzAFNUX2M0Y2RhNDY3NGZkNDQ4MzI5MTBmYTg3ZGMyZjc5ZDJlLlByb3BlcnRpZXMA
R2V0Qnl0ZXMAU2V0dGluZ3MAUHJvcGVydHlDaGFuZ2VkRXZlbnRBcmdzAGVtcHR5Q2hhbmdpbmdF
dmVudEFyZ3MAUHJvcGVydHlDaGFuZ2luZ0V2ZW50QXJncwBHZXRQYXJhbXMAUG9zdFBhcmFtcwBT
eXN0ZW0uTGlucS5FeHByZXNzaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X0Nvbm5lY3Rpb25z
AFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAU2VsZWN0AFN5c3Rl
bS5OZXQAZ2V0X0RlZmF1bHQAR2V0VmFsdWVPckRlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAQ29uc3Rh
bnQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEVudmlyb25tZW50AGdldF9DdXJyZW50AGdldF9tZXNz
YWdlX3NlbnQAc2V0X21lc3NhZ2Vfc2VudABIdHRwV2ViUmVxdWVzdABnZXRfU3BlY2lhbGlzdABz
ZXRfU3BlY2lhbGlzdABNb3ZlTmV4dABTeXN0ZW0uVGV4dABEYXRhQ29udGV4dABPdmVyZHVlQ29u
dGV4dABnZXRfQXNzZW1ibHkAZ2V0X0RlbGl2ZXJ5AHNldF9EZWxpdmVyeQBvcF9JbmVxdWFsaXR5
AElzTnVsbE9yRW1wdHkAUHJvcGVydHkAAG1oAHQAdABwAHMAOgAvAC8AYgBpAHQAcgBpAHgALgBl
AGwAdAByAGEAbgBzAHAAbAB1AHMALgByAHUALwByAGUAcwB0AC8AMQAvAHMAegB4AGEANABvAGcA
bgA1ADMAbQByADUAeAAwAHoALwAACy4AagBzAG8AbgAAAyYAAAlQAE8AUwBUAABDYQBwAHAAbABp
AGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQA
AQVpAGQAAB9PAGIAbABpAGcAYQB0AGkAbwBuAF8ATgBhAG0AZQAAKU0AYQByAGcAaQBuAGEAbABf
AEEAYwB0AGkAbwBuAF8ARABhAHQAZQAAGUMAdQBzAHQAbwBtAGUAcgBOAGEAbQBlAAARRABlAGwA
aQB2AGUAcgB5AAANUgBlAGcATgB1AG0AABVTAHAAZQBjAGkAYQBsAGkAcwB0AAARdABhAGIAbABl
AF8AaQBkAAAbbABvAGEAZABfAGQAYQB0AGUAdABpAG0AZQAAGW0AZQBzAHMAYQBnAGUAXwBzAGUA
bgB0AAA7MQAwAC4AMQAwAC4AMAAuADIAOAAuAGEAdQB0AG8AbQBhAHQAaQBvAG4ALgBwAGgAcAB1
AHMAZQByAAADbQAAOR0EMAQ4BDwENQQ9BD4EMgQwBD0EOAQ1BCAAPgQxBE8ENwQwBEIENQQ7BEwE
QQRCBDIEMAQ6ACAAARUXBDAEOgQwBDcERwQ4BDoEOgAgAAFrHwRABDUENAQ1BDsETAQ9BDAETwQg
ADQEMARCBDAEIAA/BEAENQQ0BD4EQQRCBDAEMgQ7BDUEPQQ4BE8EIAA0BD4EOgRDBDwENQQ9BEIE
PgQyBC8APwQ+BDQEMARHBDgEIAAUBCIEOgAgAAEVHQQ+BDwENQRABCAAFAQiBDoAIAABFRQEPgRB
BEIEMAQyBDoEMAQ6ACAAAVEhBD8ENQRGBDgEMAQ7BDgEQQRCBCwAIABDBD8EQAQwBDIEOwRPBE4E
SQQ4BDkEIAA+BDEETwQ3BDAEQgQ1BDsETARBBEIEMgQ+BDwEOgAgAAEhbABvAGcALgBiAGwAbwBn
AHAAbwBzAHQALgBhAGQAZAAAAQCAsVUAUwBFAFIAXwBJAEQAPQAxADcAMQA2ACYAUABPAFMAVABf
AFQASQBUAEwARQA9AB8EQAQ+BEEEQAQ+BEcENQQ9BD4EIAA4BEEEPwQ+BDsEPQQ1BD0EOAQ1BCAA
PQQ1BDcEMAQyBDUEQARIBDUEPQQ9BD4EMwQ+BCAAPgQxBE8ENwQwBEIENQQ7BEwEQQRCBDIEMAQm
AFAATwBTAFQAXwBNAEUAUwBTAEEARwBFAD0AAR0mAEQARQBTAFQAWwAwAF0APQBTAEcAMwAzADAA
AHFTAFQAXwBjADQAYwBkAGEANAA2ADcANABmAGQANAA0ADgAMwAyADkAMQAwAGYAYQA4ADcAZABj
ADIAZgA3ADkAZAAyAGUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAdfbtRbbLm0iAXQ45FBZ7igAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgKkGBwMOHQUOBgAD
Dg4ODgQAAQIOBgABEoC5DgUAABKAwQUgAR0FDgQgAQEKBSAAEoDFByADAR0FCAgFIAASgMkGIAEB
EoDFAyAADgYgAgEOElEHIAIBElUSUQkwAQAVElkBHgAECgESEAwHAhURdQEIFRF1AQgFFRF1AQgE
IAATAAMgAAIFAAICDg4OBwIVEXUBEXkVEXUBEXkGFRF1ARF5BwACAhF5EXkIBwMSaRJpEmkLAAIS
gN0SgN0SgN0MEAEDHgAQHgAeAB4ABAoBEmkIBwMSbRJtEm0ECgESbQYgAgEcEnEHIAIBHBKA5QIG
DhwHCBIIDhKAjRIMEoCRFRKAlQESEBIQFRF1ARF5BSAAEoDpBSAAEoDtBiABEoDxHAMgABwEIAEc
HAgAARKA9RGA+QkAAhKAkRKA9Q4IAAESgQERgQULAAISgQ0SgP0SgQkJAAISgRUcEoD1CwACEoEZ
EoD9EoD9ERABAhUSgSEBHgASgP0dEoCRCgoBFRKBHQISEAIeEAECFRKBKQEeABUSgSkBHgAVEoEh
ARUSgR0CHgACCwoBFRKBHQISEBIQHxACAhUSgSkBHgEVEoEpAR4AFRKBIQEVEoEdAh4AHgEGCgIS
EBIQBxUSgS0BEhAJIAAVEoCVARMABxUSgJUBEhADAAAOBQABDh0OBCABARwFIAASgT0HIAIBDhKB
PQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYScQYGFRF1AQgHBhURdQEReQIGCAMG
EXkDBhJpAwYSbQQGEoChBAYSgKUDBhIcAwYRJAMGEigGIAMODg4OBSABARJVCCAAFRJZARIQAwAA
AQcgABURdQEICCABARURdQEICCAAFRF1ARF5CSABARURdQEReQMgAAgEIAAReQUgAQEReQUgAQES
aQUgAQESbQUAABKAoQUAABKApQYAAQESgKUEAAASHAgoABUSWQESEAcoABURdQEIAygADggoABUR
dQEReQMoAAgEKAAReQUIABKAoQUIABKApQQIABIcCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9jNGNkYTQ2NzRmZDQ0ODMyOTEwZmE4N2RjMmY3
OWQyZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAAAHAQACcnUAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC41FgEAAQBUDgROYW1lCmFiZXJyYXRpb24uAQABAFQOBE5hbWUiYWJlcnJhdGlvbi5kYm8ub2Js
aWdhdGlvbnNfb3ZlcmR1ZR8BAAIAVA4HU3RvcmFnZQNfaWRUDgZEYlR5cGUDSW50NQEAAgBUDgdT
dG9yYWdlEF9PYmxpZ2F0aW9uX05hbWVUDgZEYlR5cGUMVmFyQ2hhcigxMDApNgEAAgBUDgdTdG9y
YWdlFV9NYXJnaW5hbF9BY3Rpb25fRGF0ZVQOBkRiVHlwZQhEYXRlVGltZTIBAAIAVA4HU3RvcmFn
ZQ1fQ3VzdG9tZXJOYW1lVA4GRGJUeXBlDFZhckNoYXIoMTUwKS0BAAIAVA4HU3RvcmFnZQlfRGVs
aXZlcnlUDgZEYlR5cGULVmFyQ2hhcigzMCkrAQACAFQOB1N0b3JhZ2UHX1JlZ051bVQOBkRiVHlw
ZQtWYXJDaGFyKDI1KS8BAAIAVA4HU3RvcmFnZQtfU3BlY2lhbGlzdFQOBkRiVHlwZQtWYXJDaGFy
KDUwKYDeAQAFAFQOB1N0b3JhZ2UJX3RhYmxlX2lkVFV2U3lzdGVtLkRhdGEuTGlucS5NYXBwaW5n
LkF1dG9TeW5jLCBTeXN0ZW0uRGF0YS5MaW5xLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQhBdXRvU3luYwMAAABUDgZEYlR5
cGUVSW50IE5PVCBOVUxMIElERU5USVRZVAIMSXNQcmltYXJ5S2V5AVQCDUlzRGJHZW5lcmF0ZWQB
OAEAAgBUDgdTdG9yYWdlDl9sb2FkX2RhdGV0aW1lVA4GRGJUeXBlEURhdGVUaW1lIE5PVCBOVUxM
MgEAAgBUDgdTdG9yYWdlDV9tZXNzYWdlX3NlbnRUDgZEYlR5cGUMSW50IE5PVCBOVUxMAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAA9E4AAAAAAAAAAAAADk8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAA
AAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
APZ66B0AAAEA9nroHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYwA0AGMA
ZABhADQANgA3ADQAZgBkADQANAA4ADMAMgA5ADEAMABmAGEAOAA3AGQAYwAyAGYANwA5AGQAMgBl
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANgA1ADYALgAzADEA
NAA3ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYwA0AGMAZABh
ADQANgA3ADQAZgBkADQANAA4ADMAMgA5ADEAMABmAGEAOAA3AGQAYwAyAGYANwA5AGQAMgBlAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBj
ADQAYwBkAGEANAA2ADcANABmAGQANAA0ADgAMwAyADkAMQAwAGYAYQA4ADcAZABjADIAZgA3ADkA
ZAAyAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AYwA0
AGMAZABhADQANgA3ADQAZgBkADQANAA4ADMAMgA5ADEAMABmAGEAOAA3AGQAYwAyAGYANwA5AGQA
MgBlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADYANQA2
AC4AMwAxADQANwA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADYANQA2AC4AMwAxADQANwA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACA/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение]"
      DTS:CreationName=""
      DTS:DTSID="{30C3C3ED-0E3D-4F3C-B237-B4A0B32E7A39}"
      DTS:From="Package\Загрузка не взятых в управление за 24 часа"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение"
      DTS:To="Package\Обновление таблицы" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение 1]"
      DTS:CreationName=""
      DTS:DTSID="{CBD5B0B1-D37F-4665-ADC0-F85DA704EEB3}"
      DTS:From="Package\Сообщения по не взятым в управление"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение 1"
      DTS:To="Package\Загрузка просроченных" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение 2]"
      DTS:CreationName=""
      DTS:DTSID="{179BEE54-19E5-45DC-886E-58D686D629EA}"
      DTS:From="Package\Загрузка просроченных"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение 2"
      DTS:To="Package\Сообщения по просроченным" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение 3]"
      DTS:CreationName=""
      DTS:DTSID="{F0050114-E2DD-4E83-80F5-A014CF160879}"
      DTS:From="Package\Обновление таблицы"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение 3"
      DTS:To="Package\Сообщения по не взятым в управление" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="298,42"
          Id="Package\Загрузка не взятых в управление за 24 часа"
          TopLeft="194,76" />
        <NodeLayout
          Size="195,42"
          Id="Package\Загрузка просроченных"
          TopLeft="246,301" />
        <NodeLayout
          Size="184,42"
          Id="Package\Обновление таблицы"
          TopLeft="255,150" />
        <NodeLayout
          Size="273,42"
          Id="Package\Сообщения по не взятым в управление"
          TopLeft="207,226" />
        <NodeLayout
          Size="225,42"
          Id="Package\Сообщения по просроченным"
          TopLeft="237,378" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение]"
          TopLeft="345,118">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение 1]"
          TopLeft="343.5,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение 2]"
          TopLeft="346.5,343">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение 3]"
          TopLeft="345.25,192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>