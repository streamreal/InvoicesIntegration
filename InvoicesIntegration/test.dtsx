<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/8/2020 11:00:08 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{9F3CE97B-F5D2-46F4-99FF-216FB50BC7BF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="17"
  DTS:VersionGUID="{FFF98BEE-8C78-48F6-B42B-0E88BE5550DE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{E6AEC7DE-8015-4704-8235-DD388FA268B6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ebdecc62ccb647b9acc8d9702b7a8aff"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_ebdecc62ccb647b9acc8d9702b7a8aff.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3857EB42-BF00-441C-B9FD-874E5F3BB84E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ebdecc62ccb647b9acc8d9702b7a8aff</RootNamespace>
    <AssemblyName>ST_ebdecc62ccb647b9acc8d9702b7a8aff</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>\\10.10.0.28\alta\Robot\Data\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="S22.Imap">
      <HintPath>\\10.10.0.28\alta\Robot\Data\S22.Imap.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties.Settings.get_Default():ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties.Sett" +
    "ings")]

namespace ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml.Linq;
using System.Linq;
#endregion
using System.Reflection;
using System.IO;

namespace ST_ebdecc62ccb647b9acc8d9702b7a8aff
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }

        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            try
            {
                string path = @"\\10.10.0.28\alta\Robot\Data\";
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "S22.Imap.dll"));
            }
            catch (Exception e)
            {
                File.WriteAllText(@"C:\Users\andreydruzhinin\Desktop\1.txt", e.Message);
          
                return null;
            }
        }


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            /*
            XDocument xdoc = new XDocument(new XElement("phones",
    new XElement("phone",       
        new XElement("company"),
        new XElement("price")),
    new XElement("phone",
        new XAttribute("name", "Samsung Galaxy S5"),
        new XElement("company", "Samsung"),
        new XElement("price", "33000"))));
            xdoc.Save(@"C:\Users\andreydruzhinin\Desktop\phones.xml");

            XElement root = XElement.Load(@"C:\Users\andreydruzhinin\Desktop\phones.xml");
            XElement newTree = new XElement("phones",
                root.Element("Child1"),
                from att in root.Attributes()
                select new XElement(att.Name, (string)att)
            );
            //Console.WriteLine(newTree);
            Dts.TaskResult = (int)ScriptResults.Success;
        */
            try {

         
                DataTable dt = new DataTable();
                dt.Columns.Add("A", typeof(string));
                dt.Columns.Add("B", typeof(string));
                dt.Columns.Add("C", typeof(string));

                dt.Rows.Add(new object[] { "A1", "B1", "C1" });
                dt.Rows.Add(new object[] { "A1", "B1", "C2" });
                dt.Rows.Add(new object[] { "A1", "B1", "C3" });
                dt.Rows.Add(new object[] { "A2", "B1", "C1" });
                dt.Rows.Add(new object[] { "A2", "B2", "C2" });

                dt = dt.AsEnumerable()
                    .OrderBy(x => x.Field<string>("A"))
                    .ThenBy(x => x.Field<string>("B"))
                    .ThenBy(x => x.Field<string>("C"))
                    .CopyToDataTable();

                XElement data = new XElement("GTD", 
                    new XElement("BLOCK", dt.AsEnumerable().GroupBy(g1 => g1.Field<string>("A")).Select(g1a => new object[] 
                    {
                    new XElement("NOMER",(string) g1a.Key),
                    new XElement("TOVG",
                        g1a.GroupBy(g2 => g2.Field<string>("B")).Select(g2b => new object[] 
                            {
                            new XElement("lable", (string)g2b.Key),
                            new XElement("C",
                                g2b.Select(g3c => new XElement("lable", g3c.Field<string>("C"))
                            ))}
                    ))}
                )));
                data.Save(@"C:\Users\andreydruzhinin\Desktop\phones.xml");

            }
            catch (Exception e)
            {
                Dts.Events.FireError(0, "", e.Message, "", 0);
            }
            }
      
    }
}




#region ScriptResults declaration
/// <summary>
/// This enum provides a convenient shorthand within the scope of this class for setting the
/// result of the script.
/// 
/// This code was generated automatically.
/// </summary>
enum ScriptResults
{
    Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
    Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
};
        #endregion

	]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ebdecc62ccb647b9acc8d9702b7a8aff</msb:CodeName>
		<msb:DisplayName>ST_ebdecc62ccb647b9acc8d9702b7a8aff</msb:DisplayName>
		<msb:ProjectId>{F7566BEB-F0F6-4ED6-8921-095D6285FFAC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ebdecc62ccb647b9acc8d9702b7a8aff.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ebdecc62ccb647b9acc8d9702b7a8aff")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ebdecc62ccb647b9acc8d9702b7a8aff")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ebdecc62ccb647b9acc8d9702b7a8aff.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ebdecc62ccb647b9acc8d9702b7a8aff.dll">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
+QMAAAEAHQgAAAEAHQgAAAEAHQgAAAEAXAAAAAEAGAEAAAEAiAAAAAEAKAEAAAEANQEJAEQGAQAR
AEQGBgAZAEQGCgApAEQGEAAxAEQGEAA5AEQGEABBAEQGEABJAEQGEABRAEQGEABZAEQGEABhAEQG
EABxAEQGBgCpAEQGBgDRAEQGBgDxAEQGFQABAUUFGwAJAUQGIQABAQQEJwARAc4BNQCBAL8BOwCZ
AHIBQQAZAQgIRQChAEQGBgChADUHUgAxAa0BWAAhAVgBYQChANAHawBJAVgBcQBRAY4BeAAMAEQG
IQBhAS4IjABhAR8IrABRAX4BxgB5AecH2ACBASYI3wAUAEQGIQCBAeAHDQHBAEQGMwHBAP8DEAB5
AK8HOwGJAcUHQQGRAToGRwF5AEQGBgCJAEQGBgAxAT4IUAHZAEQGVQH5AEQGBgCZAVwBXAEcADYI
cQEkAEQGIQAIAAgAmAEIAAwAnQEpAHsATAIuAAsAJAIuABMALQIuABsATAIuACMAVQIuACsAfgIu
ADMAfgIuADsAfgIuAEMAVQIuAEsAhAIuAFMAfgIuAFsAmwJJAHsATAJjAGMAnQGDAHMAnQHBAGsA
nQHDAGsAnQEuAEsABAABAAUAAwAAAAIGFQIAAA8CGgIAAPcHHwICAAYAAwACAAcABQABAAgABQAC
AAkABwCEAP8AaQF2AQSAAAABAAAAzRz9pAAAAAAAADYEAAAEAAAAAAAAAAAAAACGASwBAAAAAA0A
AAAAAAAAAAAAAI8BgAQAAAAABAAAAAAAAAAAAAAAhgEcAQAAAAAEAAAAAAAAAAAAAACGAdsFAAAA
AAQAAAAAAAAAAAAAAIYB2wEAAAAABAAAAAAAAAAAAAAAhgEYBQAAAAAEAAAAAAAAAAAAAACGAXcH
AAAAAAAAAAABAAAAlQYAAAYAAwA/AKYAQQCmAEMA0wBHAKYASwAnAWEAZQFLAH8BAAAAAAA8Pjlf
XzJfMAA8TWFpbj5iX18yXzAAPD45X18yXzEAPE1haW4+Yl9fMl8xAElFbnVtZXJhYmxlYDEAT3Jk
ZXJlZEVudW1lcmFibGVSb3dDb2xsZWN0aW9uYDEAZzEAPD45X18yXzIAPE1haW4+Yl9fMl8yAEZ1
bmNgMgBJR3JvdXBpbmdgMgBnMgA8PjlfXzJfMwA8TWFpbj5iX18yXzMAPD45X18yXzQAPE1haW4+
Yl9fMl80ADw+OV9fMl81ADxNYWluPmJfXzJfNQA8PjlfXzJfNgA8TWFpbj5iX18yXzYAPD45X18y
XzcAPE1haW4+Yl9fMl83ADw+OQA8TW9kdWxlPgBTeXN0ZW0uSU8AdmFsdWVfXwBnMWEAU3lzdGVt
LkRhdGEAZzJiAG1zY29ybGliAGczYwA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRk
AEZpZWxkAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBDb3B5VG9EYXRhVGFibGUAQXNFbnVt
ZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAExvYWRGaWxlAFhOYW1l
AENvbWJpbmUAVHlwZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFNhdmUAYWRk
X0Fzc2VtYmx5UmVzb2x2ZQBDdXJyZW50RG9tYWluX0Fzc2VtYmx5UmVzb2x2ZQBTVF9lYmRlY2M2
MmNjYjY0N2I5YWNjOGQ5NzAyYjdhOGFmZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmlu
ZwBQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTVF9lYmRlY2M2MmNjYjY0N2I5YWNjOGQ5NzAyYjdhOGFmZi5kbGwAU3lzdGVtAEVudW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBBcHBEb21haW4AZ2V0X0N1cnJlbnREb21haW4ARGF0YUNv
bHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBFeGNlcHRpb24A
Q3VsdHVyZUluZm8AU3lzdGVtLlhtbC5MaW5xAFN5c3RlbS5MaW5xAHNlbmRlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAFJlc29sdmVFdmVudEhhbmRsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJy
b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZWJkZWNjNjJjY2I2NDdiOWFjYzhkOTcwMmI3
YThhZmYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2Vi
ZGVjYzYyY2NiNjQ3YjlhY2M4ZDk3MDJiN2E4YWZmLlByb3BlcnRpZXMAU2V0dGluZ3MAUmVzb2x2
ZUV2ZW50QXJncwBhcmdzAGdldF9Db2x1bW5zAERhdGFUYWJsZUV4dGVuc2lvbnMARW51bWVyYWJs
ZVJvd0NvbGxlY3Rpb25FeHRlbnNpb25zAFN5c3RlbS5EYXRhLkRhdGFTZXRFeHRlbnNpb25zAERh
dGFSb3dFeHRlbnNpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMA
Z2V0X1Jvd3MAT2JqZWN0AFNlbGVjdABvcF9JbXBsaWNpdABnZXRfRGVmYXVsdABYRWxlbWVudABX
cml0ZUFsbFRleHQARGF0YVJvdwB4AFRoZW5CeQBHcm91cEJ5AE9yZGVyQnkAZ2V0X0tleQBnZXRf
QXNzZW1ibHkAAAA7XABcADEAMAAuADEAMAAuADAALgAyADgAXABhAGwAdABhAFwAUgBvAGIAbwB0
AFwARABhAHQAYQBcAAAZUwAyADIALgBJAG0AYQBwAC4AZABsAGwAAE1DADoAXABVAHMAZQByAHMA
XABhAG4AZAByAGUAeQBkAHIAdQB6AGgAaQBuAGkAbgBcAEQAZQBzAGsAdABvAHAAXAAxAC4AdAB4
AHQAAANBAAADQgAAA0MAAAVBADEAAAVCADEAAAVDADEAAAVDADIAAAVDADMAAAVBADIAAAVCADIA
AAdHAFQARAAAC0IATABPAEMASwAAV0MAOgBcAFUAcwBlAHIAcwBcAGEAbgBkAHIAZQB5AGQAcgB1
AHoAaABpAG4AaQBuAFwARABlAHMAawB0AG8AcABcAHAAaABvAG4AZQBzAC4AeABtAGwAAAEAcVMA
VABfAGUAYgBkAGUAYwBjADYAMgBjAGMAYgA2ADQANwBiADkAYQBjAGMAOABkADkANwAwADIAYgA3
AGEAOABhAGYAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAC04A
TwBNAEUAUgAACVQATwBWAEcAAAtsAGEAYgBsAGUAAAAAAKwA42ZZaW1MspRidDcBAKcABCABAQgD
IAABBSABARERBCABAQ4FIAEBEXUFAAASgIEFIAIBHBgGIAEBEoCFBgcCEkESTQUAAg4ODgUAARJB
DgMgAA4FAAIBDg4GBwISURJNBSAAEoCRCAABEoCZEYCdCSACEoChDhKAmQUgABKApQYgARJdHRwL
AAEVEoCtARJdElEHFRJZAhJdDhkQAgIVEoC1AR4AFRKArQEeABUSWQIeAB4BBQoCEl0OGRACAhUS
gLUBHgAVEoC1AR4AFRJZAh4AHgEMEAEBElEVEoC5AR4ABAoBEl0GAAESgL0OHxACAhUSgLkBFRJl
Ah4BHgAVEoC5AR4AFRJZAh4AHgENFRJZAhUSZQIOEl0dHBkQAgIVEoC5AR4BFRKAuQEeABUSWQIe
AB4BCwoCFRJlAg4SXR0cByACARKAvRwFIAASgMUFIAASgMkIIAUCCA4ODggEIAASQQYgAgEOEkEI
EAECHgASXQ4DCgEOBxUSZQIOEl0EIAATAAgVElkCEl0SYQYKAhJdEmEIt3pcVhk04IkIiYRdzYCA
zJEEAAAAAAQBAAAAAgYIAwYRCAMGEm0DBhJxAwYSFAMGEhgIBhUSWQISXQ4JBhUSWQISXRJhDgYV
ElkCFRJlAg4SXR0cAwAAAQcAAhJBHBJJBAAAEm0EAAAScQUAAQEScQQAABIUBSABDhJdCyABHRwV
EmUCDhJdBiABEmESXQQIABJtBAgAEnEECAASFAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZWJkZWNjNjJjY2I2NDdiOWFjYzhkOTcwMmI3YThh
ZmYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAlDkAAAAAAAAAAAAArjkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKA5AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA/aTNHAAAAQD9pM0cPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlAGIAZABlAGMAYwA2ADIAYwBjAGIANgA0ADcAYgA5AGEAYwBjADgAZAA5ADcAMAAyAGIA
NwBhADgAYQBmAGYAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAz
ADcAMwAuADQAMgAyADMANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBlAGIAZABlAGMAYwA2ADIAYwBjAGIANgA0ADcAYgA5AGEAYwBjADgAZAA5ADcAMAAyAGIANwBh
ADgAYQBmAGYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGUAYgBkAGUAYwBjADYAMgBjAGMAYgA2ADQANwBiADkAYQBjAGMAOABkADkANwAw
ADIAYgA3AGEAOABhAGYAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBlAGIAZABlAGMAYwA2ADIAYwBjAGIANgA0ADcAYgA5AGEAYwBjADgAZAA5ADcAMAAy
AGIANwBhADgAYQBmAGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcAMwA3ADMALgA0ADIAMgAzADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcAMwA3ADMALgA0ADIAMgAzADcAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAwDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="181,147" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>