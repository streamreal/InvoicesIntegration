<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/24/2020 10:37:09 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{77DA6AEF-D850-4266-A204-E37E0CD30E09}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="97"
  DTS:VersionGUID="{2FEDE8F7-9478-4261-A374-A92A52491A56}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Eltransplus]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{403970C5-EC92-4000-9E2B-5AD29D5787C6}"
      DTS:ObjectName="SMTP Eltransplus">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=10.10.0.50;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EDB935EB-5298-4F57-A442-3F4BFCCEBA32}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailList">
      <DTS:VariableValue
        DTS:DataType="8">andreydruzhinin@eltransplus.ru</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F987BA3-5480-4847-B9E2-56DB9DE8F122}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailListBitrix">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5422B82F-1B70-475B-A844-DD7574E1B8AD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailListNotification">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{76BF0FA6-36DC-4384-ABEA-3AA1596BE0DB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19B09814-C9C9-42D7-B26E-7F0DFE76828A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LetterTextBitrix">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8DB7A64F-5713-4AB0-B064-36EB28E14398}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LetterTextNotification">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ADA670BB-3954-4981-9BF1-ABDC4094CE1F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NotificationID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9CB91C8A-F6DC-43FB-85B6-0D0123D17C91}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NotificationResultSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A892B75E-266F-4C7B-8B00-67E638175D31}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ResultSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2099D9F-A09B-46BD-9198-1A9445132616}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ResultSetBitrix">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30FE7B9E-A7BB-44F0-BC3D-ACE5C05DF07D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="IdBitrix"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF140277-B390-41C8-8FF7-7B51CC0F5874}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="XMLtext">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SELECT из таблицы Obligations"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Задача &quot;Выполнение SQL&quot;"
      DTS:DTSID="{8D6BB42B-C87C-4E78-80EE-7CA1C71D1834}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SELECT из таблицы Obligations"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="WITH C AS (&#xA;SELECT &#xA;CASE WHEN s.EMAIL LIKE '%@eltransplus.ru' THEN s.EMAIL + ';' ELSE NULL END AS Email1,&#xA;m.email + ';' AS Email2,&#xA;CASE WHEN o.ID_obligation = 6 THEN 'sycheva@eltransplus.ru' + ';' ELSE NULL END AS Email3,&#xA;'denismukhin@eltransplus.ru' AS Email4,&#xA;'Наименование обязательства: ' + IIF(COALESCE(o.Obligation_Name, '') = '', '-', o.Obligation_Name) + char(13) + char(10) +&#xA;'Заказчик: ' + IIF(COALESCE(o.[CustomerName], '') = '', '-', o.[CustomerName]) + char(13) + char(10) +&#xA;'Номер ДТ: ' + IIF(COALESCE(o.RegNum, '') = '', '-', o.RegNum) + char(13) + char(10) +&#xA;'Номер доставки: ' + IIF(COALESCE(o.Delivery, '') = '', '-', o.Delivery) + char(13) + char(10) +&#xA;'Номер груза: ' + IIF(COALESCE(o.[CargoID], '') = '', '-', o.[CargoID]) + char(13) + char(10)  +&#xA;'Предельный срок предоставления документов/подачи ДТ: ' + IIF(o.[Marginal_Action_Date] IS NULL, '-', CONVERT(nvarchar, o.[Marginal_Action_Date], 104))&#xA;AS MessageText,&#xA;CASE&#xA;&#xA;--для сообщений после выпуска&#xA;WHEN o.[ID_Obligation] = 6 AND EXISTS (SELECT 0 FROM [gtd_ED16].[dbo].[EDMsgsXML] e&#xA;WHERE e.Envelopeid = o.[Message_Envelopeid]) THEN automation.dbo.EdmsgConvert(&#xA;CAST((SELECT TOP (1) [Msg] FROM [gtd_ED16].[dbo].[EDMsgsXML] e&#xA;WHERE e.Envelopeid = o.[Message_Envelopeid]) as varbinary(max))) &#xA;&#xA;--для дополнительных проверок&#xA;WHEN o.[ID_Obligation] IN (0,1,2,3) AND EXISTS (&#xA;SELECT 0 FROM [gtd_ED16].[dbo].[EDMsgsXML] e&#xA;JOIN [BI].[etl].[EnvelopeID_MessageType_CategoryAll] a ON e.EnvelopeID = e.EnvelopeID&#xA;WHERE a.DocGuid = o.DocGuid AND a.MessageType = 'CMN.11252') &#xA;&#xA;THEN automation.dbo.EdmsgConvert(&#xA;CAST((SELECT TOP (1) [Msg] FROM [gtd_ED16].[dbo].[EDMsgsXML] e&#xA;JOIN [BI].[etl].[EnvelopeID_MessageType_CategoryAll] a ON e.EnvelopeID = a.EnvelopeID&#xA;WHERE a.DocGuid = o.DocGuid AND a.MessageType = 'CMN.11252' &#xA;ORDER BY a.InOutDateTime DESC) as varbinary(max))) &#xA;&#xA;ELSE ''&#xA;END xmltext&#xA;FROM [BI].[dwh].[Obligations] o &#xA;LEFT JOIN [BI].[dwh].[ETP$Salesperson_Purchaser] s ON o.STOSalesPersonName = s.SalespersonName&#xA;LEFT JOIN [webproject].[dbo].[monitor_emails] m ON o.DCLdepartmentcode = m.leader_of_dept&#xA;WHERE&#xA;o.[STOSalesPersonName] IS NOT NULL&#xA;AND o.[ID_Obligation] IN (0,1,2,3,4,5,6,7,8)&#xA;AND o.[ID_Category] = 1&#xA;AND o.[id] &gt; (SELECT TOP (1) [maxid_email] FROM [BI].[dwh].[Obligation_Types] ORDER BY [maxid_email] DESC)&#xA;AND NOT EXISTS (SELECT 0 FROM [BI].[dwh].[Obligations] ob &#xA;WHERE ob.ID_Obligation = 6 AND ob.Message_Envelopeid = o.Message_Envelopeid AND ob.id &lt;&gt; o.id)&#xA;)&#xA;SELECT  &#xA;CASE &#xA;WHEN Email1 IS NULL AND Email2 IS NULL AND Email3 IS NULL THEN Email4&#xA;ELSE LEFT(COALESCE(Email1, '') + COALESCE(Email2, '') + COALESCE(Email3, ''), LEN(COALESCE(Email1, '') + COALESCE(Email2, '') + COALESCE(Email3, '')) - 1)&#xA;END AS Emails,&#xA;C.MessageText,&#xA;C.xmltext&#xA;FROM C"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ResultSet" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SELECT из таблицы Obligations 2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Задача &quot;Выполнение SQL&quot;"
      DTS:DTSID="{f1ea91e9-5593-4287-9a39-adfd01f044ec}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SELECT из таблицы Obligations 2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="WITH C AS (&#xA;SELECT &#xA;CASE WHEN s.EMAIL LIKE '%@eltransplus.ru' THEN s.EMAIL + ';' ELSE NULL END AS Email1,&#xA;m.email + ';' AS Email2,&#xA;'Наименование обязательства: ' + IIF(COALESCE(o.Obligation_Name, '') = '', '-', o.Obligation_Name) + char(13) + char(10) +&#xA;'Заказчик: ' + IIF(COALESCE(o.[CustomerName], '') = '', '-', o.[CustomerName]) + char(13) + char(10) +&#xA;'Номер ДТ: ' + IIF(COALESCE(o.RegNum, '') = '', '-', o.RegNum) + char(13) + char(10) +&#xA;'Номер доставки: ' + IIF(COALESCE(o.Delivery, '') = '', '-', o.Delivery) + char(13) + char(10) +&#xA;'Номер груза: ' + IIF(COALESCE(o.[CargoID], '') = '', '-', o.[CargoID]) + char(13) + char(10)  +&#xA;'Предельный срок предоставления документов/подачи ДТ: ' + IIF(o.[Marginal_Action_Date] IS NULL, '-', CONVERT(nvarchar, o.[Marginal_Action_Date], 104)) + char(13) + char(10)  +&#xA;'Контрольная дата: ' + CONVERT(nvarchar(max), COALESCE([man_Prompt_Date], [Prompt_Date]), 104)&#xA;AS MessageText,&#xA;o.id&#xA;FROM [BI].[dwh].[Obligations] o &#xA;LEFT JOIN [BI].[dwh].[ETP$Salesperson_Purchaser] s ON s.SalespersonName LIKE o.[Specialist] + '%'&#xA;LEFT JOIN [webproject].[dbo].[monitor_emails] m ON o.DCLdepartmentcode = m.leader_of_dept&#xA;WHERE&#xA;[Specialist] IS NOT NULL&#xA;AND o.[ID_Category] = 1&#xA;AND CAST(GETDATE() AS date) = COALESCE([man_Prompt_Date], [Prompt_Date])&#xA;AND o.[sent_notification] = 0&#xA;)&#xA;SELECT  &#xA;CASE &#xA;WHEN Email1 IS NULL AND Email2 IS NULL THEN 'mailing@eltransplus.ru'&#xA;ELSE LEFT(COALESCE(Email1, '') + COALESCE(Email2, ''), LEN(COALESCE(Email1, '') + COALESCE(Email2, '')) - 1)&#xA;END AS Emails,&#xA;C.MessageText,&#xA;C.id&#xA;FROM C"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::NotificationResultSet" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UPDATE max(id) - Obligation_types"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Задача &quot;Выполнение SQL&quot;"
      DTS:DTSID="{E7D3A9C5-A717-4B03-91EC-D6B0AD85AA57}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="UPDATE max(id) - Obligation_types"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="UPDATE [BI].[dwh].[Obligation_Types]&#xA;SET [maxid_email] = (SELECT MAX(id) FROM [BI].[dwh].[Obligations])&#xA;WHERE [maxid_email] is not null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Выборка новых уведомлений"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Задача &quot;Выполнение SQL&quot;"
      DTS:DTSID="{24F709A2-3BF0-4A2F-A017-F4A8ACB7623C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Выборка новых уведомлений"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="WITH C AS (&#xA;SELECT &#xA;*, 'sycheva@eltransplus.ru' email_leader&#xA;,'Наименование обязательства: ' + IIF(COALESCE(n.Obligation_Name, '') = '', '-', n.Obligation_Name) + char(13) + char(10) +&#xA;'Заказчик: ' + IIF(COALESCE(n.[CustomerName], '') = '', '-', n.[CustomerName]) + char(13) + char(10) +&#xA;'Номер ДТ: ' + IIF(COALESCE(n.RegNum, '') = '', '-', n.RegNum) + char(13) + char(10) +&#xA;'Номер доставки: ' + IIF(COALESCE(n.Delivery, '') = '', '-', n.Delivery) + char(13) + char(10) +&#xA;'Предельный срок предоставления документов/подачи ДТ: ' + IIF(n.[Marginal_Action_Date] IS NULL, '-', CONVERT(nvarchar, n.[Marginal_Action_Date], 104)) + char(13) + char(10) +&#xA;'Дата и время отправки документов: ' + IIF(n.[send_to_bitrix_at] IS NULL, '-', CONVERT(nvarchar, n.[send_to_bitrix_at], 120)) + char(13) + char(10) +&#xA;'Комментарий специалиста СТО: ' + IIF(COALESCE(n.Commentary, '') = '', '-', n.Commentary)&#xA;AS MessageText&#xA;FROM [webproject].[dbo].[obligations_bitrix_notices] n &#xA;OUTER APPLY (SELECT TOP (1) CONCAT(dd.EMAIL, ';') email_declarant&#xA;FROM [BI].[dwh].[AltaRegNum] rn JOIN [BI].[dwh].[vDimDeclarant] dd &#xA;ON rn.ReleaserUSERNAMEKey = dd.Declarant_Key&#xA;WHERE n.RegNum = rn.RegNum) AS oa1&#xA;OUTER APPLY (SELECT email AS email1 FROM (&#xA;SELECT CONCAT(email, ';') email FROM [webproject].[dbo].[monitor_emails] ee &#xA;WHERE ee.type2 IS NOT NULL AND ee.[type] = (SELECT TOP (1) e.[type] FROM [webproject].[dbo].[monitor_emails] e WHERE e.department = n.department)&#xA;ORDER BY email ASC OFFSET 0 ROWS FETCH NEXT 1 ROW ONLY) x) AS oa2&#xA;OUTER APPLY (SELECT email AS email2 FROM (&#xA;SELECT CONCAT(email, ';') email FROM [webproject].[dbo].[monitor_emails] ee &#xA;WHERE ee.type2 IS NOT NULL AND ee.[type] = (SELECT TOP (1) e.[type] FROM [webproject].[dbo].[monitor_emails] e WHERE e.department = n.department)&#xA;ORDER BY email ASC OFFSET 1 ROWS FETCH NEXT 1 ROW ONLY) x) AS oa3&#xA;OUTER APPLY (SELECT email AS email3 FROM (&#xA;SELECT CONCAT(email, ';') email FROM [webproject].[dbo].[monitor_emails] ee &#xA;WHERE ee.type2 IS NOT NULL AND ee.[type] = (SELECT TOP (1) e.[type] FROM [webproject].[dbo].[monitor_emails] e WHERE e.department = n.department)&#xA;ORDER BY email ASC OFFSET 2 ROWS FETCH NEXT 1 ROW ONLY) x) AS oa4&#xA;WHERE [old] = 0&#xA;)&#xA;SELECT&#xA;COALESCE(email_declarant, '') + COALESCE(email1, '') + COALESCE(email2, '') + COALESCE(email3, '') + email_leader AS emails,&#xA;C.MessageText,&#xA;id&#xA;FROM C&#xA;GO&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ResultSetBitrix" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot;"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Контейнер &quot;Цикл по каждому элементу&quot;"
      DTS:DTSID="{6EAC704B-BEAA-49C6-A718-573D18BF1CC3}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Контейнер &quot;Цикл по каждому элементу&quot;">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{66F4DB38-AAEE-4B0B-BC6A-6565E3156157}"
        DTS:ObjectName="{66F4DB38-AAEE-4B0B-BC6A-6565E3156157}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ResultSet" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{7D048600-1108-4126-98E6-FAE09FC8D13C}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="LetterText">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot;\Отправка почтовых уведомлений"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:DelayValidation="True"
          DTS:DTSID="{5032321F-6CFC-415F-BD08-36521CF552A9}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:ExecValue="1"
          DTS:ExecValueType="3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Отправка почтовых уведомлений"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="FileAttachments">@[User::FilePath]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::EmailList]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{403970C5-EC92-4000-9E2B-5AD29D5787C6}"
              SendMailTask:From="info@eltransplus.ru"
              SendMailTask:To="andreydruzhinin@eltransplus.ru"
              SendMailTask:BCC="mailing@eltransplus.ru"
              SendMailTask:Subject="Уведомление о новом незавершенном обязательстве"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::LetterText" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot;\Удаление файла с сообщением и создание нового"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{5048eacb-866d-4322-909d-a9e2107b8933}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:ForceExecutionResult="0"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Удаление файла с сообщением и создание нового"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1baf3add78904863a8d9c962167dd4fb"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::XMLtext"
              ReadWriteVariables="User::LetterText,User::FilePath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_1baf3add78904863a8d9c962167dd4fb.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BEA7C3AD-CAFC-4969-843F-F10A53346992}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e6a525588f3140f4851d015a3bacb54d</RootNamespace>
    <AssemblyName>ST_1baf3add78904863a8d9c962167dd4fb</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Web_api.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6a525588f3140f4851d015a3bacb54d.Properties.Settings.get_Default():ST_e6a525588f3140f4851d015a3bacb54d.Properties.Sett" +
    "ings")]

namespace ST_e6a525588f3140f4851d015a3bacb54d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Web_api.cs"
                Encoding="UTF8"><![CDATA[using System.Runtime.Serialization;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Security.Cryptography;
using System.Text;
using System.Xml;
using System.Runtime.Serialization.Json;

namespace ST_e6a525588f3140f4851d015a3bacb54d
{
    class Web_api
    {
        private string login = "sa10552";
        private string password = "2VsW5aMn";

        public string[] ProcessXml(string fileName)
        {            
            string[] xmlFiles = ParseXml(fileName);
            string[] result = new string[xmlFiles.Length];

            for (int i = 0; i < xmlFiles.Length; i++)
            {
                result[i] = GetPdf(xmlFiles[i]);             
            }
            return result;
        }

        private string GetPdf(string fullPath)
        {
            byte[] xml = File.ReadAllBytes(fullPath);
            string secret = GetMd5Hash(xml.Length.ToString() + ":" + login + ":" + GetMd5Hash(password));
            string url = @"https://www.alta.ru/xml-preview/api/?login=" + login + "&secret=" + secret;
            string result;

            HttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);
            req.ContentType = "application/xml";
            req.ContentLength = xml.Length;
            req.Method = "POST";

            //запись данных в запрос
            using (Stream s = req.GetRequestStream())
            {
                s.Write(xml, 0, xml.Length);
            }

            //запрос на конвертацию
            //в случае некорректного запроса - 401 ошибка
            try
            {

                using (HttpWebResponse resp = (HttpWebResponse)req.GetResponse())
                {
                    if (resp.StatusCode == HttpStatusCode.OK)
                    {
                        //возврат pdf для файлов размером менее 100 КБ
                        if (resp.ContentType.StartsWith("application/pdf"))
                        {
                            MemoryStream ms = new MemoryStream();
                            resp.GetResponseStream().CopyTo(ms);
                            byte[] pdf = ms.ToArray();
                            ms.Close();
                            result = fullPath.Remove(fullPath.LastIndexOf(".")) + ".pdf";
                            File.WriteAllBytes(result, pdf);
                            return result;
                        }
                        //постановка в очередь для файлов более 100 КБ и возврат id для нового запроса
                        else if (resp.ContentType.StartsWith("application/json"))
                        {
                            string json = string.Empty;
                            string id = string.Empty;
                            Encoding enc = Encoding.UTF8;
                            JsonResponse jr;
                            DataContractJsonSerializer deserializer = new DataContractJsonSerializer(typeof(JsonResponse));

                            try
                            {
                                using (Stream st = resp.GetResponseStream())                           
                                {
                                    jr = (JsonResponse)deserializer.ReadObject(st);                                 
                                }
                            }               
                            catch
                            {
                                throw new JsonException();
                            }

                            id = jr.id;

                            string jSecret = GetMd5Hash(id + ":" + login + ":" + GetMd5Hash(password));
                            string jUrl = @"https://www.alta.ru/xml-preview/api/?login=" + login + "&secret=" + jSecret + "&id=" + id;

                            //запрос на получение файла в очереди
                            HttpWebRequest jReq = (HttpWebRequest)WebRequest.Create(jUrl);
                            jReq.Method = "GET";
                            HttpWebResponse jResp;

                            //10 циклов по 6 секунд - ждем возврата файла в течение минуты
                            for (int i = 0; i < 10; i++)
                            {
                                System.Threading.Thread.Sleep(6000);

                                try
                                {
                                    jResp = (HttpWebResponse)jReq.GetResponse();
                                    
                                        if (jResp.ContentType.StartsWith("application/pdf"))
                                        {
                                            MemoryStream ms = new MemoryStream();
                                            jResp.GetResponseStream().CopyTo(ms);
                                            byte[] pdf = ms.ToArray();
                                            ms.Close();
                                            result = fullPath.Remove(fullPath.LastIndexOf(".")) + ".pdf";
                                            File.WriteAllBytes(result, pdf);
                                            return result;
                                        }

                                    jResp.Close();


                                }
                                catch
                                {
                                    //игнорируем ошибки, возникающие с GET запросом
                                    //и пытаемся дождаться файла
                                    continue;
                                }
                            }
                            throw new TimeOutException();
                        }
                        else
                        {
                            throw new UnknownContentException();
                        }
                    }
                    else
                    {
                        throw new BadResponseException();
                    }
                }
            }
            catch
            {
                //возвращаем xml в случае любых ошибок             
                return fullPath;
            }
        }

        private string GetMd5Hash(string input)
        {
            MD5 md5Hash = MD5.Create();
            byte[] data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(input));
            StringBuilder sBuilder = new StringBuilder();

            for (int i = 0; i < data.Length; i++)
            {
                sBuilder.Append(data[i].ToString("x2"));
            }
            return sBuilder.ToString();
        }

        private string[] ParseXml(string fileNameNoExt)
        {
            string xmlFileName = fileNameNoExt + ".xml";
            XmlDocument xDoc = new XmlDocument();
            xDoc.Load(xmlFileName);
            XmlNodeList nList = xDoc.GetElementsByTagName("edcnt:ContainerDoc");
            int c = nList.Count;

            //если файл представляет собой контейнер, то разбиваем на отдельные документы
            if (c > 1)
            {
                List<string> filesList = new List<string>();
                string xmlTempFileName;
                for (int i = 0; i < c; i++)
                {
                    XmlDocument xTempDoc = new XmlDocument();
                    xTempDoc.Load(xmlFileName);
                    XmlNodeList nTempList = xTempDoc.GetElementsByTagName("edcnt:ContainerDoc");

                    for (int j = c - 1; j >= 0; j--)
                    {
                        if (j != i)
                        {
                            nTempList[j].ParentNode.RemoveChild(nTempList[j]);
                        }
                    }
                    xmlTempFileName = fileNameNoExt + (i + 1).ToString() + ".xml";
                    xTempDoc.Save(xmlTempFileName);
                    filesList.Add(xmlTempFileName);
                }

                string[] str = filesList.ToArray();
                return str;
            }
            else
            {
                string[] str = new string[] { xmlFileName };
                return str;
            }
        }

        [DataContract]
        public class JsonResponse
        {
            [DataMember]
            public string status { get; set; }
            [DataMember]
            public string text { get; set; }
            [DataMember]
            public string id { get; set; }
        }

        public static void ClearFolder(string folderName)
        {
            DirectoryInfo dir = new DirectoryInfo(folderName);

            foreach (FileInfo fi in dir.GetFiles())
            {
                try
                {
                    fi.Delete();
                }
                catch (Exception) { }
            }
        }

        public class TimeOutException : Exception
        {
            public TimeOutException()
            {

            }
        }
        public class BadResponseException : Exception
        {
            public BadResponseException()
            {

            }
        }
        public class UnknownContentException : Exception
        {
            public UnknownContentException()
            {
            }
        }
        public class JsonException : Exception
        {
            public JsonException() { }
        }

    }


}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Text;
#endregion
using System.Net;
using System.Reflection;

namespace ST_e6a525588f3140f4851d015a3bacb54d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
            try
            {
                Dts.Variables["User::LetterText"].Value = Dts.Variables["User::LetterText"].Value + Environment.NewLine + "При наличии вложенного XML файла его можно просмотреть в удобном виде с помощью онлайн-сервиса: " + @"https://www.alta.ru/xml-preview/";
                Dts.Variables["User::FilePath"].Value = "";
                string xmlFileName = @"\\10.10.0.28\alta\EdMsgs\message.xml";
                string xmlText = (string)Dts.Variables["User::XMLtext"].Value;
                Web_api.ClearFolder(@"\\10.10.0.28\alta\EdMsgs");

                if (xmlText != "")
                {
                    using (Stream st = File.Create(xmlFileName)) { }
                    File.WriteAllText(xmlFileName, xmlText, Encoding.UTF8);
                    Web_api w = new Web_api();
                    string[] files = w.ProcessXml(xmlFileName.Remove(xmlFileName.LastIndexOf(".")));
                    Dts.Variables["User::FilePath"].Value = string.Join("|", files);
                }
            }
            catch (Exception e)
            {
                Dts.Events.FireError(0, "Script Task", e.Message, String.Empty, 0);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        public Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            Assembly assembly = null;
            try
            {
                assembly = LoadAssembly(args, assembly);
            }
            catch (Exception exception)
            {
                Dts.Log(exception.ToString(), 0, new byte[0]);
                throw;
            }

            Dts.Log("Exiting CurrentDomain_AssemblyResolve", 0, new byte[0]);
            return assembly;
        }

        private Assembly LoadAssembly(ResolveEventArgs args, Assembly assembly)
        {
            Dts.Log(string.Format("Entering CurrentDomain_AssemblyResolve with args.Name [{0}]", args.Name), 0, new byte[0]);
            String _Common_DLLs = @"\\10.10.0.28\alta\Robot\Data";

            var dllName = string.Format("{0}.dll", args.Name.Split(',')[0]);
            Dts.Log("DLL Name is " + dllName, 0, new byte[0]);
            var dllFilename = Path.Combine(_Common_DLLs, dllName);
            if (File.Exists(dllFilename))
            {
                Dts.Log(string.Format("The file [{0}] was found and that assembly will be loaded.", dllFilename), 0, new byte[0]);
                assembly = Assembly.LoadFile(dllFilename);
            }
            else
            {
                Dts.Log(string.Format("Couldn't find the file [{0}].", dllFilename), 0, new byte[0]);
            }

            return assembly;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e6a525588f3140f4851d015a3bacb54d</msb:CodeName>
		<msb:DisplayName>ST_e6a525588f3140f4851d015a3bacb54d</msb:DisplayName>
		<msb:ProjectId>{95329CA5-7133-4412-B9C1-C4C86BAF6E86}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1baf3add78904863a8d9c962167dd4fb.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Web_api.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6a525588f3140f4851d015a3bacb54d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e6a525588f3140f4851d015a3bacb54d")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6a525588f3140f4851d015a3bacb54d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6a525588f3140f4851d015a3bacb54d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6a525588f3140f4851d015a3bacb54d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6a525588f3140f4851d015a3bacb54d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6a525588f3140f4851d015a3bacb54d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_1baf3add78904863a8d9c962167dd4fb.dll">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
EQBIARgCAQDzAKsAAQALAasAAQDfAKsABgZNABwCVoAJCh8CVoBhAh8CUCAAAAAAhgCVBiMCAQCM
IAAAAACBAFwF6gACACQkAAAAAIEApAXqAAMAfCQAAAAAgQCMBiMCBABgJQAAAACWAFUIKQIFAKgl
AAAAAIYY3QgGAAYAyCUAAAAAhgAQBwYABgBgJwAAAACGACAFLgIGAMAnAAAAAIEAQgs2AggAiigA
AAAAhhjdCAYACgCSKAAAAACDGN0IBgAKAJooAAAAAJMIaAg/AgoAxigAAAAAkwhpAkUCCgDNKAAA
AACTCHUCSwIKANUoAAAAAJYIeQpSAgsA3CgAAAAAhhjdCAYACwDkKAAAAACRGOMIVwILAPAoAAAA
AIYIOQpNAAsA+CgAAAAAhghEChAACwABKQAAAACGCP4KTQAMAAkpAAAAAIYIBwsQAAwAEikAAAAA
hgjRAE0ADQAaKQAAAACGCNgAEAANAJIoAAAAAIYY3QgGAA4AIykAAAAAhhjdCAYADgAjKQAAAACG
GN0IBgAOACMpAAAAAIYY3QgGAA4AIykAAAAAhhjdCAYADgAAAAEA5AEAAAEAuwUAAAEA0QoAAAEA
1woAAAEAAgIAAAEAYQgAAAIABAoAAAEABAoAAAIATwsAAAEAAQUAAAEAAQUAAAEAAQUAAAEAAQUJ
AN0IAQARAN0IBgAZAN0ICgApAN0IEAAxAN0IEAA5AN0IEABBAN0IEABJAN0IEABRAN0IEABZAN0I
EABhAN0IEADJAN0IBgDRAN0IBgDZAN0IBgDhAN0IBgAJAd0IBgApAd0IFQBBAcYJRwBJAZcFTQA5
AU8KUQA5AU8KVwBRAfwCXwBRAVECEABRAcQFZgBRATQBEABRAb0GawB5AB8DcABZAfQCBgBRAeIC
eACBAFgBfgBhAUECTQA5AdYFhACJAN0IBgBhAasGawB5AAMIiQCJABALjwB5AO4CBgA5AVAFlAA5
AT4FmQA5AU8KngBBAdMJpAA5AWYLqwBxARIArgB5AcABtACRAN0IvQCJAV0KxACRATwIygBhAe4C
BgCZAfwC1wBxAeEJ3QChAa8F4wCZAN0IBgCpAZcF6gCZAC0B7wBpAJcFTQCpAN0IBgCpAMgAEACp
AO0BBwGxAKwKDQEMAN0IBgCxAEUFFwGxAX4BHgGxASEBJAE5AU8KLQGpAAcFEAAMAM0ANAEMABAL
OgG5Ad0IEAC5Ab0JSQHBARgDBgBpAN0IBgDJAR8HWgHRAd0IYAHJAQwFZgHpABEKbQHZAa8JcwHh
AdsGeQHpAe0EgAHxAS0ChAHpAfcEiAE5AVgLjQFBAfwCkwFBAfEKmgE5ATcHowHZAScKqgHBAI0B
TQABAtMIsAHZAYUKAQDZAaAFwAH5ANsBTQA5AVYKzgE5AXMK1AERAjkCngBBATIK2wHxANIB4AHp
AN0IBgB5ATUL5gERAd0I6wExAd0IBgDBAN0IBgAIACgABAIIACwACQIpAIsAmAIuAAsAcAIuABMA
eQIuABsAmAIuACMAoQIuACsAygIuADMAygIuADsAygIuAEMAoQIuAEsA0AIuAFMAygIuAFsA5wJJ
AIsAmAJjAHsACQKDAIMACQKJAHMACQKhAGsACQKpAHMACQLBAGsACQLDAGMACQLJAHMACQLhAGsA
CQIBAWsACQJAAmsACQJgAmsACQKAAmsACQKgAmsACQLAAmsACQLgAmsACQIcACQAzwD1AEABTwG5
AcgBBAABAAUAAwAGAAQAAABsCFsCAACJAmECAAB9CmcCAABICmwCAAALC2wCAADcAGwCAgAMAAMA
AgANAAUAAQAOAAUAAgAPAAcAAgASAAkAAQATAAkAAgAUAAsAAQAVAAsAAgAWAA0AAQAXAA0AEQEE
gAAAAQAAANEcUJUAAAAAAABVAAAABAAAAAAAAAAAAAAA8gF5AAAAAAAEAAAAAAAAAAAAAADyAeQG
AAAAAAQAAAAAAAAAAAAAAPIBZgcAAAAABAAAAAAAAAAAAAAA8gGBBgAAAAANAAAAAAAAAAAAAAD7
AekFAAAAAA0AAAAAAAAAAAAAAPsBLgAAAAAAAAAAAAEAAAAuCQAABgACAAcAAgAIAAIACQACAAoA
AgALAAMAAAAATGlzdGAxAEludDMyAE1ENQBnZXRfVVRGOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfMWJhZjNhZGQ3ODkwNDg2M2E4
ZDljOTYyMTY3ZGQ0ZmIAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAU1RfZTZh
NTI1NTg4ZjMxNDBmNDg1MWQwMTVhM2JhY2I1NGQAVGhyZWFkAExvYWQAQWRkAGdldF9pZABzZXRf
aWQAPGlkPmtfX0JhY2tpbmdGaWVsZAA8c3RhdHVzPmtfX0JhY2tpbmdGaWVsZAA8dGV4dD5rX19C
YWNraW5nRmllbGQAUmVtb3ZlQ2hpbGQAQXBwZW5kAHNldF9NZXRob2QAcGFzc3dvcmQAZGVmYXVs
dEluc3RhbmNlAGdldF9TdGF0dXNDb2RlAEh0dHBTdGF0dXNDb2RlAFhtbE5vZGUAZ2V0X1BhcmVu
dE5vZGUAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUATG9hZEZpbGUAZ2V0X05hbWUAZmlsZU5hbWUAR2V0RWxlbWVudHNC
eVRhZ05hbWUAZm9sZGVyTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAGdldF9O
ZXdMaW5lAENvbWJpbmUAZ2V0X0NvbnRlbnRUeXBlAHNldF9Db250ZW50VHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASHR0cFdlYlJlc3BvbnNlAEpzb25SZXNw
b25zZQBHZXRSZXNwb25zZQBDbG9zZQBEaXNwb3NlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBEZWxldGUAV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBEYXRhTWVtYmVyQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAEJ5dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTYXZlAGFkZF9Bc3NlbWJs
eVJlc29sdmUAQ3VycmVudERvbWFpbl9Bc3NlbWJseVJlc29sdmUAUmVtb3ZlAGdldF9JdGVtT2YA
TGFzdEluZGV4T2YAR2V0UGRmAFN5c3RlbS5UaHJlYWRpbmcARW5jb2RpbmcAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUb1N0cmluZwBMb2cAR2V0TWQ1SGFzaABDb21wdXRlSGFzaABmdWxsUGF0
aABzZXRfQ29udGVudExlbmd0aABTdGFydHNXaXRoAFdlYl9hcGkATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2Ny
aXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzFiYWYzYWRkNzg5MDQ4NjNh
OGQ5Yzk2MjE2N2RkNGZiLmRsbABTeXN0ZW0uWG1sAFBhcnNlWG1sAFByb2Nlc3NYbWwARmlsZVN0
cmVhbQBHZXRSZXNwb25zZVN0cmVhbQBHZXRSZXF1ZXN0U3RyZWFtAE1lbW9yeVN0cmVhbQBnZXRf
SXRlbQBTeXN0ZW0ASGFzaEFsZ29yaXRobQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AQXBw
RG9tYWluAGdldF9DdXJyZW50RG9tYWluAGxvZ2luAEpvaW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBCYWRSZXNwb25zZUV4Y2VwdGlvbgBKc29uRXhjZXB0aW9uAFVua25vd25Db250
ZW50RXhjZXB0aW9uAFRpbWVPdXRFeGNlcHRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlv
bi5Kc29uAENvcHlUbwBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBEaXJlY3Rv
cnlJbmZvAFNsZWVwAENoYXIAU3RyaW5nQnVpbGRlcgBDbGVhckZvbGRlcgBzZW5kZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBSZXNvbHZlRXZlbnRIYW5kbGVyAEV2ZW50c09iamVjdFdyYXBwZXIARGF0
YUNvbnRyYWN0SnNvblNlcmlhbGl6ZXIAWG1sT2JqZWN0U2VyaWFsaXplcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZTZhNTI1NTg4ZjMxNDBmNDg1MWQwMTVhM2JhY2I1NGQu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U2YTUyNTU4
OGYzMTQwZjQ4NTFkMDE1YTNiYWNiNTRkLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxl
cwBSZWFkQWxsQnl0ZXMAV3JpdGVBbGxCeXRlcwBHZXRCeXRlcwBTZXR0aW5ncwBSZXNvbHZlRXZl
bnRBcmdzAGFyZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlz
dHMAZ2V0X3N0YXR1cwBzZXRfc3RhdHVzAENvbmNhdABGb3JtYXQAUmVhZE9iamVjdABTeXN0ZW0u
TmV0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AEVudmlyb25tZW50AFhtbERvY3Vt
ZW50AGdldF9Db3VudABIdHRwV2ViUmVxdWVzdABYbWxOb2RlTGlzdABpbnB1dABmaWxlTmFtZU5v
RXh0AFN5c3RlbS5UZXh0AFdyaXRlQWxsVGV4dABnZXRfdGV4dABzZXRfdGV4dABUb0FycmF5AFN5
c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkAZ2V0X0Fzc2VtYmx5AExvYWRBc3NlbWJseQBhc3Nl
bWJseQBvcF9JbmVxdWFsaXR5AEVtcHR5AAADOgAAV2gAdAB0AHAAcwA6AC8ALwB3AHcAdwAuAGEA
bAB0AGEALgByAHUALwB4AG0AbAAtAHAAcgBlAHYAaQBlAHcALwBhAHAAaQAvAD8AbABvAGcAaQBu
AD0AAREmAHMAZQBjAHIAZQB0AD0AAB9hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AG0AbAAACVAA
TwBTAFQAAB9hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBwAGQAZgAAAy4AAAkuAHAAZABmAAAhYQBw
AHAAbABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAACSYAaQBkAD0AAAdHAEUAVAAABXgAMgAACS4A
eABtAGwAACVlAGQAYwBuAHQAOgBDAG8AbgB0AGEAaQBuAGUAcgBEAG8AYwAAD3MAYQAxADAANQA1
ADIAABEyAFYAcwBXADUAYQBNAG4AACFVAHMAZQByADoAOgBMAGUAdAB0AGUAcgBUAGUAeAB0AACB
AR8EQAQ4BCAAPQQwBDsEOARHBDgEOAQgADIEOwQ+BDYENQQ9BD0EPgQzBD4EIABYAE0ATAAgAEQE
MAQ5BDsEMAQgADUEMwQ+BCAAPAQ+BDYEPQQ+BCAAPwRABD4EQQQ8BD4EQgRABDUEQgRMBCAAMgQg
AEMENAQ+BDEEPQQ+BDwEIAAyBDgENAQ1BCAAQQQgAD8EPgQ8BD4ESQRMBE4EIAA+BD0EOwQwBDkE
PQQtAEEENQRABDIEOARBBDAEOgAgAGgAdAB0AHAAcwA6AC8ALwB3AHcAdwAuAGEAbAB0AGEALgBy
AHUALwB4AG0AbAAtAHAAcgBlAHYAaQBlAHcALwABHVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQA
aAAAAQBJXABcADEAMAAuADEAMAAuADAALgAyADgAXABhAGwAdABhAFwARQBkAE0AcwBnAHMAXABt
AGUAcwBzAGEAZwBlAC4AeABtAGwAABtVAHMAZQByADoAOgBYAE0ATAB0AGUAeAB0AAAxXABcADEA
MAAuADEAMAAuADAALgAyADgAXABhAGwAdABhAFwARQBkAE0AcwBnAHMAAAN8AAAXUwBjAHIAaQBw
AHQAIABUAGEAcwBrAABLRQB4AGkAdABpAG4AZwAgAEMAdQByAHIAZQBuAHQARABvAG0AYQBpAG4A
XwBBAHMAcwBlAG0AYgBsAHkAUgBlAHMAbwBsAHYAZQAAd0UAbgB0AGUAcgBpAG4AZwAgAEMAdQBy
AHIAZQBuAHQARABvAG0AYQBpAG4AXwBBAHMAcwBlAG0AYgBsAHkAUgBlAHMAbwBsAHYAZQAgAHcA
aQB0AGgAIABhAHIAZwBzAC4ATgBhAG0AZQAgAFsAewAwAH0AXQAAOVwAXAAxADAALgAxADAALgAw
AC4AMgA4AFwAYQBsAHQAYQBcAFIAbwBiAG8AdABcAEQAYQB0AGEAAA97ADAAfQAuAGQAbABsAAAZ
RABMAEwAIABOAGEAbQBlACAAaQBzACAAAHVUAGgAZQAgAGYAaQBsAGUAIABbAHsAMAB9AF0AIAB3
AGEAcwAgAGYAbwB1AG4AZAAgAGEAbgBkACAAdABoAGEAdAAgAGEAcwBzAGUAbQBiAGwAeQAgAHcA
aQBsAGwAIABiAGUAIABsAG8AYQBkAGUAZAAuAAA7QwBvAHUAbABkAG4AJwB0ACAAZgBpAG4AZAAg
AHQAaABlACAAZgBpAGwAZQAgAFsAewAwAH0AXQAuAAFxUwBUAF8AZQA2AGEANQAyADUANQA4ADgA
ZgAzADEANAAwAGYANAA4ADUAMQBkADAAMQA1AGEAMwBiAGEAYwBiADUANABkAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABLf1WhegqRSalkRRj0xj2+AAQgAQEIAyAA
AQUgAQEREQQgAQEOBiABARGAkQcHAx0OHQ4IIgcTHQUOEjkIEj0SQRJFHQUODhIYEkkOEjkSQRI9
CBJFHQUFAAEdBQ4DIAAOBQABDh0OBwAEDg4ODg4GAAESgKkOBCABAQoEIAASPQcgAwEdBQgIBSAA
EoCxBSAAEYC1BCABAg4FIAEBEj0EIAAdBQQgAQgOBCABDggFAAIODg4GAAIBDh0FAgYOBQAAEoC5
CAABEoC9EYDBBiABARKAvQUgARwSPQQAAQEIBwcDHQUSTQgFAAASgM0FIAEdBQ4GIAEdBR0FBCAB
Dg4FIAESTQ4RBwkOCBUSUQEODggSVRJZCAgFIAESWQ4DIAAIBRUSUQEOBiABEoDZCAUgABKA2Qgg
ARKA2RKA2QYAAw4ODg4FIAEBEwAFIAAdEwAIBwMdEl0IEl0FIAAdEl0KBwUODh0OEj0SYQUAABKA
5QUgAgEcGAYgAQESgOkFIAASgO0FIAASgPEGIAESgPUcAyAAHAMAAA4EIAEBHAUAAgIODgYAARKA
/Q4IAAMBDg4SgLkGAAIODh0OBSAAEoEBCCAFAggODg4IBgcCEnkSYQcgAwEOCB0FBQcDDg4OBQAC
Dg4cBiABHQ4dAwQAAQIOBQABEnkOBCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAQGEoCJBAYSgI0DBhIUAgYIAwYRLAUgAR0ODgQAAQEOByACEnkcEn0IIAISeRJ9EnkFAAAS
gIkFAAASgI0GAAEBEoCNBAAAEhQDAAABBQgAEoCJBQgAEoCNBAgAEhQDKAAOCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lNmE1MjU1ODhmMzE0
MGY0ODUxZDAxNWEzYmFjYjU0ZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAKhHAAAAAAAAAAAAAMJHAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAC0RwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoE
AAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQBQldEcAAABAFCV0Rw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUA
NgBhADUAMgA1ADUAOAA4AGYAMwAxADQAMABmADQAOAA1ADEAZAAwADEANQBhADMAYgBhAGMAYgA1
ADQAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADMANwA3AC4A
MwA4ADIAMgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEAYgBh
AGYAMwBhAGQAZAA3ADgAOQAwADQAOAA2ADMAYQA4AGQAOQBjADkANgAyADEANgA3AGQAZAA0AGYA
YgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEA
cgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBU
AF8AMQBiAGEAZgAzAGEAZABkADcAOAA5ADAANAA4ADYAMwBhADgAZAA5AGMAOQA2ADIAMQA2ADcA
ZABkADQAZgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABf
AGUANgBhADUAMgA1ADUAOAA4AGYAMwAxADQAMABmADQAOAA1ADEAZAAwADEANQBhADMAYgBhAGMA
YgA1ADQAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAz
ADcANwAuADMAOAAyADIANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANwAzADcANwAuADMAOAAyADIANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADUNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot;.PrecedenceConstraints[Ограничение 1]"
          DTS:CreationName=""
          DTS:DTSID="{97279F08-4F07-4AB4-A01A-0FB63214497C}"
          DTS:From="Package\Контейнер &quot;Цикл по каждому элементу&quot;\Удаление файла с сообщением и создание нового"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение 1"
          DTS:To="Package\Контейнер &quot;Цикл по каждому элементу&quot;\Отправка почтовых уведомлений" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E6056B27-7F15-4AE5-A819-C5BEE05639B4}"
          DTS:ObjectName="{E6056B27-7F15-4AE5-A819-C5BEE05639B4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::EmailList" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{2BCCC2DB-3124-44AD-8038-DF38AD952114}"
          DTS:ObjectName="{2BCCC2DB-3124-44AD-8038-DF38AD952114}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::LetterText" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{BFD5E7AC-343B-47E8-8ADE-87948E599588}"
          DTS:ObjectName="{BFD5E7AC-343B-47E8-8ADE-87948E599588}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::XMLtext" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Контейнер &quot;Цикл по каждому элементу&quot;"
      DTS:DTSID="{1c8ad654-006c-4c1a-aec8-aa4bf630aae4}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Контейнер &quot;Цикл по каждому элементу&quot; 1">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{b444e0b9-9f58-43e0-98e1-c21e4af2a523}"
        DTS:ObjectName="{66F4DB38-AAEE-4B0B-BC6A-6565E3156157}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::NotificationResultSet" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{1a3ed381-b825-4636-bf15-9573647afc5c}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="LetterText">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1\Задача &quot;Выполнение SQL&quot;"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Задача &quot;Выполнение SQL&quot;"
          DTS:DTSID="{2E4D3B67-4643-4DED-93A5-1FAD923AB8CA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Задача &quot;Выполнение SQL&quot;"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE [BI].[dwh].[Obligations]
SET [sent_notification] = 1
WHERE [id] = " + (DT_WSTR, 100) @[User::NotificationID]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="UPDATE [BI].[dwh].[Obligations]&#xA;SET [sent_notification] = 1&#xA;WHERE [id] = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1\Отправка почтовых уведомлений"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:DTSID="{87f85fb6-4cea-4c51-9b12-b852a9f91722}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:ExecValue="1"
          DTS:ExecValueType="3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Отправка почтовых уведомлений"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::EmailListNotification]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{403970C5-EC92-4000-9E2B-5AD29D5787C6}"
              SendMailTask:From="info@eltransplus.ru"
              SendMailTask:BCC="mailing@eltransplus.ru"
              SendMailTask:Subject="Уведомление о наступлении контрольной даты по незавершенному обязательству"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::LetterTextNotification" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1.PrecedenceConstraints[Ограничение]"
          DTS:CreationName=""
          DTS:DTSID="{60E3D3AF-7F04-408C-9584-DDE90D581BFC}"
          DTS:From="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1\Задача &quot;Выполнение SQL&quot;"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение"
          DTS:To="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1\Отправка почтовых уведомлений" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8EA2EE59-729F-4B6A-9F66-30C54D14A07C}"
          DTS:ObjectName="{8EA2EE59-729F-4B6A-9F66-30C54D14A07C}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::EmailListNotification" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{9BAD1FE6-2951-4FF4-9071-2102E74EEC9D}"
          DTS:ObjectName="{9BAD1FE6-2951-4FF4-9071-2102E74EEC9D}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::LetterTextNotification" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FE95AEAD-9230-4181-9CEE-2A2B73E8DA49}"
          DTS:ObjectName="{FE95AEAD-9230-4181-9CEE-2A2B73E8DA49}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::NotificationID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Контейнер &quot;Цикл по каждому элементу&quot;"
      DTS:DTSID="{16637242-9d41-407a-a4b6-8f42b39b0e11}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Контейнер &quot;Цикл по каждому элементу&quot; 2">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{47267d5f-1a2c-4586-8576-6486492e43b2}"
        DTS:ObjectName="{66F4DB38-AAEE-4B0B-BC6A-6565E3156157}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ResultSetBitrix" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{05865555-4cad-499f-b317-f0aa32c05dd3}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="LetterText">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2\UPDATE"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Задача &quot;Выполнение SQL&quot;"
          DTS:DTSID="{1EA29FA3-02AB-4AEA-8A10-BCD298B6013B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="UPDATE"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
              SQLTask:SqlStatementSource="DECLARE @VarID VARCHAR(50) = ?&#xA;UPDATE [webproject].[dbo].[obligations_bitrix_notices]&#xA;SET old = 1&#xA;WHERE id = @VarID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@VarID"
                SQLTask:DtsVariableName="IdBitrix::Variable"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2\Отправка почтовых уведомлений"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:DTSID="{1d230c02-179e-400c-9080-29665e928740}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:ExecValue="1"
          DTS:ExecValueType="3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Отправка почтовых уведомлений"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::EmailListBitrix]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{403970C5-EC92-4000-9E2B-5AD29D5787C6}"
              SendMailTask:From="info@eltransplus.ru"
              SendMailTask:BCC="mailing@eltransplus.ru"
              SendMailTask:Subject="Передача документов для исполнения незавершенного обязательства"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::LetterTextBitrix" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2.PrecedenceConstraints[Ограничение]"
          DTS:CreationName=""
          DTS:DTSID="{2C31B5E5-F206-44C0-A012-BF20EA88A823}"
          DTS:From="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2\Отправка почтовых уведомлений"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Ограничение"
          DTS:To="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2\UPDATE"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{78DD43A3-25BD-49CC-BB5E-5C77FA745206}"
          DTS:ObjectName="{78DD43A3-25BD-49CC-BB5E-5C77FA745206}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::EmailListBitrix" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3EE6E75B-AC0B-4706-92E1-80CD3E3619B0}"
          DTS:ObjectName="{3EE6E75B-AC0B-4706-92E1-80CD3E3619B0}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::LetterTextBitrix" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{D92DA016-4BF2-47E4-9E58-72E34F39A446}"
          DTS:ObjectName="{D92DA016-4BF2-47E4-9E58-72E34F39A446}"
          DTS:ValueIndex="2"
          DTS:VariableName="IdBitrix::Variable" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение]"
      DTS:CreationName=""
      DTS:DTSID="{CE6E6A1D-D845-41F4-A840-376E3B39597F}"
      DTS:From="Package\SELECT из таблицы Obligations"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение"
      DTS:To="Package\Контейнер &quot;Цикл по каждому элементу&quot;" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение 1]"
      DTS:CreationName=""
      DTS:DTSID="{A47161A9-859C-4FC3-88AB-BBDA4E62800A}"
      DTS:From="Package\SELECT из таблицы Obligations"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение 1"
      DTS:To="Package\UPDATE max(id) - Obligation_types" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение 2]"
      DTS:CreationName=""
      DTS:DTSID="{37A4262E-8712-44C3-96DF-B7F09D46D8AE}"
      DTS:From="Package\Выборка новых уведомлений"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение 2"
      DTS:To="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение 3]"
      DTS:CreationName=""
      DTS:DTSID="{D7571E13-F696-4D31-961F-C3584737B93A}"
      DTS:From="Package\SELECT из таблицы Obligations 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение 3"
      DTS:To="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="208,42"
          Id="Package\SELECT из таблицы Obligations"
          TopLeft="141,35" />
        <NodeLayout
          Size="208,42"
          Id="Package\SELECT из таблицы Obligations 2"
          TopLeft="546,144" />
        <NodeLayout
          Size="217,42"
          Id="Package\UPDATE max(id) - Obligation_types"
          TopLeft="400,37" />
        <NodeLayout
          Size="223,42"
          Id="Package\Выборка новых уведомлений"
          TopLeft="125,366" />
        <NodeLayout
          Size="243,42"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot;\Отправка почтовых уведомлений"
          TopLeft="68,99" />
        <NodeLayout
          Size="327,42"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot;\Удаление файла с сообщением и создание нового"
          TopLeft="30,32" />
        <EdgeLayout
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot;.PrecedenceConstraints[Ограничение 1]"
          TopLeft="191.5,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="396,199"
          Size="396,242"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot;"
          TopLeft="46,101" />
        <NodeLayout
          Size="208,42"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1\Задача &quot;Выполнение SQL&quot;"
          TopLeft="94,37" />
        <NodeLayout
          Size="243,42"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1\Отправка почтовых уведомлений"
          TopLeft="78,111" />
        <EdgeLayout
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1.PrecedenceConstraints[Ограничение]"
          TopLeft="198.75,79">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="346,206"
          Size="346,249"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 1"
          TopLeft="471,233" />
        <NodeLayout
          Size="118,42"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2\UPDATE"
          TopLeft="104,113" />
        <NodeLayout
          Size="243,42"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2\Отправка почтовых уведомлений"
          TopLeft="38,30" />
        <EdgeLayout
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2.PrecedenceConstraints[Ограничение]"
          TopLeft="161.25,72">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.87931640625,11.04296875,57.7586328125,11.4140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="340,209"
          Size="340,252"
          Id="Package\Контейнер &quot;Цикл по каждому элементу&quot; 2"
          TopLeft="68,438" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение]"
          TopLeft="244.5,77">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение 1]"
          TopLeft="349,57">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,0"
              Start="0,0"
              End="43.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение 2]"
          TopLeft="237.25,408">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение 3]"
          TopLeft="647,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>