<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/24/2020 2:41:40 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{48208AF8-78FB-472D-9890-FF7F2022BB80}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="currency_rates"
  DTS:PackageType="5"
  DTS:VersionBuild="2"
  DTS:VersionGUID="{42F4AB30-0982-465A-BD5A-FEC5722460C5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Update rates"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{281EF84A-1510-4C08-A570-BFBE55D86061}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update rates"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6e7db3dc352c4366882d2deb73a633c2"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e7db3dc352c4366882d2deb73a633c2.Properties.Settings.get_Default():ST_6e7db3dc352c4366882d2deb73a633c2.Properties.Sett" +
    "ings")]

namespace ST_6e7db3dc352c4366882d2deb73a633c2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion
using System;
using System.Linq;
using System.Xml.Linq;
using System.Data;
using System.Data.SqlClient;

namespace ST_6e7db3dc352c4366882d2deb73a633c2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string ConnectionString = @"Data Source=10.10.0.28;User ID=phpuser;Password=gnQCUElU";
            XDocument doc = XDocument.Load(@"https://www.cbr-xml-daily.ru/daily_utf8.xml");
            DateTime date = DateTime.Parse(doc.Element("ValCurs").Attribute("Date").Value);

            var query = doc.Descendants("Valute").Select(v => new
            {
                Date = date,
                NumCode = v.Element("NumCode").Value,
                CharCode = v.Element("CharCode").Value,
                Nominal = Int32.Parse(v.Element("Nominal").Value),
                Name = v.Element("Name").Value,
                Value = Decimal.Parse(v.Element("Value").Value)
            });

            DataTable toSql = new DataTable();
            DataRow row;
            DataColumn[] dataColumns = new DataColumn[]
            {
                new DataColumn("Date", typeof(DateTime)),
                new DataColumn("NumCode", typeof(string)),
                new DataColumn("CharCode", typeof(string)),
                new DataColumn("Nominal", typeof(int)),
                new DataColumn("Name", typeof(string)),
                new DataColumn("Value", typeof(decimal))
            };
            toSql.Columns.AddRange(dataColumns);

            foreach (var item in query)
            {
                if (ExistsInDatabase(item.Date, item.Name) == false)
                {
                    row = toSql.NewRow();
                    row["Date"] = item.Date;
                    row["NumCode"] = item.NumCode;
                    row["CharCode"] = item.CharCode;
                    row["Nominal"] = item.Nominal;
                    row["Name"] = item.Name;
                    row["Value"] = item.Value;
                    toSql.Rows.Add(row);
                }
            }

            using (SqlConnection SqlConnectionObj = new SqlConnection(ConnectionString))
            {
                SqlConnectionObj.Open();
                SqlBulkCopy bulkCopy = new SqlBulkCopy(SqlConnectionObj, SqlBulkCopyOptions.Default | SqlBulkCopyOptions.FireTriggers | SqlBulkCopyOptions.UseInternalTransaction, null);
                bulkCopy.DestinationTableName = @"automation.dbo.currency_rates";
                bulkCopy.ColumnMappings.Add("Date", "Date");
                bulkCopy.ColumnMappings.Add("NumCode", "NumCode");
                bulkCopy.ColumnMappings.Add("CharCode", "CharCode");
                bulkCopy.ColumnMappings.Add("Nominal", "Nominal");
                bulkCopy.ColumnMappings.Add("Name", "Name");
                bulkCopy.ColumnMappings.Add("Value", "Value");
                bulkCopy.WriteToServer(toSql);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        public bool ExistsInDatabase(DateTime date, string name)
        {
            string ConnectionString = @"Data Source=10.10.0.28;User ID=phpuser;Password=gnQCUElU";
            string query_contents = @"SELECT TOP (100) * FROM [automation].[dbo].[currency_rates] ORDER BY [Date] DESC";
            DataTable src_contents = new DataTable();

            using (SqlDataAdapter sda = new SqlDataAdapter(query_contents, ConnectionString))
            {
                sda.Fill(src_contents);
            }

            var query = from c in src_contents.AsEnumerable()
                        where c.Field<DateTime>("Date") == date && c.Field<string>("Name") == name
                        select c;

            return query.Any();
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_6e7db3dc352c4366882d2deb73a633c2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A92A6EA4-0230-4272-B270-F59E49440879}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6e7db3dc352c4366882d2deb73a633c2</RootNamespace>
    <AssemblyName>ST_6e7db3dc352c4366882d2deb73a633c2</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_6e7db3dc352c4366882d2deb73a633c2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_6e7db3dc352c4366882d2deb73a633c2</msb:DisplayName>
		<msb:ProjectId>{AD537EFD-0E47-453F-906B-20CD843AEE29}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_6e7db3dc352c4366882d2deb73a633c2.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6e7db3dc352c4366882d2deb73a633c2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6e7db3dc352c4366882d2deb73a633c2")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e7db3dc352c4366882d2deb73a633c2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e7db3dc352c4366882d2deb73a633c2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e7db3dc352c4366882d2deb73a633c2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6e7db3dc352c4366882d2deb73a633c2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6e7db3dc352c4366882d2deb73a633c2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6e7db3dc352c4366882d2deb73a633c2.dll">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
HAEJAOkHAQARAOkHBgAZAOkHCgApAOkHEAAxAOkHEAA5AOkHEABBAOkHEABJAOkHEABRAOkHEABZ
AOkHEABhAOkHEABpAOkHBgCBAOkHFQCJAOkHBgCRAOkHBgABAekHBgAhAekHGwAMAFsBMwAMACcB
NwAMADkBOwAMAHoBPwAMAEwBQwAMAGoBRwBxAOkHBgAUAMoJZgAUANcIcAAcAMoJZgAcANcIcAAk
AMoJZgAkANcIcAAsAMoJZgAsANcIcAA0AMoJZgA0ANcIcAA8AMoJZgA8ANcIcAAUAJwBoAAcAJwB
oAAkAJwBoAAsAJwBoAA0AJwBoAA8AJwBoABxADUFuAA5AakJywChAB4BEgFJAb4JGAFRAfwJHwH5
AOgEJwFZAfIEuACxANsCMAFRAZQJNgF0AOkHVgFpAbcJXAHBAOkHBgBxAf8BhgHRAOkHjwHBAN4I
lwGJAcEBnQF8ANsHtQGEAA4KzwGMAOECzwGMABcC4QHBAC0K5gHJAO8F6wGMAKgB8QGMALQB9gGM
AI4F+wGMAPIEAALBAKAJBQKRASMBCwKZARoKEQKhAdMCBgDhAOkHEACpARAGBgCxAekHFQKxASAC
EACxAbsIIQLJASMBJwKxAcEHLwKZAH4JNQLZAdYJAQDpAOkHRQLhAeoFSwLpAdQBUQKUAOkHVgH5
AUwCZgJpAUEKhQKZAOkHBgBxATQKkAIJAekHlgIpAekHBgD5APIEuACBAdsCngK5ANsCowKMAOkH
qQIJAoYBuQKxAFEKxwI5AVEK0wIIACwA6wIIADAA8AIhAGsARAQuAAsAgwMuABMAjAMuABsAqwMu
ACMAtAMuACsA3QMuADMA3QMuADsA3QMuAEMAtAMuAEsA4wMuAFMA3QMuAFsA+gNBAGsARARDAGMA
8AJhAGsARARjAHsA8AKBAGsARASDAIMA8AKhAGsARATBAGsARATgAHMA8ALjAGMA8ALpAIsAqwMA
AXMA8AIDAWMA8AIJAYsAqwMgAXMA8AIhAWMA8AJAAXMA8AJLAKYA1QA7AgIAAQAEAAcABQAJAAAA
5QJUAwAArAFZAwAAuAFeAwAAkgVjAwAANAJoAwAA9gRtAwAAiQdyAwAAhgJ4AwAAzgl+AwIAAQAD
AAIAAgAFAAIAAwAHAAIABAAJAAIABQALAAIABgANAAIADwAPAAIAEAARAAEAEQARAAIAEgATACIA
XgB4AIAAiACQAJgAtQC8AL8AwgDFAMgAQgGkAb4B1AFdAgSAAAABAAAA3BweaAAAAAAAAKMAAAAE
AAAAAAAAAAAAAADZAvoAAAAAAA0AAAAAAAAAAAAAAOICPgUAAAAABAAAAAAAAAAAAAAA2QL6BgAA
AAAEAAAAAAAAAAAAAADZAu4AAAAAAAQAAAAAAAAAAAAAANkC+AUAAAAABAAAAAAAAAAAAAAA2QJS
AgAAAAAEAAAAAAAAAAAAAADZAiAJAAAAAAAAAAABAAAAOggAAAYAAwAHAAMACAADAAAAAAAEAEcH
AQAAAAQAFgcCAAAABAAnBwMAAAAEAGQHBAAAAAQAOQcFAAAABABVB2sAdQGtAIACrwCAAsEAwgLB
AM8CAAAAAAA8PmNfX0Rpc3BsYXlDbGFzczBfMAA8PmNfX0Rpc3BsYXlDbGFzczFfMAA8RXhpc3Rz
SW5EYXRhYmFzZT5iX18wADxNYWluPmJfXzAASUVudW1lcmFibGVgMQBFbnVtZXJhYmxlUm93Q29s
bGVjdGlvbmAxAEVxdWFsaXR5Q29tcGFyZXJgMQBJRW51bWVyYXRvcmAxAEludDMyAEZ1bmNgMgBT
VF82ZTdkYjNkYzM1MmM0MzY2ODgyZDJkZWI3M2E2MzNjMgA8PmZfX0Fub255bW91c1R5cGUwYDYA
PE1vZHVsZT4AdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMu
R2VuZXJpYwBMb2FkAEFkZAA8TnVtQ29kZT5pX19GaWVsZAA8Q2hhckNvZGU+aV9fRmllbGQAPE5h
bWU+aV9fRmllbGQAPERhdGU+aV9fRmllbGQAPFZhbHVlPmlfX0ZpZWxkADxOb21pbmFsPmlfX0Zp
ZWxkAGRlZmF1bHRJbnN0YW5jZQBHZXRIYXNoQ29kZQBnZXRfTnVtQ29kZQBnZXRfQ2hhckNvZGUA
QWRkUmFuZ2UARGF0YVRhYmxlAEFzRW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBYTmFtZQBnZXRfTmFtZQBzZXRfRGVzdGluYXRpb25UYWJs
ZU5hbWUAbmFtZQBEYXRlVGltZQBUeXBlAFdoZXJlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFeGlzdHNJbkRhdGFiYXNlAERpc3Bvc2UAUGFy
c2UAZ2V0X0RhdGUAZGF0ZQBEZWJ1Z2dlckJyb3dzYWJsZVN0YXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAFhBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAERlYnVnZ2VyQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhp
ZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFNxbEJ1bGtDb3B5Q29sdW1uTWFwcGluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBEZWNp
bWFsAGdldF9Ob21pbmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF82ZTdkYjNkYzM1MmM0MzY2ODgyZDJkZWI3M2E2MzNjMi5kbGwARmlsbABzZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTcWxUcmFuc2FjdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBTcWxCdWxrQ29weUNvbHVtbk1hcHBpbmdDb2xsZWN0aW9uAERhdGFDb2x1bW5Db2xs
ZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3Rl
bS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBTeXN0ZW0uWG1sLkxpbnEAU3lzdGVtLkxpbnEAPE51
bUNvZGU+al9fVFBhcgA8Q2hhckNvZGU+al9fVFBhcgA8TmFtZT5qX19UUGFyADxEYXRlPmpfX1RQ
YXIAPFZhbHVlPmpfX1RQYXIAPE5vbWluYWw+al9fVFBhcgBJRm9ybWF0UHJvdmlkZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBYQ29udGFpbmVyAERiRGF0YUFkYXB0ZXIAU3FsRGF0YUFkYXB0ZXIAV3Jp
dGVUb1NlcnZlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzZlN2RiM2RjMzUyYzQzNjY4ODJkMmRlYjczYTYzM2MyLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF82ZTdkYjNkYzM1MmM0MzY2ODgyZDJkZWI3
M2E2MzNjMi5Qcm9wZXJ0aWVzAGdldF9Db2x1bW5NYXBwaW5ncwBTZXR0aW5ncwBFcXVhbHMAZ2V0
X0NvbHVtbnMARGF0YVRhYmxlRXh0ZW5zaW9ucwBFbnVtZXJhYmxlUm93Q29sbGVjdGlvbkV4dGVu
c2lvbnMAU3lzdGVtLkRhdGEuRGF0YVNldEV4dGVuc2lvbnMARGF0YVJvd0V4dGVuc2lvbnMAU3lz
dGVtLkNvbGxlY3Rpb25zAFNxbEJ1bGtDb3B5T3B0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0
UmVzdWx0cwBEZXNjZW5kYW50cwBnZXRfUm93cwBGb3JtYXQAT2JqZWN0AFNlbGVjdABvcF9JbXBs
aWNpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAWEVs
ZW1lbnQAWERvY3VtZW50AGdldF9DdXJyZW50AE1vdmVOZXh0AHYARGF0YVJvdwBOZXdSb3cAZ2V0
X0Fzc2VtYmx5AEFueQBTcWxCdWxrQ29weQBvcF9FcXVhbGl0eQAAAAAAgK97AHsAIABEAGEAdABl
ACAAPQAgAHsAMAB9ACwAIABOAHUAbQBDAG8AZABlACAAPQAgAHsAMQB9ACwAIABDAGgAYQByAEMA
bwBkAGUAIAA9ACAAewAyAH0ALAAgAE4AbwBtAGkAbgBhAGwAIAA9ACAAewAzAH0ALAAgAE4AYQBt
AGUAIAA9ACAAewA0AH0ALAAgAFYAYQBsAHUAZQAgAD0AIAB7ADUAfQAgAH0AfQAAcUQAYQB0AGEA
IABTAG8AdQByAGMAZQA9ADEAMAAuADEAMAAuADAALgAyADgAOwBVAHMAZQByACAASQBEAD0AcABo
AHAAdQBzAGUAcgA7AFAAYQBzAHMAdwBvAHIAZAA9AGcAbgBRAEMAVQBFAGwAVQAAV2gAdAB0AHAA
cwA6AC8ALwB3AHcAdwAuAGMAYgByAC0AeABtAGwALQBkAGEAaQBsAHkALgByAHUALwBkAGEAaQBs
AHkAXwB1AHQAZgA4AC4AeABtAGwAAQ9WAGEAbABDAHUAcgBzAAAJRABhAHQAZQAADVYAYQBsAHUA
dABlAAAPTgB1AG0AQwBvAGQAZQAAEUMAaABhAHIAQwBvAGQAZQAAD04AbwBtAGkAbgBhAGwAAAlO
AGEAbQBlAAALVgBhAGwAdQBlAAA7YQB1AHQAbwBtAGEAdABpAG8AbgAuAGQAYgBvAC4AYwB1AHIA
cgBlAG4AYwB5AF8AcgBhAHQAZQBzAACAoVMARQBMAEUAQwBUACAAVABPAFAAIAAoADEAMAAwACkA
IAAqACAARgBSAE8ATQAgAFsAYQB1AHQAbwBtAGEAdABpAG8AbgBdAC4AWwBkAGIAbwBdAC4AWwBj
AHUAcgByAGUAbgBjAHkAXwByAGEAdABlAHMAXQAgAE8AUgBEAEUAUgAgAEIAWQAgAFsARABhAHQA
ZQBdACAARABFAFMAQwAAcVMAVABfADYAZQA3AGQAYgAzAGQAYwAzADUAMgBjADQAMwA2ADYAOAA4
ADIAZAAyAGQAZQBiADcAMwBhADYAMwAzAGMAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAAitBBDN5y00iNAwg8tAMO5QAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERPQYgAQERgI0QFRIIBhMAEwETAhMDEwQTBQMGEwADBhMBAwYTAgMGEwMDBhMEAwYTBRIHARUS
CAYTABMBEwITAxMEEwUHFRKAmQETAAkAABUSgJkBEwAHIAICEwATAAcVEoCZARMBBxUSgJkBEwIH
FRKAmQETAwcVEoCZARMEBxUSgJkBEwUFIAEIEwAOBwYTABMBEwITAxMEEwUCEwADIAAOAhMBAhMC
AhMDAhMEAhMFCQADDhKAoQ4dHDwHChIcDhJRFRJVARUSCAYRWQ4OCA4RXRJhEmUdEmkVEm0BFRII
BhFZDg4IDhFdFRIIBhFZDg4IDhFdEnEFAAESUQ4GAAESgKUOByABEn0SgKUIIAESgK0SgKUFAAER
WQ4LIAEVElUBEn0SgKUTFRKAsQISfRUSCAYRWQ4OCA4RXQUgAgEcGBgQAgIVElUBHgEVElUBHgAV
EoCxAh4AHgEQCgISfRUSCAYRWQ4OCA4RXQgAARKAuRGAvQcgAgEOEoC5BSAAEoDFBiABAR0SaRAV
ElUBFRIIBhFZDg4IDhFdCCAAFRJtARMAEBUSbQEVEggGEVkODggOEV0EIAATAAwVEggGEVkODggO
EV0EIAATBAQgABJlBSACAQ4cBCAAEwEEIAATAgQgABMDBCAAEwUFIAASgMkFIAEBEmUDIAACCyAD
ARJxEYDdEoDhBSAAEoDlByACEoDpDg4FIAEBEmEFIAASgO0JBwQSIA4SYRJ1BSACAQ4OBSABCBJh
CwABFRKA+QESZRJhCBUSgLECEmUCGRABAhUSgPkBHgAVEoD5AR4AFRKAsQIeAAIECgESZQoQAQEC
FRJVAR4ABSAAEoEBByACAQ4SgQEEAAEIDgUAARFdDg8gBgETABMBEwITAxMEEwUIEAECHgASZQ4E
CgERWQcAAgIRWRFZAwoBDgUAAgIODgi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAAEBhKAhQQG
EoCJAwYSFAIGCAMGERgDBhFZAgYOBCABAhwDIAAIBiACAhFZDgUAABKAhQUAABKAiQYAAQESgIkE
AAASFAMAAAEQIAEVEggGEVkODggOEV0SfQUgAQISZQQoABMABCgAEwEEKAATAgQoABMDBCgAEwQE
KAATBQUIABKAhQUIABKAiQQIABIUCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQgBAAIAAAAAACgBACNTVF82ZTdkYjNkYzM1MmM0MzY2ODgyZDJkZWI3M2E2MzNjMgAABQEA
AAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQgBAAAAAAAAAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAADUQwAAAAAAAAAAAADuQwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4EMAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAa
BAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAHmjcHAAAAQAeaNwcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
egMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA2
AGUANwBkAGIAMwBkAGMAMwA1ADIAYwA0ADMANgA2ADgAOAAyAGQAMgBkAGUAYgA3ADMAYQA2ADMA
MwBjADIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAzADgAOAAu
ADIANgA2ADUANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2AGUA
NwBkAGIAMwBkAGMAMwA1ADIAYwA0ADMANgA2ADgAOAAyAGQAMgBkAGUAYgA3ADMAYQA2ADMAMwBj
ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADYAZQA3AGQAYgAzAGQAYwAzADUAMgBjADQAMwA2ADYAOAA4ADIAZAAyAGQAZQBiADcAMwBh
ADYAMwAzAGMAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwA2AGUANwBkAGIAMwBkAGMAMwA1ADIAYwA0ADMANgA2ADgAOAAyAGQAMgBkAGUAYgA3ADMAYQA2
ADMAMwBjADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcA
MwA4ADgALgAyADYANgA1ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADcAMwA4ADgALgAyADYANgA1ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAADQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Update rates"
          TopLeft="277,165" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>