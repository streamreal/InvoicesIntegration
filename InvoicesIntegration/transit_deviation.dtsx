<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/14/2020 1:53:49 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{8DE6347E-BF03-4B9A-8C2E-08588E34DBBF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="10"
  DTS:VersionGUID="{0CA6884F-12F0-4F7D-8FA3-C82B78619274}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Вставка и обновление записей о закрытии ТТ"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B627288A-720F-477C-9EDC-91545E314935}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Вставка и обновление записей о закрытии ТТ"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="INSERT [aberration].[dbo].[closetransit_aberration]&#xA;([RegNumDT],[No_],[CloseDelivery],[Log_Date],[terminal_code],[customer],[transport],[creater],[sender])&#xA;SELECT [RegNumDT],[No_],[CloseDelivery],&#xA;CASE &#xA;WHEN [Log_Date] &gt; [DELIVERY_SVX_DATE_TIME]&#xA;THEN (CASE &#xA;&#x9;&#x9;WHEN CAST([Log_Date] AS time(0)) &lt; '09:00:00'&#xA;&#x9;&#x9;&#x9;THEN CAST(CAST([Log_Date] AS date) AS datetime) + CAST('09:00:00' AS datetime)&#xA;&#x9;&#x9;WHEN CAST([Log_Date] AS time(0)) &gt; '20:15:00'&#xA;&#x9;&#x9;&#x9;THEN CAST(CAST(DATEADD(day, 1, [Log_Date]) AS date) AS datetime) + CAST('09:00:00' AS datetime)&#xA;&#x9;&#x9;ELSE [Log_Date]&#xA;&#x9; END)&#xA;ELSE (CASE &#xA;&#x9;&#x9;WHEN CAST([DELIVERY_SVX_DATE_TIME] AS time(0)) &lt; '09:00:00'&#xA;&#x9;&#x9;&#x9;THEN CAST(CAST([DELIVERY_SVX_DATE_TIME] AS date) AS datetime) + CAST('09:00:00' AS datetime) &#xA;&#x9;&#x9;WHEN CAST([DELIVERY_SVX_DATE_TIME] AS time(0)) &gt; '20:15:00'&#xA;&#x9;&#x9;&#x9;THEN CAST(CAST(DATEADD(day, 1, [DELIVERY_SVX_DATE_TIME]) AS date) AS datetime) + CAST('09:00:00' AS datetime) &#xA;&#x9;&#x9;ELSE [DELIVERY_SVX_DATE_TIME]&#xA;&#x9; END) &#xA;END Log_Date,&#xA;[Terminal_Code], CustomerName, COALESCE(LEFT(TrainTransportDesc, 100), '-') TrainTransportDesc, COALESCE(CreaterUsername_Full, '-') CreaterUsername_Full, COALESCE(RegUsername_Full, '-') RegUsername_Full&#xA;FROM [BI].[dwh].[MonitorLogValue_A] l&#xA;OUTER APPLY (SELECT TOP (1) Terminal_Code, CustomerName, TrainTransportDesc, CreaterUsername_Full, RegUsername_Full, DELIVERY_SVX_DATE_TIME FROM [BI].[dwh].[MonitorsDatamart] md WHERE md.No_ = l.No_ AND md.isConcat = 0) AS oa&#xA;WHERE NOT EXISTS &#xA;(SELECT 0 FROM [aberration].[dbo].[closetransit_aberration] m&#xA;WHERE m.no_ = l.no_) AND DELIVERY_SVX_DATE_TIME IS NOT NULL&#xA;GO&#xA;UPDATE ab&#xA;SET [transit_closure_monitor] = &#xA;(&#xA;SELECT TOP (1) [man_TransportDeliveryCloseDateTimeCaption] tr&#xA;FROM [webproject].[dbo].[monitor_manual_data] mm &#xA;JOIN [BI].[dwh].[CargoDelivery] c ON mm.key_code = c.CargoID&#xA;WHERE c.DeliveryNo_ = ab.No_ AND mm.[man_TransportDeliveryCloseDateTimeCaption] IS NOT NULL&#xA;)&#xA;FROM [aberration].[dbo].[closetransit_aberration] ab&#xA;WHERE [sent_to_bitrix] = 0 AND [transit_closure_monitor] IS NULL AND [transit_closure_update] IS NULL&#xA;GO&#xA;UPDATE [aberration].[dbo].[closetransit_aberration]&#xA;SET [transit_closure_update] = GETDATE()&#xA;WHERE [transit_closure_update] IS NULL AND [transit_closure_monitor] IS NOT NULL &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Отправка сообщений"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{9AED0060-27D1-45AF-A4E5-2D5CB98D381A}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Отправка сообщений"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0e4d9028c4e04e52b73214ba6e43acf4"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="TransitContext.cs"
            Encoding="UTF8"><![CDATA[using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System;


namespace ST_0e4d9028c4e04e52b73214ba6e43acf4
{
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aberration")]
	public partial class TransitContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertclosetransit_aberration(closetransit_aberration instance);
    partial void Updateclosetransit_aberration(closetransit_aberration instance);
    partial void Deleteclosetransit_aberration(closetransit_aberration instance);
    #endregion

		
		public TransitContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransitContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransitContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransitContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<closetransit_aberration> closetransit_aberration
		{
			get
			{
				return this.GetTable<closetransit_aberration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name= "aberration.dbo.closetransit_aberration")]
	public partial class closetransit_aberration 
	{		

		private string _RegNumDT;
		
		private string _No_;
		
		private System.Nullable<int> _CloseDelivery;
		
		private System.DateTime _Log_Date;
		
		private System.Nullable<System.DateTime> _transit_closure_monitor;
		
		private System.Nullable<System.DateTime> _transit_closure_update;
		
		private int _sent_to_bitrix;
		
		private int _id;
		
		private string _terminal_code;
		
		private string _customer;
		
		private string _transport;
		
		private string _creater;
		
		private string _sender;
		
    #region Определения метода расширяемости
    partial void OnCreated();
 
    #endregion
		
		public closetransit_aberration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNumDT", DbType="VarChar(400)")]
		public string RegNumDT
		{
			get
			{
				return this._RegNumDT;
			}
			set
			{
				if ((this._RegNumDT != value))
				{				
					this._RegNumDT = value;		
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_", DbType="VarChar(20)")]
		public string No_
		{
			get
			{
				return this._No_;
			}
			set
			{
				if ((this._No_ != value))
				{
					this._No_ = value;			
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDelivery", DbType="Int")]
		public System.Nullable<int> CloseDelivery
		{
			get
			{
				return this._CloseDelivery;
			}
			set
			{
				if ((this._CloseDelivery != value))
				{
					
					this._CloseDelivery = value;
					
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Log_Date
		{
			get
			{
				return this._Log_Date;
			}
			set
			{
				if ((this._Log_Date != value))
				{
					
					this._Log_Date = value;
					
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transit_closure_monitor", DbType="DateTime")]
		public System.Nullable<System.DateTime> transit_closure_monitor
		{
			get
			{
				return this._transit_closure_monitor;
			}
			set
			{
				if ((this._transit_closure_monitor != value))
				{
					
					this._transit_closure_monitor = value;
					
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transit_closure_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> transit_closure_update
		{
			get
			{
				return this._transit_closure_update;
			}
			set
			{
				if ((this._transit_closure_update != value))
				{
					
					this._transit_closure_update = value;
				
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent_to_bitrix", DbType="Int NOT NULL")]
		public int sent_to_bitrix
		{
			get
			{
				return this._sent_to_bitrix;
			}
			set
			{
				if ((this._sent_to_bitrix != value))
				{
					
					this._sent_to_bitrix = value;
				
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					
					this._id = value;
					
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terminal_code", DbType="NVarChar(100)")]
		public string terminal_code
		{
			get
			{
				return this._terminal_code;
			}
			set
			{
				if ((this._terminal_code != value))
				{
					
					this._terminal_code = value;
				
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="NVarChar(100)")]
		public string customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					
					this._customer = value;
				
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transport", DbType="NVarChar(100)")]
		public string transport
		{
			get
			{
				return this._transport;
			}
			set
			{
				if ((this._transport != value))
				{
					
					this._transport = value;
				
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creater", DbType="NVarChar(100)")]
		public string creater
		{
			get
			{
				return this._creater;
			}
			set
			{
				if ((this._creater != value))
				{
					
					this._creater = value;
				
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender", DbType="NVarChar(100)")]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
				
					this._sender = value;
					
				}
			}
		}	
	}
}
#pragma warning restore 1591]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties.Settings.get_Default():ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties.Sett" +
    "ings")]

namespace ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data.SqlClient;
using System.Linq;
#endregion

namespace ST_0e4d9028c4e04e52b73214ba6e43acf4
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {

                Bitrix24 bx_logon = new Bitrix24();
                string message = String.Empty;

                SqlConnection connection = (SqlConnection)Dts.Connections["10.10.0.28.automation.phpuser"].AcquireConnection(Dts.Transaction);

                TransitContext db = new TransitContext(connection);

                var messagesToSend = db.closetransit_aberration.Where(m =>
                    m.sent_to_bitrix == 0
                    && m.transit_closure_monitor == null
                    && m.transit_closure_update == null
                    && m.terminal_code.Trim().ToUpper() == "СВХЯРЦЕВО"
                    && (DateTime.Now - m.Log_Date).TotalMinutes > 60
                    ).Select(m => m);

                foreach (closetransit_aberration msg in messagesToSend)
                {
                    message = "Доставка: " + msg.No_ + System.Environment.NewLine +
                              "Дата и время появления записи в Мониторе \"Закрой доставку\": " + msg.Log_Date.ToString("dd.MM.yyyy HH:mm:ss") + System.Environment.NewLine +
                              "Заказчик: " + msg.customer + System.Environment.NewLine +
                              "Транспортное средство: " + msg.transport + System.Environment.NewLine +
                              "Создал ДТ: " + msg.creater + System.Environment.NewLine +
                              "Подал ДТ: " + msg.sender;
                    try
                    {
                        _ = bx_logon.SendCommand("log.blogpost.add", "",
                        "USER_ID=1716" +
                        "&POST_TITLE=Доставка не закрыта в течение одного часа с момента подготовки ДТ к подаче (СВХ Елтранс+)" +
                        "&POST_MESSAGE=" + message +
                        "&DEST[0]=SG330"
                        );
                    }
                    catch
                    {
                        continue;
                    }

                    msg.sent_to_bitrix = 1;
                }

                db.SubmitChanges();
                Dts.Connections["10.10.0.28.automation.phpuser"].ReleaseConnection(connection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "", ex.Message, "", 0);
                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Bitrix24.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
#endregion
using System.IO;
using System.Net;
using System.Text;

partial class Bitrix24
{
    public string SendCommand(string Command, string GetParams = "", string PostParams = "")
    {
        string BX_REST_URI = "https://bitrix.eltransplus.ru/rest/1/szxa4ogn53mr5x0z/" + Command + ".json";

        if (String.IsNullOrEmpty(GetParams) == false)
        {
            BX_REST_URI = BX_REST_URI + "&" + GetParams;
        }

        //Создаем новое HTTP подключение для отправки REST-запроса в Битрикс24
        HttpWebRequest requestBitrixREST = (HttpWebRequest)WebRequest.Create(BX_REST_URI);
        requestBitrixREST.Method = "POST";

        //Готовим тело запроса и вставляем его в тело POST-запроса  
        byte[] byteArrayBody = Encoding.UTF8.GetBytes(PostParams);
        requestBitrixREST.ContentType = "application/x-www-form-urlencoded";
        requestBitrixREST.ContentLength = byteArrayBody.Length;

        Stream dataBodyStream = requestBitrixREST.GetRequestStream();
        dataBodyStream.Write(byteArrayBody, 0, byteArrayBody.Length);
        dataBodyStream.Close();

        //Отправляем данные в Битрикс24
        HttpWebResponse responseBitrixREST = (HttpWebResponse)requestBitrixREST.GetResponse();

        //Читаем тело ответа от Битрикс24
        Stream dataStreamBitrixREST = responseBitrixREST.GetResponseStream();
        var readerBitrixREST = new StreamReader(dataStreamBitrixREST);
        string stringBitrixREST = readerBitrixREST.ReadToEnd();

        //Закрываем все подключения и потоки
        readerBitrixREST.Close();
        dataStreamBitrixREST.Close();
        responseBitrixREST.Close();

        //Возвращаем строку ответа в формате JSON
        return stringBitrixREST;
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_0e4d9028c4e04e52b73214ba6e43acf4</msb:CodeName>
		<msb:DisplayName>ST_0e4d9028c4e04e52b73214ba6e43acf4</msb:DisplayName>
		<msb:ProjectId>{5235F0AC-EF23-4335-AF14-C7063F050930}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0e4d9028c4e04e52b73214ba6e43acf4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="TransitContext.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="Bitrix24.cs"/>
		<msb:File Include="objLogonBitrixOAuth.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0e4d9028c4e04e52b73214ba6e43acf4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0e4d9028c4e04e52b73214ba6e43acf4")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
[assembly: NeutralResourcesLanguage("ru")]]]></ProjectItem>
          <ProjectItem
            Name="objLogonBitrixOAuth.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
#endregion
using System.Runtime.Serialization;

partial class Bitrix24
    {
    [DataContract]
        public class objLogonBitrixOAuth
        {
            [DataMember]
            public string expires_in { get; set; }
            [DataMember]
            public string refresh_token { get; set; }
            [DataMember]
            public string access_token { get; set; }
        }
    }]]></ProjectItem>
          <ProjectItem
            Name="ST_0e4d9028c4e04e52b73214ba6e43acf4.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C78C2381-6F43-47B4-8078-0AB815744A66}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0e4d9028c4e04e52b73214ba6e43acf4</RootNamespace>
    <AssemblyName>ST_0e4d9028c4e04e52b73214ba6e43acf4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Bitrix24.cs" />
    <Compile Include="objLogonBitrixOAuth.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="TransitContext.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0e4d9028c4e04e52b73214ba6e43acf4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0e4d9028c4e04e52b73214ba6e43acf4.dll">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
4QBRCgYAGQFRCgYAOQFRChUASQEFDCMASQFmDSoAUQHYAy8AUQG2ARAAYQGEADYAYQF6CzwAUQHN
AhAAUQFoBkIAUQFDB0cAaQH0A00AaQF6AwYAUQFuA1UAcQExB0cAgQFRClsAiQGgAWIAiQF6AwYA
cQF6AwYAcQBRCgYAmQBRCmYAmQBRCm0AmQAmAnUAkQFRCgYASQFYDYQADAA6DJ0ADAAQBqIAyQBY
DaYAFAAQBqIAFAA6DJ0ASQFuDeQA6QDkC+cAmQHMC+0AoQFUB/MAmQHOCPoAqQH+CP4AsQGGAgMB
wQEjCgwByQFyAhUBwQF0DR4BwQFbDCoBwQHWBjQByQBMDaYAwQHWBkABwQFcCTQBSQFkB2IAwQEE
B1ABSQHvCWIAyQDtDGAByQC/CGUBwQEMDG8BCQJpC34BwQF6BzQBwQH1AIIBKQLdAp4BKQIcDMkB
HABDCvgBJACGDJ0AQQLBAgoCyQBfBg4CSQEFDBMCSQK9DKIAUQKAAwYAmQAsCwYAqQEQCRkCmQFM
DAEAmQH6Cx4CCQEaAmIAWQItCiQC6QBRCgYAsQEbDS0CIQFRCjMCQQFRCgYADgAJAAAADgANAAAA
CABYAE0CCABcAFICLgALACQDLgATAC0DLgAbAEwDLgAjAFUDLgArAH4DLgAzAH4DLgA7AH4DLgBD
AFUDLgBLAIQDLgBTAH4DLgBbAJsDLgBjAKMDSQCTADcEYwCDAO0DaQCTAGYEgwCLAAQEiQCTAI8E
owCbAFICqQCTALoEwwCjAFICyQCTAO4E6QCTACgFAwFrAFICCQGTAGEFKQGTAJYFQwFzAFICSQGT
AHAGaQGTAKUGiQGTANUGqQGTAAYHyQGTADUH6QGrAEwDCQKrAEwDIQJzAFICQQJzAFICSQJ7AFIC
YQJzAFICaQJ7AFICgQJzAFICiQJ7AFICoAVzAFICwAVzAFIC4AVzAFICAAZzAFICIAZzAFICQAZz
AFICHACKAK4AxAADAAEABAACAAYADwAHABEACAASAAAAYAjsAgAA1AD1AgAA8QD1AgAAPg35AgAA
mQMBAwAAfgoGAwAAwQMGAwAADA0PAwAARAEPAwAADAL1AgAA5gn1AgAApAz1AgAAGwr1AgAAqAn1
AgAAswkTAwAAFwMZAwAARAwfAwAA6Af1AgAApQf1AgAAyAf1AgIABwADAAIACgAFAAEACwAFAAIA
DAAHAAEADQAHAAIADgAJAAEADwAJAAIAEAALAAEAEQALAAIAEgANAAEAEwANAAIAFAAPAAEAFQAP
AAIAFgARAAEAFwARAAIAGAATAAEAGQATAAIAGgAVAAEAGwAVAAIAHAAXAAEAHQAXAAIAHgAZAAEA
HwAZAAIAIAAbAAEAIQAbAAIAIgAdAAEAIwAdAAIAJwAfAAIAKAAhAAEAKQAhAAIAKgAjAAIALQAl
AAEALgAlAAIALwAnAAEAMAAnAAIAMQApAAEAMgApAJcAvQDwAQICBIAAAAEAAADoHXF6AAAAAAAA
YAAAAAQAAAAAAAAAAAAAADsCCAEAAAAABAAAAAAAAAAAAAAAOwKiCAAAAAAEAAAAAAAAAAAAAAA7
AmQJAAAAAAQAAAAAAAAAAAAAADsC/AAAAAAADQAAAAAAAAAAAAAARAKOBgAAAAAEAAAAAAAAAAAA
AAA7AuMCAAAAAAQAAAAAAAAAAAAAADsCXQcAAAAADQAAAAAAAAAAAAAARAKkAAAAAAAAAAAAAQAA
ANoKAAAIAAIACQAFAAoABQBVAH8AkwCTAZUAfwCTAL0BlwDpAQAAAAAAVGFibGVgMQBOdWxsYWJs
ZWAxAElFbnVtZXJhYmxlYDEASVF1ZXJ5YWJsZWAxAEV4cHJlc3Npb25gMQBJRW51bWVyYXRvcmAx
AEludDMyAEZ1bmNgMgBCaXRyaXgyNABTVF8wZTRkOTAyOGM0ZTA0ZTUyYjczMjE0YmE2ZTQzYWNm
NABnZXRfVVRGOAA8PjkAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwBnZXRfUmVnTnVtRFQAc2V0X1JlZ051bURUAHZhbHVlX18AZ2V0X05vXwBzZXRfTm9f
AExhbWJkYQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
aWMAQXV0b1N5bmMAZ2V0X2lkAHNldF9pZAA8cmVmcmVzaF90b2tlbj5rX19CYWNraW5nRmllbGQA
PGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+a19fQmFja2luZ0ZpZWxk
AFJlYWRUb0VuZABTZW5kQ29tbWFuZABzZXRfTWV0aG9kAGRlZmF1bHRJbnN0YW5jZQBBdHRyaWJ1
dGVNYXBwaW5nU291cmNlAG1hcHBpbmdTb3VyY2UAZ2V0X3Rlcm1pbmFsX2NvZGUAc2V0X3Rlcm1p
bmFsX2NvZGUAZ2V0X01lc3NhZ2UAR2V0VGFibGUASURpc3Bvc2FibGUAUXVlcnlhYmxlAERvdWJs
ZQBSdW50aW1lTWV0aG9kSGFuZGxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldE1ldGhvZEZyb21IYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBnZXRfTmV3TGluZQBzZXRfQ29udGVudFR5cGUAV2hlcmUAU3lzdGVtLkNvcmUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASHR0cFdlYlJl
c3BvbnNlAEdldFJlc3BvbnNlAENsb3NlAERpc3Bvc2UAZ2V0X0xvZ19EYXRlAHNldF9Mb2dfRGF0
ZQBnZXRfdHJhbnNpdF9jbG9zdXJlX3VwZGF0ZQBzZXRfdHJhbnNpdF9jbG9zdXJlX3VwZGF0ZQBD
cmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBOZXV0cmFsUmVzb3VyY2VzTGFuZ3VhZ2VB
dHRyaWJ1dGUAVGFibGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBEYXRhYmFzZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQ29sdW1uQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAERhdGFNZW1iZXJBdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBEYXRhQ29udHJhY3RBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0
X0hhc1ZhbHVlAHZhbHVlAEVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3lzdGVt
LkRhdGEuTGlucS5NYXBwaW5nAFRvU3RyaW5nAHNldF9Db250ZW50TGVuZ3RoAG9iakxvZ29uQml0
cml4T0F1dGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sARXF1YWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAENhbGwAU1RfMGU0ZDkwMjhjNGUwNGU1MmI3MzIxNGJhNmU0M2FjZjQuZGxs
AEdldFJlc3BvbnNlU3RyZWFtAEdldFJlcXVlc3RTdHJlYW0AZ2V0X0l0ZW0AU3lzdGVtAFRyaW0A
RW51bQByZXNvdXJjZU1hbgBHcmVhdGVyVGhhbgBUaW1lU3BhbgBnZXRfcmVmcmVzaF90b2tlbgBz
ZXRfcmVmcmVzaF90b2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBNZXRob2RDYWxsRXhwcmVzc2lvbgBN
ZW1iZXJFeHByZXNzaW9uAFBhcmFtZXRlckV4cHJlc3Npb24AQ29uc3RhbnRFeHByZXNzaW9uAEJp
bmFyeUV4cHJlc3Npb24AZ2V0X2Nsb3NldHJhbnNpdF9hYmVycmF0aW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24A
b3BfU3VidHJhY3Rpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAElEYkNvbm5l
Y3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBj
b25uZWN0aW9uAEV4Y2VwdGlvbgBNZXRob2RJbmZvAEN1bHR1cmVJbmZvAEFuZEFsc28AU3lzdGVt
LkRhdGEuTGlucQBTeXN0ZW0uTGlucQBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfc2VuZGVy
AHNldF9zZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBnZXRfY3Vz
dG9tZXIAc2V0X2N1c3RvbWVyAFRvVXBwZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfY3JlYXRl
cgBzZXRfY3JlYXRlcgBQYXJhbWV0ZXIARmlyZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0
b3IALmN0b3IALmNjdG9yAGdldF90cmFuc2l0X2Nsb3N1cmVfbW9uaXRvcgBzZXRfdHJhbnNpdF9j
bG9zdXJlX21vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8wZTRkOTAyOGM0ZTA0ZTUyYjczMjE0YmE2ZTQz
YWNmNC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU3VibWl0
Q2hhbmdlcwBTVF8wZTRkOTAyOGM0ZTA0ZTUyYjczMjE0YmE2ZTQzYWNmNC5Qcm9wZXJ0aWVzAGdl
dF9Ub3RhbE1pbnV0ZXMAR2V0Qnl0ZXMAU2V0dGluZ3MAR2V0UGFyYW1zAFBvc3RQYXJhbXMAU3lz
dGVtLkxpbnEuRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBT
dWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAENvbmNhdABTdWJ0cmFjdABP
YmplY3QAU2VsZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQAR2V0VmFsdWVPckRlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAQ29uc3RhbnQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEVudmlyb25tZW50AGdl
dF9DdXJyZW50AGdldF90cmFuc3BvcnQAc2V0X3RyYW5zcG9ydABIdHRwV2ViUmVxdWVzdABNb3Zl
TmV4dABTeXN0ZW0uVGV4dABEYXRhQ29udGV4dABUcmFuc2l0Q29udGV4dABnZXRfTm93AGdldF9z
ZW50X3RvX2JpdHJpeABzZXRfc2VudF90b19iaXRyaXgAZ2V0X0Fzc2VtYmx5AGdldF9DbG9zZURl
bGl2ZXJ5AHNldF9DbG9zZURlbGl2ZXJ5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkASXNOdWxs
T3JFbXB0eQBQcm9wZXJ0eQAAAAAAbWgAdAB0AHAAcwA6AC8ALwBiAGkAdAByAGkAeAAuAGUAbAB0
AHIAYQBuAHMAcABsAHUAcwAuAHIAdQAvAHIAZQBzAHQALwAxAC8AcwB6AHgAYQA0AG8AZwBuADUA
MwBtAHIANQB4ADAAegAvAAALLgBqAHMAbwBuAAADJgAACVAATwBTAFQAAENhAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUAZAABOzEA
MAAuADEAMAAuADAALgAyADgALgBhAHUAdABvAG0AYQB0AGkAbwBuAC4AcABoAHAAdQBzAGUAcgAA
A20AABMhBBIEJQQvBCAEJgQVBBIEHgQBFRQEPgRBBEIEMAQyBDoEMAQ6ACAAAXkUBDAEQgQwBCAA
OAQgADIEQAQ1BDwETwQgAD8EPgRPBDIEOwQ1BD0EOARPBCAANwQwBD8EOARBBDgEIAAyBCAAHAQ+
BD0EOARCBD4EQAQ1BCAAIgAXBDAEOgRABD4EOQQgADQEPgRBBEIEMAQyBDoEQwQiADoAIAABJ2QA
ZAAuAE0ATQAuAHkAeQB5AHkAIABIAEgAOgBtAG0AOgBzAHMAABUXBDAEOgQwBDcERwQ4BDoEOgAg
AAEvIgRABDAEPQRBBD8EPgRABEIEPQQ+BDUEIABBBEAENQQ0BEEEQgQyBD4EOgAgAAEXIQQ+BDcE
NAQwBDsEIAAUBCIEOgAgAAEVHwQ+BDQEMAQ7BCAAFAQiBDoAIAABIWwAbwBnAC4AYgBsAG8AZwBw
AG8AcwB0AC4AYQBkAGQAAAEAgP9VAFMARQBSAF8ASQBEAD0AMQA3ADEANgAmAFAATwBTAFQAXwBU
AEkAVABMAEUAPQAUBD4EQQRCBDAEMgQ6BDAEIAA9BDUEIAA3BDAEOgRABEsEQgQwBCAAMgQgAEIE
NQRHBDUEPQQ4BDUEIAA+BDQEPQQ+BDMEPgQgAEcEMARBBDAEIABBBCAAPAQ+BDwENQQ9BEIEMAQg
AD8EPgQ0BDMEPgRCBD4EMgQ6BDgEIAAUBCIEIAA6BCAAPwQ+BDQEMARHBDUEIAAoACEEEgQlBCAA
FQQ7BEIEQAQwBD0EQQQrACkAJgBQAE8AUwBUAF8ATQBFAFMAUwBBAEcARQA9AAEdJgBEAEUAUwBU
AFsAMABdAD0AUwBHADMAMwAwAABxUwBUAF8AMABlADQAZAA5ADAAMgA4AGMANABlADAANABlADUA
MgBiADcAMwAyADEANABiAGEANgBlADQAMwBhAGMAZgA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAOYt00aQJ4tFljcUf7l5ymAABCABAQgDIAABBSABARERBCAB
AQ4GIAEBEYCZBgcDDh0FDgYAAw4ODg4EAAECDgYAARKAqQ4FAAASgLEFIAEdBQ4EIAEBCgUgABKA
tQcgAwEdBQgIBSAAEoC5BiABARKAtQMgAA4GIAIBDhJRByACARJVElEJMAEAFRJZAR4ABAoBEhAF
AAICDg4MBwIVEWEBCBURYQEIBRURYQEIBCAAEwADIAACBwACAhFlEWUOBwIVEWEBEWUVEWEBEWUG
FRFhARFlHwcKEggOEnkSDBJ9FRFhARFlFRKAgQESEBIQEWUSgIUCBg4FIAASgM0FIAASgNEGIAES
gNUcAyAAHAQgARwcCAABEoDZEYDdCAACEn0SgNkOCAABEoDlEYDpCwACEoDxEoDhEoDtCQACEoD5
HBKA2QsAAhKA/RKA4RKA4Q8ABBKA/RKA4RKA4QISgO0PAAMSgQESgOESgO0dEoDhBAAAEWUJAAIR
gQURZRFlDgADEoD9EoDhEoDhEoDtAyAADRAQAQIVEoERAR4AEoDhHRJ9CgoBFRKBDQISEAIeEAEC
FRKBGQEeABUSgRkBHgAVEoERARUSgQ0CHgACCwoBFRKBDQISEBIQHxACAhUSgRkBHgEVEoEZAR4A
FRKBEQEVEoENAh4AHgEGCgISEBIQBxUSgR0BEhAJIAAVEoCBARMABxUSgIEBEhADAAAOBCABDg4F
AAEOHQ4EIAEBHAUgABKBLQggBQIIDg4OCAUgABKBMQcgAgEOEoExCLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGElEGBhURYQEIAwYRZQcGFRFhARFlAgYIBAYSgJEEBhKAlQMGEhwDBhEkAwYS
KAYgAw4ODg4FIAEBElUIIAAVElkBEhADAAABByAAFRFhAQgIIAEBFRFhAQgEIAARZQUgAQERZQgg
ABURYQERZQkgAQEVEWEBEWUDIAAIBQAAEoCRBQAAEoCVBgABARKAlQQAABIcCCgAFRJZARIQAygA
DgcoABURYQEIBCgAEWUIKAAVEWEBEWUDKAAIBQgAEoCRBQgAEoCVBAgAEhwIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzBlNGQ5MDI4YzRlMDRl
NTJiNzMyMTRiYTZlNDNhY2Y0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAAcBAAJydQAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjUWAQABAFQOBE5hbWUKYWJlcnJhdGlvbjIBAAEAVA4ETmFtZSZhYmVy
cmF0aW9uLmRiby5jbG9zZXRyYW5zaXRfYWJlcnJhdGlvbi4BAAIAVA4HU3RvcmFnZQlfUmVnTnVt
RFRUDgZEYlR5cGUMVmFyQ2hhcig0MDApKAEAAgBUDgdTdG9yYWdlBF9Ob19UDgZEYlR5cGULVmFy
Q2hhcigyMCkqAQACAFQOB1N0b3JhZ2UOX0Nsb3NlRGVsaXZlcnlUDgZEYlR5cGUDSW50MwEAAgBU
DgdTdG9yYWdlCV9Mb2dfRGF0ZVQOBkRiVHlwZRFEYXRlVGltZSBOT1QgTlVMTDkBAAIAVA4HU3Rv
cmFnZRhfdHJhbnNpdF9jbG9zdXJlX21vbml0b3JUDgZEYlR5cGUIRGF0ZVRpbWU4AQACAFQOB1N0
b3JhZ2UXX3RyYW5zaXRfY2xvc3VyZV91cGRhdGVUDgZEYlR5cGUIRGF0ZVRpbWU0AQACAFQOB1N0
b3JhZ2UPX3NlbnRfdG9fYml0cml4VA4GRGJUeXBlDEludCBOT1QgTlVMTIDYAQAFAFQOB1N0b3Jh
Z2UDX2lkVFV2U3lzdGVtLkRhdGEuTGlucS5NYXBwaW5nLkF1dG9TeW5jLCBTeXN0ZW0uRGF0YS5M
aW5xLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OQhBdXRvU3luYwMAAABUDgZEYlR5cGUVSW50IE5PVCBOVUxMIElERU5USVRZ
VAIMSXNQcmltYXJ5S2V5AVQCDUlzRGJHZW5lcmF0ZWQBNAEAAgBUDgdTdG9yYWdlDl90ZXJtaW5h
bF9jb2RlVA4GRGJUeXBlDU5WYXJDaGFyKDEwMCkvAQACAFQOB1N0b3JhZ2UJX2N1c3RvbWVyVA4G
RGJUeXBlDU5WYXJDaGFyKDEwMCkwAQACAFQOB1N0b3JhZ2UKX3RyYW5zcG9ydFQOBkRiVHlwZQ1O
VmFyQ2hhcigxMDApLgEAAgBUDgdTdG9yYWdlCF9jcmVhdGVyVA4GRGJUeXBlDU5WYXJDaGFyKDEw
MCktAQACAFQOB1N0b3JhZ2UHX3NlbmRlclQOBkRiVHlwZQ1OVmFyQ2hhcigxMDApALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAADwTgAAAAAAAAAAAAAKTwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/E4AAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAA
AAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AHF66B0AAAEAcXroHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMABlADQA
ZAA5ADAAMgA4AGMANABlADAANABlADUAMgBiADcAMwAyADEANABiAGEANgBlADQAMwBhAGMAZgA0
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANgA1ADYALgAzADEA
MwA0ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMABlADQAZAA5
ADAAMgA4AGMANABlADAANABlADUAMgBiADcAMwAyADEANABiAGEANgBlADQAMwBhAGMAZgA0AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAw
AGUANABkADkAMAAyADgAYwA0AGUAMAA0AGUANQAyAGIANwAzADIAMQA0AGIAYQA2AGUANAAzAGEA
YwBmADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMABl
ADQAZAA5ADAAMgA4AGMANABlADAANABlADUAMgBiADcAMwAyADEANABiAGEANgBlADQAMwBhAGMA
ZgA0AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADYANQA2
AC4AMwAxADMANAA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADYANQA2AC4AMwAxADMANAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAABw/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение]"
      DTS:CreationName=""
      DTS:DTSID="{52393D15-FCA8-4226-B83F-5112E778B712}"
      DTS:From="Package\Вставка и обновление записей о закрытии ТТ"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение"
      DTS:To="Package\Отправка сообщений" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="305,42"
          Id="Package\Вставка и обновление записей о закрытии ТТ"
          TopLeft="102,41" />
        <NodeLayout
          Size="183,42"
          Id="Package\Отправка сообщений"
          TopLeft="165,110" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение]"
          TopLeft="255.5,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>