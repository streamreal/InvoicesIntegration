<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/7/2020 1:19:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{05FC8DE3-EE1B-44CA-A281-0147EB11374C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package3"
  DTS:PackageType="5"
  DTS:VersionBuild="9"
  DTS:VersionGUID="{8C77056B-297E-42DC-96E9-0693824B02F6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send messages"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{E01F6F15-E5FE-46D7-B3E0-F62DFC28464D}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send messages"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_02515bc450d444c38ebc9decde9d64f9"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="ST_02515bc450d444c38ebc9decde9d64f9.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D1AABC2C-1C31-468E-80E4-BD5E7BF9E377}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_02515bc450d444c38ebc9decde9d64f9</RootNamespace>
    <AssemblyName>ST_02515bc450d444c38ebc9decde9d64f9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Bitrix24.cs" />
    <Compile Include="objLogonBitrixOAuth.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ObligationContext.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_02515bc450d444c38ebc9decde9d64f9.Properties.Settings.get_Default():ST_02515bc450d444c38ebc9decde9d64f9.Properties.Sett" +
    "ings")]

namespace ST_02515bc450d444c38ebc9decde9d64f9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Linq;
#endregion

namespace ST_02515bc450d444c38ebc9decde9d64f9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                Bitrix24 bx_logon = new Bitrix24();
                string message = String.Empty;

                SqlConnection connection = (SqlConnection)Dts.Connections["10.10.0.28.automation.phpuser"].AcquireConnection(Dts.Transaction);

                ObligationContext db = new ObligationContext(connection);

                var messagesToSend = db.obligations_messages.Where(m => m.was_sent == 0).Select(m => m);

                foreach (obligations_messages msg in messagesToSend)
                {                   
                    try
                    {
                        _ = bx_logon.SendCommand("log.blogpost.add", "",
                        "USER_ID=" + msg.userid +
                        "&POST_TITLE=" + msg.title + 
                        "&POST_MESSAGE=" + msg.message +
                        "&DEST[0]=SG336"
                        );
                    }
                    catch (Exception ex)
                    {
                        continue;
                    }

                    msg.was_sent = 1;
                    msg.sent_datetime = DateTime.Now;
                }

                db.SubmitChanges();
                Dts.Connections["10.10.0.28.automation.phpuser"].ReleaseConnection(connection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "", ex.Message, "", 0);
                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Bitrix24.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
#endregion
using System.IO;
using System.Net;
using System.Text;

partial class Bitrix24
{
    public string SendCommand(string Command, string GetParams = "", string PostParams = "")
    {
        string BX_REST_URI = "https://bitrix.eltransplus.ru/rest/1/szxa4ogn53mr5x0z/" + Command + ".json";

        if (String.IsNullOrEmpty(GetParams) == false)
        {
            BX_REST_URI = BX_REST_URI + "&" + GetParams;
        }

        //Создаем новое HTTP подключение для отправки REST-запроса в Битрикс24
        HttpWebRequest requestBitrixREST = (HttpWebRequest)WebRequest.Create(BX_REST_URI);
        requestBitrixREST.Method = "POST";

        //Готовим тело запроса и вставляем его в тело POST-запроса  
        byte[] byteArrayBody = Encoding.UTF8.GetBytes(PostParams);
        requestBitrixREST.ContentType = "application/x-www-form-urlencoded";
        requestBitrixREST.ContentLength = byteArrayBody.Length;

        Stream dataBodyStream = requestBitrixREST.GetRequestStream();
        dataBodyStream.Write(byteArrayBody, 0, byteArrayBody.Length);
        dataBodyStream.Close();

        //Отправляем данные в Битрикс24
        HttpWebResponse responseBitrixREST = (HttpWebResponse)requestBitrixREST.GetResponse();

        //Читаем тело ответа от Битрикс24
        Stream dataStreamBitrixREST = responseBitrixREST.GetResponseStream();
        var readerBitrixREST = new StreamReader(dataStreamBitrixREST);
        string stringBitrixREST = readerBitrixREST.ReadToEnd();

        //Закрываем все подключения и потоки
        readerBitrixREST.Close();
        dataStreamBitrixREST.Close();
        responseBitrixREST.Close();

        //Возвращаем строку ответа в формате JSON
        return stringBitrixREST;
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ObligationContext.cs"
            Encoding="UTF8"><![CDATA[namespace ST_02515bc450d444c38ebc9decde9d64f9
{
	using System;
	using System.ComponentModel;
	using System.Data.Linq.Mapping;


	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "BI")]
	public partial class ObligationContext : System.Data.Linq.DataContext
	{

		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

		#region Определения метода расширяемости
		partial void OnCreated();
		partial void Insertobligations_messages(obligations_messages instance);
		partial void Updateobligations_messages(obligations_messages instance);
		partial void Deleteobligations_messages(obligations_messages instance);
		#endregion

		public ObligationContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public ObligationContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public ObligationContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public ObligationContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public System.Data.Linq.Table<obligations_messages> obligations_messages
		{
			get
			{
				return this.GetTable<obligations_messages>();
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "BI.dwh.obligations_messages")]
	public partial class obligations_messages : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _id;

		private System.DateTime _load_datetime;

		private string _username;

		private int _userid;

		private string _title;

		private string _message;

		private int _was_sent;

		private System.Nullable<System.DateTime> _sent_datetime;

		#region Определения метода расширяемости
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(int value);
		partial void OnidChanged();
		partial void Onload_datetimeChanging(System.DateTime value);
		partial void Onload_datetimeChanged();
		partial void OnusernameChanging(string value);
		partial void OnusernameChanged();
		partial void OnuseridChanging(int value);
		partial void OnuseridChanged();
		partial void OntitleChanging(string value);
		partial void OntitleChanged();
		partial void OnmessageChanging(string value);
		partial void OnmessageChanged();
		partial void Onwas_sentChanging(int value);
		partial void Onwas_sentChanged();
		partial void Onsent_datetimeChanging(System.Nullable<System.DateTime> value);
		partial void Onsent_datetimeChanged();
		#endregion

		public obligations_messages()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_load_datetime", DbType = "DateTime NOT NULL")]
		public System.DateTime load_datetime
		{
			get
			{
				return this._load_datetime;
			}
			set
			{
				if ((this._load_datetime != value))
				{
					this.Onload_datetimeChanging(value);
					this.SendPropertyChanging();
					this._load_datetime = value;
					this.SendPropertyChanged("load_datetime");
					this.Onload_datetimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_username", DbType = "VarChar(100)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_userid", DbType = "Int NOT NULL")]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_title", DbType = "VarChar(200)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_message", DbType = "VarChar(1000)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_was_sent", DbType = "Int NOT NULL")]
		public int was_sent
		{
			get
			{
				return this._was_sent;
			}
			set
			{
				if ((this._was_sent != value))
				{
					this.Onwas_sentChanging(value);
					this.SendPropertyChanging();
					this._was_sent = value;
					this.SendPropertyChanged("was_sent");
					this.Onwas_sentChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_sent_datetime", DbType = "DateTime")]
		public System.Nullable<System.DateTime> sent_datetime
		{
			get
			{
				return this._sent_datetime;
			}
			set
			{
				if ((this._sent_datetime != value))
				{
					this.Onsent_datetimeChanging(value);
					this.SendPropertyChanging();
					this._sent_datetime = value;
					this.SendPropertyChanged("sent_datetime");
					this.Onsent_datetimeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_02515bc450d444c38ebc9decde9d64f9</msb:CodeName>
		<msb:DisplayName>ST_02515bc450d444c38ebc9decde9d64f9</msb:DisplayName>
		<msb:ProjectId>{38C016BC-620F-425E-8EF1-300ECF190445}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_02515bc450d444c38ebc9decde9d64f9.csproj"/>
		<msb:File Include="ObligationContext.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="Bitrix24.cs"/>
		<msb:File Include="objLogonBitrixOAuth.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_02515bc450d444c38ebc9decde9d64f9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_02515bc450d444c38ebc9decde9d64f9")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
[assembly: NeutralResourcesLanguage("ru")]]]></ProjectItem>
          <ProjectItem
            Name="objLogonBitrixOAuth.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
#endregion
using System.Runtime.Serialization;

partial class Bitrix24
    {
    [DataContract]
        public class objLogonBitrixOAuth
        {
            [DataMember]
            public string expires_in { get; set; }
            [DataMember]
            public string refresh_token { get; set; }
            [DataMember]
            public string access_token { get; set; }
        }
    }]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_02515bc450d444c38ebc9decde9d64f9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_02515bc450d444c38ebc9decde9d64f9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_02515bc450d444c38ebc9decde9d64f9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_02515bc450d444c38ebc9decde9d64f9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_02515bc450d444c38ebc9decde9d64f9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_02515bc450d444c38ebc9decde9d64f9.dll">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
DwG7AhQAoCMAAAAA5gkjAbsCFQDVIwAAAADEAfsGBgAWAPAjAAAAAMQBOgEQABYADCQAAAAAkRjV
Co8CFwAgJAAAAACGANYIBgAXAEgmAAAAAIYYzwoGABcA/SAAAAAAgxjPCgYAFwBQJgAAAACTCC4K
wQIXAHwmAAAAAJMIyAPHAhcAgyYAAAAAkwjUA80CFwCLJgAAAACWCL0M1AIYAJImAAAAAIYYzwoG
ABgAmiYAAAAAkRjVCo8CGACmJgAAAACGCLIIYgAYAK4mAAAAAIYIwQgQABgAtyYAAAAAhghsCGIA
GQC/JgAAAACGCH4IEAAZAMgmAAAAAIYIkAhiABoA0CYAAAAAhgihCBAAGgD9IAAAAACGGM8KBgAb
ANkmAAAAAJEY1QqPAhsA/SAAAAAAhhjPCgYAGwAAAAEA/AEQEAIAJAwQEAMALgwAAAEAzQkAAAEA
zQkAAAEAzQkAAAIANgIAAAEAzQkAAAIANgIAAAEApwYAAAEApwYAAAEApwYAAAEApwYAAAEApwYA
AAEApwYAAAEApwYAAAEApwYAAAEApwYAAAEApwYAAAEApwYAAAEApwYAAAEA/gIAAAEApwYAAAEA
pwYAAAEApwYAAAEApwYEAGEABABlAAkAzwoBABEAzwoGABkAzwoKACkAzwoQADEAzwoQADkAzwoQ
AEEAzwoQAEkAzwoQAFEAzwoQAFkAzwoQAGEAzwoQAGkAzwoQAHkAzwoGAIEAzwoGAIkAzwoGAJEA
zwoGALkAzwoGAPkAzwoGAAkBzwoGAEEBzwoGAGEBzwoVAHEBnQwjAHEBlA0qAHkBWQQvAHkBBAIQ
AIkBYAA2AIkByAs8AHkBngMQAHkBZAdCAHkBOghHAJEBfgRNAJEBSwQGAHkBPwRVAJkBKAhHAKkB
zwpbALEB7gFiALEBSwQGAJkBSwQGAHEAzwoGAJkAzwpmAJkAzwptAJkAfwJ1ALkBzwoGAOkAhg2E
AHEBhg2MAAwAmgaoAAwAyQysAMEBlgO6AMkBaALGAMEBrQa6ANEAeALmANEBzwoQANkAeALtAHEB
nA31AOEAzwoQABEBfAwSAdkBZAwYAeEBSwgeAdkBawklAekBmwkpAfEB2AIuAQECoQo3AQkCxAJB
AQECog1KAQEC6gxWAQEC0gdgAQECywBsAVECrgOJAVECqwy0ARQAwQrjARwACQ2sACkCWwdiAHEB
nQz1AekAcQ37AQwAzwoAAmkCPg2oAHECUQQGAJkAiwsGAOkBrQkGAtkB2wwBANkBkgwLAjEBRAJi
AHkCqwoRAhEBzwoGAPEBeQ0aAkkBzwogAmkBzwoGAA4ACQAAAA4ADQAAAAgAUAA6AggAVAA/Ai4A
CwAJAy4AEwASAy4AGwAxAy4AIwA6Ay4AKwBjAy4AMwBjAy4AOwBjAy4AQwA6Ay4ASwBpAy4AUwBj
Ay4AWwCAAy4AYwCIA0kAkwAJBGMAgwDSA2kAkwDjBIMAiwDhA4kAkwAcBaMAmwA/AqkAkwBLBcMA
owA/AskAkwB4BekAkwCkBQMBawA/AgkBkwDTBSkBkwACBkMBcwA/AkkBqwAxA2EBcwA/AmkBqwAx
A4EBcwA/AqkBewA/AskBewA/AuEBcwA/AukBewA/AgECcwA/AiECcwA/AkECcwA/AkADcwA/AmAD
cwA/AoADcwA/AqADcwA/AkAFcwA/AmAFcwA/AoAFcwA/AqAFcwA/AsAFcwA/AuAFcwA/AhwAkgCx
ANgA+AAEAAEAAAAXB2kAAABVAW0AAwABAAQAAgAGAAoABwAMAAgADQAAAHYL2QIAAJIB4gIAAEQD
5gIAABwD6wIAAI4B4gIAAPgC6wIAAGAC6wIAACYN4gIAAGgD7wIAADIK+AIAAOgD/gIAANMMBAMA
AMUI6wIAAIII6wIAAKUI6wIIABoAAgAQABsAAgACAAcAAwAIABwABAAQAB0ABAACAAoABQABAAsA
BQACAAwABwABAA0ABwACAA4ACQABAA8ACQACABAACwABABEACwACABIADQABABMADQACABQADwAB
ABUADwACABYAEQABABcAEQACABgAEwABABkAEwACACQAFQACACUAFwABACYAFwACACcAGQACACoA
GwABACsAGwACACwAHQABAC0AHQACAC4AHwABAC8AHwChANsB7QEEgAAAAQAAAOgdGnsAAAAAAABt
AAAABAAAAAAAAAAAAAAAKALeAAAAAAAEAAAAAAAAAAAAAAAoAk4JAAAAAAQAAAAAAAAAAAAAACgC
+QkAAAAABAAAAAAAAAAAAAAAKALSAAAAAAAEAAAAAAAAAAAAAAAoAlQIAAAAAA0AAAAAAAAAAAAA
ADECigcAAAAABAAAAAAAAAAAAAAAKAK0AwAAAAANAAAAAAAAAAAAAAAxAqQAAAAAAAAAAAABAAAA
IAsAAAgAAgAJAAUACgAFAFUAfwBjANMAYwDhAIcAfgGJAH8AhwCoAYsA1AEAAAAAAFRhYmxlYDEA
TnVsbGFibGVgMQBJRW51bWVyYWJsZWAxAElRdWVyeWFibGVgMQBFeHByZXNzaW9uYDEASUVudW1l
cmF0b3JgMQBJbnQzMgBGdW5jYDIAQml0cml4MjQAZ2V0X1VURjgAPD45AFNUXzAyNTE1YmM0NTBk
NDQ0YzM4ZWJjOWRlY2RlOWQ2NGY5ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAdmFsdWVfXwBMYW1iZGEAU3lzdGVtLkRhdGEAbXNjb3JsaWIAPD5jAFN5
c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEF1dG9TeW5jAGFkZF9Qcm9wZXJ0eUNoYW5nZWQAcmVt
b3ZlX1Byb3BlcnR5Q2hhbmdlZABTZW5kUHJvcGVydHlDaGFuZ2VkAElOb3RpZnlQcm9wZXJ0eUNo
YW5nZWQASW50ZXJsb2NrZWQAZ2V0X2lkAHNldF9pZABnZXRfdXNlcmlkAHNldF91c2VyaWQAPHJl
ZnJlc2hfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxk
ADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZABSZWFkVG9FbmQAU2VuZENvbW1hbmQAc2V0X01l
dGhvZABkZWZhdWx0SW5zdGFuY2UAQXR0cmlidXRlTWFwcGluZ1NvdXJjZQBtYXBwaW5nU291cmNl
AGdldF9NZXNzYWdlAGdldF9tZXNzYWdlAHNldF9tZXNzYWdlAENvbXBhcmVFeGNoYW5nZQBJbnZv
a2UAR2V0VGFibGUASURpc3Bvc2FibGUAUXVlcnlhYmxlAFJ1bnRpbWVNZXRob2RIYW5kbGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0TWV0aG9kRnJvbUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRf
dGl0bGUAc2V0X3RpdGxlAHByb3BlcnR5TmFtZQBnZXRfdXNlcm5hbWUAc2V0X3VzZXJuYW1lAERh
dGVUaW1lAGdldF9sb2FkX2RhdGV0aW1lAHNldF9sb2FkX2RhdGV0aW1lAGdldF9zZW50X2RhdGV0
aW1lAHNldF9zZW50X2RhdGV0aW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29t
YmluZQBzZXRfQ29udGVudFR5cGUAV2hlcmUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASHR0cFdlYlJlc3BvbnNlAEdldFJl
c3BvbnNlAENsb3NlAERpc3Bvc2UAQ3JlYXRlAERlbGVnYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AFdyaXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUATmV1dHJhbFJlc291cmNlc0xhbmd1YWdlQXR0cmlidXRlAFRhYmxlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUARGF0YWJhc2VBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAENvbHVtbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBEYXRhTWVtYmVyQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9IYXNWYWx1ZQB2YWx1ZQBSZW1vdmUAU3lz
dGVtLlRocmVhZGluZwBFbmNvZGluZwBhZGRfUHJvcGVydHlDaGFuZ2luZwByZW1vdmVfUHJvcGVy
dHlDaGFuZ2luZwBTZW5kUHJvcGVydHlDaGFuZ2luZwBJTm90aWZ5UHJvcGVydHlDaGFuZ2luZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN5c3RlbS5EYXRhLkxpbnEuTWFwcGluZwBUb1N0cmlu
ZwBzZXRfQ29udGVudExlbmd0aABvYmpMb2dvbkJpdHJpeE9BdXRoAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAEVx
dWFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8wMjUxNWJjNDUw
ZDQ0NGMzOGViYzlkZWNkZTlkNjRmOS5kbGwAR2V0UmVzcG9uc2VTdHJlYW0AR2V0UmVxdWVzdFN0
cmVhbQBnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBnZXRfcmVmcmVzaF90b2tlbgBz
ZXRfcmVmcmVzaF90b2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBNZW1iZXJFeHByZXNzaW9uAFBhcmFt
ZXRlckV4cHJlc3Npb24AQ29uc3RhbnRFeHByZXNzaW9uAEJpbmFyeUV4cHJlc3Npb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFs
aXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24ASURiQ29ubmVjdGlvbgBB
Y3F1aXJlQ29ubmVjdGlvbgBSZWxlYXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAGNvbm5lY3Rp
b24ARXhjZXB0aW9uAE1ldGhvZEluZm8AQ3VsdHVyZUluZm8AU3lzdGVtLkRhdGEuTGlucQBTeXN0
ZW0uTGlucQBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5l
Y3Rpb25NYW5hZ2VyAFByb3BlcnR5Q2hhbmdlZEV2ZW50SGFuZGxlcgBQcm9wZXJ0eUNoYW5naW5n
RXZlbnRIYW5kbGVyAEV2ZW50c09iamVjdFdyYXBwZXIAUGFyYW1ldGVyAEZpcmVFcnJvcgBJRW51
bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzAyNTE1YmM0
NTBkNDQ0YzM4ZWJjOWRlY2RlOWQ2NGY5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBnZXRfb2JsaWdhdGlvbnNfbWVzc2FnZXMAU3VibWl0Q2hhbmdlcwBTVF8w
MjUxNWJjNDUwZDQ0NGMzOGViYzlkZWNkZTlkNjRmOS5Qcm9wZXJ0aWVzAEdldEJ5dGVzAFNldHRp
bmdzAFByb3BlcnR5Q2hhbmdlZEV2ZW50QXJncwBlbXB0eUNoYW5naW5nRXZlbnRBcmdzAFByb3Bl
cnR5Q2hhbmdpbmdFdmVudEFyZ3MAR2V0UGFyYW1zAFBvc3RQYXJhbXMAU3lzdGVtLkxpbnEuRXhw
cmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAU2VsZWN0AFN5c3RlbS5O
ZXQAZ2V0X0RlZmF1bHQAR2V0VmFsdWVPckRlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAQ29uc3RhbnQA
U3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AGdldF93YXNfc2VudABzZXRfd2FzX3Nl
bnQASHR0cFdlYlJlcXVlc3QATW92ZU5leHQAU3lzdGVtLlRleHQARGF0YUNvbnRleHQAT2JsaWdh
dGlvbkNvbnRleHQAZ2V0X05vdwBnZXRfQXNzZW1ibHkAb3BfSW5lcXVhbGl0eQBJc051bGxPckVt
cHR5AFByb3BlcnR5AAAAbWgAdAB0AHAAcwA6AC8ALwBiAGkAdAByAGkAeAAuAGUAbAB0AHIAYQBu
AHMAcABsAHUAcwAuAHIAdQAvAHIAZQBzAHQALwAxAC8AcwB6AHgAYQA0AG8AZwBuADUAMwBtAHIA
NQB4ADAAegAvAAALLgBqAHMAbwBuAAADJgAACVAATwBTAFQAAENhAHAAcABsAGkAYwBhAHQAaQBv
AG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUAZAABBWkAZAAAG2wA
bwBhAGQAXwBkAGEAdABlAHQAaQBtAGUAABF1AHMAZQByAG4AYQBtAGUAAA11AHMAZQByAGkAZAAA
C3QAaQB0AGwAZQAAD20AZQBzAHMAYQBnAGUAABF3AGEAcwBfAHMAZQBuAHQAABtzAGUAbgB0AF8A
ZABhAHQAZQB0AGkAbQBlAAA7MQAwAC4AMQAwAC4AMAAuADIAOAAuAGEAdQB0AG8AbQBhAHQAaQBv
AG4ALgBwAGgAcAB1AHMAZQByAAADbQAAIWwAbwBnAC4AYgBsAG8AZwBwAG8AcwB0AC4AYQBkAGQA
AAEAEVUAUwBFAFIAXwBJAEQAPQAAGSYAUABPAFMAVABfAFQASQBUAEwARQA9AAAdJgBQAE8AUwBU
AF8ATQBFAFMAUwBBAEcARQA9AAAdJgBEAEUAUwBUAFsAMABdAD0AUwBHADMAMwA2AABxUwBUAF8A
MAAyADUAMQA1AGIAYwA0ADUAMABkADQANAA0AGMAMwA4AGUAYgBjADkAZABlAGMAZABlADkAZAA2
ADQAZgA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAgFnQPBHN
5ESdrzlr8YC+agAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgK0GBwMOHQUOBgADDg4ODgQAAQIO
BgABEoC9DgUAABKAxQUgAR0FDgQgAQEKBSAAEoDJByADAR0FCAgFIAASgM0GIAEBEoDJAyAADgYg
AgEOElEHIAIBElUSUQkwAQAVElkBHgAECgESEAcAAgIRdRF1BQACAg4ODgcCFRF5ARF1FRF5ARF1
BhUReQERdQMgAAIEIAATAAgHAxJpEmkSaQsAAhKA4RKA4RKA4QwQAQMeABAeAB4AHgAECgESaQgH
AxJtEm0SbQQKARJtBiACARwScQcgAgEcEoDpAgYOGQcIEggSgI0SDBKAkRUSgJUBEhASEAgSgJkF
IAASgO0FIAASgPEGIAESgPUcAyAAHAQgARwcCAABEoD5EYD9CQACEoCREoD5DggAARKBBRGBCQsA
AhKBERKBARKBDQkAAhKBGRwSgPkLAAISgR0SgQESgQEREAECFRKBJQEeABKBAR0SgJEKCgEVEoEh
AhIQAh4QAQIVEoEtAR4AFRKBLQEeABUSgSUBFRKBIQIeAAILCgEVEoEhAhIQEhAfEAICFRKBLQEe
ARUSgS0BHgAVEoElARUSgSECHgAeAQYKAhIQEhAHFRKBMQESEAkgABUSgJUBEwAHFRKAlQESEAUA
AQ4dDgQAABF1BSABARMABCABARwFIAASgT0IIAUCCA4ODggFIAASgUEHIAIBDhKBQQi3elxWGTTg
iQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYScQIGCAMGEXUHBhUReQERdQMGEmkDBhJtBAYSgKUE
BhKAqQMGEhwDBhEkAwYSKAYgAw4ODg4FIAEBElUIIAAVElkBEhADAAABAyAACAQgABF1BSABARF1
CCAAFRF5ARF1CSABARUReQERdQUgAQESaQUgAQESbQUAABKApQUAABKAqQYAAQESgKkEAAASHAgo
ABUSWQESEAMoAAgEKAARdQMoAA4IKAAVEXkBEXUFCAASgKUFCAASgKkECAASHAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMDI1MTViYzQ1MGQ0
NDRjMzhlYmM5ZGVjZGU5ZDY0ZjkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAABwEAAnJ1
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNQ4BAAEAVA4ETmFtZQJCSScBAAEAVA4ETmFtZRtCSS5kd2gub2Js
aWdhdGlvbnNfbWVzc2FnZXOA2AEABQBUDgdTdG9yYWdlA19pZFRVdlN5c3RlbS5EYXRhLkxpbnEu
TWFwcGluZy5BdXRvU3luYywgU3lzdGVtLkRhdGEuTGlucSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkIQXV0b1N5bmMDAAAA
VA4GRGJUeXBlFUludCBOT1QgTlVMTCBJREVOVElUWVQCDElzUHJpbWFyeUtleQFUAg1Jc0RiR2Vu
ZXJhdGVkATgBAAIAVA4HU3RvcmFnZQ5fbG9hZF9kYXRldGltZVQOBkRiVHlwZRFEYXRlVGltZSBO
T1QgTlVMTC4BAAIAVA4HU3RvcmFnZQlfdXNlcm5hbWVUDgZEYlR5cGUMVmFyQ2hhcigxMDApLAEA
AgBUDgdTdG9yYWdlB191c2VyaWRUDgZEYlR5cGUMSW50IE5PVCBOVUxMKwEAAgBUDgdTdG9yYWdl
Bl90aXRsZVQOBkRiVHlwZQxWYXJDaGFyKDIwMCkuAQACAFQOB1N0b3JhZ2UIX21lc3NhZ2VUDgZE
YlR5cGUNVmFyQ2hhcigxMDAwKS4BAAIAVA4HU3RvcmFnZQlfd2FzX3NlbnRUDgZEYlR5cGUMSW50
IE5PVCBOVUxMLwEAAgBUDgdTdG9yYWdlDl9zZW50X2RhdGV0aW1lVA4GRGJUeXBlCERhdGVUaW1l
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAA+EoAAAAAAAAAAAAAEksAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARL
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAGnvoHQAAAQAae+gdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAwADIA
NQAxADUAYgBjADQANQAwAGQANAA0ADQAYwAzADgAZQBiAGMAOQBkAGUAYwBkAGUAOQBkADYANABm
ADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA2ADUANgAuADMA
MQA1ADEANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAwADIANQAx
ADUAYgBjADQANQAwAGQANAA0ADQAYwAzADgAZQBiAGMAOQBkAGUAYwBkAGUAOQBkADYANABmADkA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADAAMgA1ADEANQBiAGMANAA1ADAAZAA0ADQANABjADMAOABlAGIAYwA5AGQAZQBjAGQAZQA5AGQA
NgA0AGYAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAw
ADIANQAxADUAYgBjADQANQAwAGQANAA0ADQAYwAzADgAZQBiAGMAOQBkAGUAYwBkAGUAOQBkADYA
NABmADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA1
ADYALgAzADEANQAxADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcANgA1ADYALgAzADEANQAxADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAJDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Send messages"
          TopLeft="183,108" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>