<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/13/2020 11:22:46 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{79EFACAB-F105-42DA-A9B6-E961DEDDAA5B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{1B4CA5B9-106B-4ED2-90D1-A28C88B21904}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send messages"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{581E97AF-BA38-4B07-BBE2-06D2EB70AAE0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send messages"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d41edf0ac2f843a99e06e4738a61bd60"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="ST_d41edf0ac2f843a99e06e4738a61bd60.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6C5E1041-B120-4BE4-8730-DE6CB09A0750}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d41edf0ac2f843a99e06e4738a61bd60</RootNamespace>
    <AssemblyName>ST_d41edf0ac2f843a99e06e4738a61bd60</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Bitrix24.cs" />
    <Compile Include="objLogonBitrixOAuth.cs" />
    <Compile Include="PI_absence_to_group.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="PI_absence_to_group.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_d41edf0ac2f843a99e06e4738a61bd60
{

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "aberration.dbo.PI_absence_to_group")]
	public partial class PI_absence_to_group
	{

		private string _DELIVERY_ID;

		private System.Nullable<System.DateTime> _CREATED;

		private string _CUSTOMER_NAME;

		private string _CUSTOMER_CATEGORY;

		private System.Nullable<System.DateTime> _MESSAGE_SEND_TIME;

		private int _id;

		private System.Nullable<int> _MESSAGE_SEND;

		#region Определения метода расширяемости
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDELIVERY_IDChanging(string value);
		partial void OnDELIVERY_IDChanged();
		partial void OnCREATEDChanging(System.Nullable<System.DateTime> value);
		partial void OnCREATEDChanged();
		partial void OnCUSTOMER_NAMEChanging(string value);
		partial void OnCUSTOMER_NAMEChanged();
		partial void OnCUSTOMER_CATEGORYChanging(string value);
		partial void OnCUSTOMER_CATEGORYChanged();
		partial void OnMESSAGE_SEND_TIMEChanging(System.Nullable<System.DateTime> value);
		partial void OnMESSAGE_SEND_TIMEChanged();
		partial void OnidChanging(int value);
		partial void OnidChanged();
		partial void OnMESSAGE_SENDChanging(System.Nullable<int> value);
		partial void OnMESSAGE_SENDChanged();
		#endregion


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DELIVERY_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
		public string DELIVERY_ID
		{
			get
			{
				return this._DELIVERY_ID;
			}
			set
			{
				if ((this._DELIVERY_ID != value))
				{
					this.OnDELIVERY_IDChanging(value);
					this._DELIVERY_ID = value;
					this.OnDELIVERY_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CREATED", DbType = "DateTime")]
		public System.Nullable<System.DateTime> CREATED
		{
			get
			{
				return this._CREATED;
			}
			set
			{
				if ((this._CREATED != value))
				{
					this.OnCREATEDChanging(value);
					this._CREATED = value;
					this.OnCREATEDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CUSTOMER_NAME", DbType = "VarChar(200)")]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this.OnCUSTOMER_NAMEChanging(value);
					this._CUSTOMER_NAME = value;
					this.OnCUSTOMER_NAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CUSTOMER_CATEGORY", DbType = "VarChar(50)")]
		public string CUSTOMER_CATEGORY
		{
			get
			{
				return this._CUSTOMER_CATEGORY;
			}
			set
			{
				if ((this._CUSTOMER_CATEGORY != value))
				{
					this.OnCUSTOMER_CATEGORYChanging(value);
					this._CUSTOMER_CATEGORY = value;
					this.OnCUSTOMER_CATEGORYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MESSAGE_SEND_TIME", DbType = "DateTime")]
		public System.Nullable<System.DateTime> MESSAGE_SEND_TIME
		{
			get
			{
				return this._MESSAGE_SEND_TIME;
			}
			set
			{
				if ((this._MESSAGE_SEND_TIME != value))
				{
					this.OnMESSAGE_SEND_TIMEChanging(value);
					this._MESSAGE_SEND_TIME = value;
					this.OnMESSAGE_SEND_TIMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this._id = value;
					this.OnidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MESSAGE_SEND", DbType = "Int")]
		public System.Nullable<int> MESSAGE_SEND
		{
			get
			{
				return this._MESSAGE_SEND;
			}
			set
			{
				if ((this._MESSAGE_SEND != value))
				{
					this.OnMESSAGE_SENDChanging(value);
					this._MESSAGE_SEND = value;
					this.OnMESSAGE_SENDChanged();
				}
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data.Linq;
using System.Data.SqlClient;
using System.Linq;
#endregion

namespace ST_d41edf0ac2f843a99e06e4738a61bd60
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            Bitrix24 bx_logon = new Bitrix24();
            string message = String.Empty;

            SqlConnection connection = (SqlConnection)Dts.Connections["10.10.0.28.automation.phpuser"].AcquireConnection(Dts.Transaction);

            DataContext db = new DataContext(connection);
            Table<PI_absence_to_group> table = db.GetTable<PI_absence_to_group>();

            var messagesToSend = table.Where(m => m.MESSAGE_SEND == 0).Select(m => m);

            foreach (PI_absence_to_group msg in messagesToSend)
            {
                message = "Доставка " + msg.DELIVERY_ID + ", заказчик " + msg.CUSTOMER_NAME + " категория " + msg.CUSTOMER_CATEGORY + ". Судно прибыло без подачи ПТД/ПИТ/ПИ.";

                try
                {
                    _ = bx_logon.SendCommand("log.blogpost.add", "",
                    "USER_ID=1716" +
                    "&POST_TITLE=Прибытие судна без подачи ПТД/ПИТ/ПИ" +
                    "&POST_MESSAGE=" + message +
                    "&DEST[0]=SG330"
                    );
                }
                catch
                {
                    continue;
                }

                msg.MESSAGE_SEND = 1;
            }

            db.SubmitChanges();
            Dts.Connections["10.10.0.28.automation.phpuser"].ReleaseConnection(connection);
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Bitrix24.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
#endregion
using System.IO;
using System.Net;
using System.Text;

partial class Bitrix24
{
    public string SendCommand(string Command, string GetParams = "", string PostParams = "")
    {
        string BX_REST_URI = "https://bitrix.eltransplus.ru/rest/1/szxa4ogn53mr5x0z/" + Command + ".json";

        if (String.IsNullOrEmpty(GetParams) == false)
        {
            BX_REST_URI = BX_REST_URI + "&" + GetParams;
        }

        //Создаем новое HTTP подключение для отправки REST-запроса в Битрикс24
        HttpWebRequest requestBitrixREST = (HttpWebRequest)WebRequest.Create(BX_REST_URI);
        requestBitrixREST.Method = "POST";

        //Готовим тело запроса и вставляем его в тело POST-запроса  
        byte[] byteArrayBody = Encoding.UTF8.GetBytes(PostParams);
        requestBitrixREST.ContentType = "application/x-www-form-urlencoded";
        requestBitrixREST.ContentLength = byteArrayBody.Length;

        Stream dataBodyStream = requestBitrixREST.GetRequestStream();
        dataBodyStream.Write(byteArrayBody, 0, byteArrayBody.Length);
        dataBodyStream.Close();

        //Отправляем данные в Битрикс24
        HttpWebResponse responseBitrixREST = (HttpWebResponse)requestBitrixREST.GetResponse();

        //Читаем тело ответа от Битрикс24
        Stream dataStreamBitrixREST = responseBitrixREST.GetResponseStream();
        var readerBitrixREST = new StreamReader(dataStreamBitrixREST);
        string stringBitrixREST = readerBitrixREST.ReadToEnd();

        //Закрываем все подключения и потоки
        readerBitrixREST.Close();
        dataStreamBitrixREST.Close();
        responseBitrixREST.Close();

        //Возвращаем строку ответа в формате JSON
        return stringBitrixREST;
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d41edf0ac2f843a99e06e4738a61bd60</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_d41edf0ac2f843a99e06e4738a61bd60</msb:DisplayName>
		<msb:ProjectId>{B9D8FBEC-6147-41C7-A018-D0755B6E3736}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d41edf0ac2f843a99e06e4738a61bd60.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="PI_absence_to_group.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="Bitrix24.cs"/>
		<msb:File Include="objLogonBitrixOAuth.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d41edf0ac2f843a99e06e4738a61bd60.Properties.Settings.get_Default():ST_d41edf0ac2f843a99e06e4738a61bd60.Properties.Sett" +
    "ings")]

namespace ST_d41edf0ac2f843a99e06e4738a61bd60.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="objLogonBitrixOAuth.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
#endregion
using System.Runtime.Serialization;

partial class Bitrix24
    {
    [DataContract]
        public class objLogonBitrixOAuth
        {
            [DataMember]
            public string expires_in { get; set; }
            [DataMember]
            public string refresh_token { get; set; }
            [DataMember]
            public string access_token { get; set; }
        }
    }]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d41edf0ac2f843a99e06e4738a61bd60")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d41edf0ac2f843a99e06e4738a61bd60")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d41edf0ac2f843a99e06e4738a61bd60.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d41edf0ac2f843a99e06e4738a61bd60.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d41edf0ac2f843a99e06e4738a61bd60.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d41edf0ac2f843a99e06e4738a61bd60.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d41edf0ac2f843a99e06e4738a61bd60.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d41edf0ac2f843a99e06e4738a61bd60.dll">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
I34AACgKAACMCwAAI1N0cmluZ3MAAAAAtBUAAOwCAAAjVVMAoBgAABAAAAAjR1VJRAAAALAYAACU
BQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAAQwAAAAkAAAARAAAAIwAAAA4A
AABKAAAABAAAACYAAAAEAAAABAAAAA0AAAAYAAAABAAAAAEAAAAIAAAAAQAAAAMAAAAFAAAAAADC
BgEAAAAAAAYADQVpCQYAsgVpCQYANQRWCQ8A3QkAAAYAYgRNCAYA3ARNCAYAvQRNCAYAmQVNCAYA
QwVNCAYAXAVNCAYAeQRNCAYAlATsBQYAsAoWBwoALQUgCAYA7gNpCQoA+QQgCA4AJgQGBgYALQAW
BwYA6AIWBw4ArQQGBg4A3AEGBhIAdwVrBhIAbgNrBhYAkQj/Cg4ATQvKCBoArgdQCgYAYADBAQYA
HQcWBwYACQRWCQYAAwmJCQYAqggLCB4A0wOsBh4ASQSsBh4AigP2BwYAHwYWBx4ALQu+Ch4AKQu+
CgYA4wVBCwYABgdEAR4ApgO+Ch4AogO+CgYA5whEAQYA9AhEARIAmgZrBiIAfwrxAiIAEwnxAhYA
XwioAQ4AJQDKCAYAHAMWBwYAsAIWBxoA6wdQCgYAYwNNCAYAnAIWBwYAnwhNCBoAnQdQCgYAbgAW
BxoAwgdQChoA1QdQChoA5QdQCgYAdAAWBxoAUwBQChoAkgLbCBoARgDbCAYAOADBAQYALwloCgYA
hgIWBwYAXQtNCAAAAACRAAAAAAABAAEAAAAQAHsAAAA1AAEAAQABABAAtggBADUAAQADAAEAEACS
BwEAXQAIABIAAAAQAJAJ+gk1AAgAFAAAARAAMgr6CYkACgAYAAIAEAA4BgAANQALABsAAwEAAJsK
AABxAA4AIgADIRAAvQEAADUAEQAiAAEAxQC6AAEAqQD6AQEACQG6AAEAhgG6AAEAMQH6AQEA7wEC
AgEA5gAFAhEAIgcMAhEAUwMQAhEAbQIUAgEAMAK6AAEA8wG6AAEAEgK6AAYGmQECAlaAiwoYAlaA
MwMYAjYAjQAcAlAgAAAAAIYAVgIgAgEA/SAAAAAAhhhJCQYABAAFIQAAAACGCLIAYgAEAA0hAAAA
AIYIwgAQAAQAJCEAAAAAhgiaACcCBQAsIQAAAACGCKYAMAIFAH0hAAAAAIYI9ABiAAYAhSEAAAAA
hggGARAABgCcIQAAAACGCG0BYgAHAKQhAAAAAIYIgwEQAAcAuyEAAAAAhggYAScCCADEIQAAAACG
CC4BMAIIABUiAAAAAIYI5QE6AgkAHSIAAAAAhgjsAQEACQAvIgAAAACGCNIAPgIKADgiAAAAAIYI
4wBGAgoA/SAAAAAAhhhJCQYACwB4IgAAAACGAJgHBgALAFgkAAAAAIYYSQkGAAsA/SAAAAAAgxhJ
CQYACwBgJAAAAACTCP8ITwILAIwkAAAAAJMIOwNUAgsAkyQAAAAAkwhHA1kCCwCbJAAAAACWCMkK
XwIMAKIkAAAAAIYYSQkGAAwAqiQAAAAAkRhPCWQCDAC2JAAAAACGCHQHYgAMAL4kAAAAAIYIgwcQ
AAwAxyQAAAAAhgguB2IADQDPJAAAAACGCEAHEAANANgkAAAAAIYIUgdiAA4A4CQAAAAAhghjBxAA
DgD9IAAAAACGGEkJBgAPAOkkAAAAAJEYTwlkAg8A/SAAAAAAhhhJCQYADwAAAAEAWgIQEAIAOwoQ
EAMARQoAAAEA3QUAAAEA3QUAAAEA3QUAAAEA3QUAAAEA3QUAAAEA3QUAAAEA3QUAAAEA3QUAAAEA
3QUAAAEA3QUAAAEA3QUJAEkJAQARAEkJBgAZAEkJCgApAEkJEAAxAEkJEAA5AEkJEABBAEkJEABJ
AEkJEABRAEkJEABZAEkJEABhAEkJEABxAEkJBgB5AEkJBgCBAEkJBgCJAEkJBgChAEkJBgCxAEkJ
BgDpAEkJBgAJAUkJFQAZAakKIwAZAXQLKgAhAcwDLwAhAWICEAAxAYQANgAxASkKPAAhAREDEAAh
ASYGQgAhAfwGRwA5AegDTQA5Ab4DBgAhAbIDVQBBAeoGRwBRAUkJWwBZAUwCYgBZAb4DBgBBAb4D
BgBpAEkJBgAZAWYLZgAMANAFggAMANUKhgCZAGYLiwAUANUKhgAUANAFggAZAXwLugC5AJMKvQBh
AXsKwwBpAQ0HyQBhAT0I0ABxAW0I1ADJAEkJ2QDJAH0C4ACJAdYC8ACZASUJ+QChAcICAgGZAYIL
CwGZAfYKFwGZASELIQGZAZQGLQGZAaEBOQHxASEDVQHxAbcKgAEcADsJrwEkABULhgAZAakKvwEU
AEkJxQEJAjgLggARAsQDBgDJAOwJBgBxAX8IywFhAecKAQC5AEkJBgCJAVkL0AHxAEkJ1gERAUkJ
BgAOAAkAAAAOAA0AAAAIADwA8AEIAEAA9QEpAIMAgAMuAAsAkAIuABMAmQIuABsAuAIuACMAwQIu
ACsA6gIuADMA6gIuADsA6gIuAEMAwQIuAEsA8AIuAFMA6gIuAFsABwNJAIMAxwNjAHsAUQNpAIMA
8QODAIsA9QGJAIMAJQSjAJMA9QGpAIMAXATJAIMAkATjAGMA9QHpAIMAagUJAZsAuAIjAWsA9QEp
AZsAuAJBAWsA9QFhAWsA9QFpAXMA9QGBAWsA9QGJAXMA9QGhAWsA9QGpAXMA9QFgA2sA9QGAA2sA
9QGgA2sA9QHAA2sA9QHgA2sA9QEABGsA9QEcAGwAkwCmAAMAAQAFAAgABgAKAAcACwAAAMYAaAIA
AKoAbAIAAAoBaAIAAIcBaAIAADIBbAIAAPABdQIAAOcAeQIAAAMJgQIAAFsDhgIAAN8KiwIAAIcH
aAIAAEQHaAIAAGcHaAICAAMAAwABAAQAAwACAAUABQABAAYABQACAAcABwABAAgABwACAAkACQAB
AAoACQACAAsACwABAAwACwACAA0ADQABAA4ADQACAA8ADwABABAADwACABUAEQACABYAEwABABcA
EwACABgAFQACABsAFwABABwAFwACAB0AGQABAB4AGQACAB8AGwABACAAGwB7AKAApwG4AQSAAAAB
AAAA6R3ESgAAAAAAAAEAAAAEAAAAAAAAAAAAAADeAbQBAAAAAAQAAAAAAAAAAAAAAN4BIAgAAAAA
BAAAAAAAAAAAAAAA3gHKCAAAAAANAAAAAAAAAAAAAADnAUwGAAAAAAQAAAAAAAAAAAAAAN4BqAEA
AAAABAAAAAAAAAAAAAAA3gEnAwAAAAAEAAAAAAAAAAAAAADeARYHAAAAAA0AAAAAAAAAAAAAAOcB
TgEAAAAAAAAAAAEAAACaCQAABwACAAgABAAJAAQAZwDrAHcASgF5AOsAdwB0AXsAoAEAAABTVF9k
NDFlZGYwYWMyZjg0M2E5OWUwNmU0NzM4YTYxYmQ2MABUYWJsZWAxAE51bGxhYmxlYDEASUVudW1l
cmFibGVgMQBJUXVlcnlhYmxlYDEARXhwcmVzc2lvbmAxAElFbnVtZXJhdG9yYDEASW50MzIARnVu
Y2AyAEJpdHJpeDI0AGdldF9VVEY4ADw+OQA8TW9kdWxlPgBnZXRfQ1JFQVRFRABzZXRfQ1JFQVRF
RABnZXRfREVMSVZFUllfSUQAc2V0X0RFTElWRVJZX0lEAGdldF9NRVNTQUdFX1NFTkQAc2V0X01F
U1NBR0VfU0VORABnZXRfQ1VTVE9NRVJfTkFNRQBzZXRfQ1VTVE9NRVJfTkFNRQBnZXRfTUVTU0FH
RV9TRU5EX1RJTUUAc2V0X01FU1NBR0VfU0VORF9USU1FAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAZ2V0X0NVU1RPTUVSX0NBVEVHT1JZAHNldF9DVVNUT01FUl9DQVRF
R09SWQB2YWx1ZV9fAExhbWJkYQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAQXV0b1N5bmMAZ2V0X2lkAHNldF9pZAA8cmVmcmVzaF90b2tlbj5rX19C
YWNraW5nRmllbGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+a19f
QmFja2luZ0ZpZWxkAFJlYWRUb0VuZABTZW5kQ29tbWFuZABzZXRfTWV0aG9kAGRlZmF1bHRJbnN0
YW5jZQBHZXRUYWJsZQBJRGlzcG9zYWJsZQBRdWVyeWFibGUAUnVudGltZU1ldGhvZEhhbmRsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRNZXRob2RGcm9tSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAc2V0X0NvbnRlbnRUeXBlAFdo
ZXJlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAE1ldGhvZEJhc2UAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEh0dHBXZWJSZXNwb25zZQBHZXRSZXNwb25zZQBDbG9zZQBEaXNwb3NlAENy
ZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBXcml0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFRhYmxlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAENvbHVt
bkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBEYXRhTWVtYmVyQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9IYXNWYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN5
c3RlbS5EYXRhLkxpbnEuTWFwcGluZwBTdHJpbmcAc2V0X0NvbnRlbnRMZW5ndGgAb2JqTG9nb25C
aXRyaXhPQXV0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBFcXVhbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0u
Q29tcG9uZW50TW9kZWwAU1RfZDQxZWRmMGFjMmY4NDNhOTllMDZlNDczOGE2MWJkNjAuZGxsAEdl
dFJlc3BvbnNlU3RyZWFtAEdldFJlcXVlc3RTdHJlYW0AZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AZ2V0X3JlZnJlc2hfdG9rZW4Ac2V0X3JlZnJlc2hfdG9rZW4AZ2V0X2FjY2Vzc190
b2tlbgBzZXRfYWNjZXNzX3Rva2VuAGdldF9leHBpcmVzX2luAHNldF9leHBpcmVzX2luAFNjcmlw
dE1haW4ATWVtYmVyRXhwcmVzc2lvbgBQYXJhbWV0ZXJFeHByZXNzaW9uAENvbnN0YW50RXhwcmVz
c2lvbgBVbmFyeUV4cHJlc3Npb24AQmluYXJ5RXhwcmVzc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAGdldF9U
cmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJRGJDb25uZWN0aW9uAEFjcXVpcmVDb25uZWN0
aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ATWV0aG9kSW5mbwBDdWx0dXJlSW5m
bwBQSV9hYnNlbmNlX3RvX2dyb3VwAFN5c3RlbS5EYXRhLkxpbnEAU3lzdGVtLkxpbnEAU3RyZWFt
UmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBQ
YXJhbWV0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9kNDFlZGYwYWMyZjg0M2E5OWUwNmU0NzM4YTYxYmQ2MC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU3VibWl0Q2hhbmdlcwBTVF9kNDFlZGYwYWMyZjg0
M2E5OWUwNmU0NzM4YTYxYmQ2MC5Qcm9wZXJ0aWVzAEdldEJ5dGVzAFNldHRpbmdzAEdldFBhcmFt
cwBQb3N0UGFyYW1zAFN5c3RlbS5MaW5xLkV4cHJlc3Npb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBn
ZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVj
dABTZWxlY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABHZXRWYWx1ZU9yRGVmYXVsdABzZXRfVGFz
a1Jlc3VsdABDb25zdGFudABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAQ29udmVy
dABIdHRwV2ViUmVxdWVzdABNb3ZlTmV4dABTeXN0ZW0uVGV4dABEYXRhQ29udGV4dABnZXRfQXNz
ZW1ibHkAb3BfSW5lcXVhbGl0eQBJc051bGxPckVtcHR5AFByb3BlcnR5AAAAbWgAdAB0AHAAcwA6
AC8ALwBiAGkAdAByAGkAeAAuAGUAbAB0AHIAYQBuAHMAcABsAHUAcwAuAHIAdQAvAHIAZQBzAHQA
LwAxAC8AcwB6AHgAYQA0AG8AZwBuADUAMwBtAHIANQB4ADAAegAvAAALLgBqAHMAbwBuAAADJgAA
CVAATwBTAFQAAENhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0A
dQByAGwAZQBuAGMAbwBkAGUAZAABOzEAMAAuADEAMAAuADAALgAyADgALgBhAHUAdABvAG0AYQB0
AGkAbwBuAC4AcABoAHAAdQBzAGUAcgAAA20AABMUBD4EQQRCBDAEMgQ6BDAEIAABFywAIAA3BDAE
OgQwBDcERwQ4BDoEIAABFyAAOgQwBEIENQQzBD4EQAQ4BE8EIAABTS4AIAAhBEMENAQ9BD4EIAA/
BEAEOAQxBEsEOwQ+BCAAMQQ1BDcEIAA/BD4ENAQwBEcEOAQgAB8EIgQUBC8AHwQYBCIELwAfBBgE
LgABIWwAbwBnAC4AYgBsAG8AZwBwAG8AcwB0AC4AYQBkAGQAAAEAgJVVAFMARQBSAF8ASQBEAD0A
MQA3ADEANgAmAFAATwBTAFQAXwBUAEkAVABMAEUAPQAfBEAEOAQxBEsEQgQ4BDUEIABBBEMENAQ9
BDAEIAAxBDUENwQgAD8EPgQ0BDAERwQ4BCAAHwQiBBQELwAfBBgEIgQvAB8EGAQmAFAATwBTAFQA
XwBNAEUAUwBTAEEARwBFAD0AAR0mAEQARQBTAFQAWwAwAF0APQBTAEcAMwAzADAAAHFTAFQAXwBk
ADQAMQBlAGQAZgAwAGEAYwAyAGYAOAA0ADMAYQA5ADkAZQAwADYAZQA0ADcAMwA4AGEANgAxAGIA
ZAA2ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA7PKbZfZi
ME6sMZqlv4vbZQAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIEGBwMOHQUOBgADDg4ODgQAAQIO
BgABEoCRDgUAABKAmQUgAR0FDgQgAQEKBSAAEoCdByADAR0FCAgFIAASgKEGIAEBEoCdAyAADgUA
AgIODg4HAhURSQERTRURSQERTQYVEUkBEU0DIAACBCAAEwAHAAICEU0RTQwHAhURSQEIFRFJAQgF
FRFJAQgTBwcSCA4SYRJlEmkVEm0BEgwSDAIGDgUgABKAsQUgABKAtQYgARKAuRwDIAAcBCABHBwG
IAEBEoC9CjABABUSgMEBHgAECgESDAgAARKAxRGAyQgAAhJpEoDFDggAARKA0RGA1QsAAhKA3RKA
zRKA2QkAAhKA5RwSgMULAAISgOkSgM0SgMULAAISgO0SgM0SgM0QEAECFRKA9QEeABKAzR0SaQoK
ARUSgPECEgwCHhABAhUSgP0BHgAVEoD9AR4AFRKA9QEVEoDxAh4AAgsKARUSgPECEgwSDB8QAgIV
EoD9AR4BFRKA/QEeABUSgPUBFRKA8QIeAB4BBgoCEgwSDAcVEoEBARIMCCAAFRJtARMABhUSbQES
DAUAAQ4dDgUgAQETAAQgAQEcBSAAEoENByACAQ4SgQ0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQB
AAAABwYVEUkBEU0CBggGBhURSQEIAwYSeQMGEn0DBhIYAwYRIAMGEiQGIAMODg4OCCAAFRFJARFN
CSABARURSQERTQMgAAgHIAAVEUkBCAggAQEVEUkBCAQAABJ5BAAAEn0FAAEBEn0EAAASGAMAAAED
KAAOCCgAFRFJARFNAygACAcoABURSQEIBAgAEnkECAASfQQIABIYCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9kNDFlZGYwYWMyZjg0M2E5OWUw
NmU0NzM4YTYxYmQ2MAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNS4BAAEAVA4ETmFtZSJhYmVycmF0aW9uLmRiby5QSV9hYnNlbmNlX3RvX2dyb3VwRgEAAwBU
DgdTdG9yYWdlDF9ERUxJVkVSWV9JRFQOBkRiVHlwZRRWYXJDaGFyKDUwKSBOT1QgTlVMTFQCCUNh
bkJlTnVsbAApAQACAFQOB1N0b3JhZ2UIX0NSRUFURURUDgZEYlR5cGUIRGF0ZVRpbWUzAQACAFQO
B1N0b3JhZ2UOX0NVU1RPTUVSX05BTUVUDgZEYlR5cGUMVmFyQ2hhcigyMDApNgEAAgBUDgdTdG9y
YWdlEl9DVVNUT01FUl9DQVRFR09SWVQOBkRiVHlwZQtWYXJDaGFyKDUwKTMBAAIAVA4HU3RvcmFn
ZRJfTUVTU0FHRV9TRU5EX1RJTUVUDgZEYlR5cGUIRGF0ZVRpbWWA2AEABQBUDgdTdG9yYWdlA19p
ZFRVdlN5c3RlbS5EYXRhLkxpbnEuTWFwcGluZy5BdXRvU3luYywgU3lzdGVtLkRhdGEuTGlucSwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkIQXV0b1N5bmMDAAAAVA4GRGJUeXBlFUludCBOT1QgTlVMTCBJREVOVElUWVQCDElz
UHJpbWFyeUtleQFUAg1Jc0RiR2VuZXJhdGVkASkBAAIAVA4HU3RvcmFnZQ1fTUVTU0FHRV9TRU5E
VA4GRGJUeXBlA0ludLQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAcRAAAAAAAAAAAAAA2RAAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAKEQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAa
BAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAxErpHQAAAQDESukdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
egMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBk
ADQAMQBlAGQAZgAwAGEAYwAyAGYAOAA0ADMAYQA5ADkAZQAwADYAZQA0ADcAMwA4AGEANgAxAGIA
ZAA2ADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA2ADUANwAu
ADEAOQAxADQAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBkADQA
MQBlAGQAZgAwAGEAYwAyAGYAOAA0ADMAYQA5ADkAZQAwADYAZQA0ADcAMwA4AGEANgAxAGIAZAA2
ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfAGQANAAxAGUAZABmADAAYQBjADIAZgA4ADQAMwBhADkAOQBlADAANgBlADQANwAzADgAYQA2
ADEAYgBkADYAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwBkADQAMQBlAGQAZgAwAGEAYwAyAGYAOAA0ADMAYQA5ADkAZQAwADYAZQA0ADcAMwA4AGEANgAx
AGIAZAA2ADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcA
NgA1ADcALgAxADkAMQA0ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADcANgA1ADcALgAxADkAMQA0ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAASDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Поиск и загрузка новых сообщений"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D0760A74-B6F9-4572-8CD4-75BEEE51E28B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Поиск и загрузка новых сообщений"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FEB3277-5F6F-47B9-86DD-F48ABBDA0231}"
          SQLTask:SqlStatementSource="INSERT [aberration].[dbo].[PI_absence_to_group]&#xA;        ([DELIVERY_ID]           &#xA;        ,[CUSTOMER_NAME]&#xA;        ,[CUSTOMER_CATEGORY])&#xA;&#xA;&#x9;&#x9;SELECT DISTINCT No_, CustomerName, CustomerCategory&#xA;&#x9;&#x9;FROM BI.olap.vMonitorSTL m JOIN webproject.dbo.monitor_manual_data md ON m.CargoID = md.key_code&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;COALESCE(m.InOutDateTime_PIT, '') = ''&#xA;&#x9;&#x9;AND COALESCE(m.PTD, '') = ''&#xA;&#x9;&#x9;AND md.man_pi IS NULL&#xA;&#x9;&#x9;AND CAST(md.man_date_arrive_ship as date) &lt;= CAST(GETDATE() as date)&#xA;&#x9;&#x9;AND CAST(md.man_date_arrive_ship as date) &gt;= CAST(DATEADD(day, -3, GETDATE()) as date)&#xA;&#x9;&#x9;AND m.isMonitorSTLData = 1 &#xA;&#x9;&#x9;AND EXISTS (SELECT 0 FROM [NAV].[ETP].[dbo].[ETP$City Code] AS e&#xA;&#x9;&#x9;WHERE e.[City] = m.[LastPort] COLLATE Cyrillic_General_CI_AS AND e.[Country Code] = 'RUS')&#xA;&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT 0 FROM BI.olap.vMonitorSTL ms JOIN webproject.dbo.monitor_manual_data mmd ON ms.CargoID = mmd.key_code&#xA;&#x9;&#x9;WHERE ms.No_ = m.No_ &#xA;&#x9;&#x9;AND (COALESCE(ms.PTD, '') &lt;&gt; '' OR mmd.man_pi IS NOT NULL OR COALESCE(ms.[InOutDateTime_PIT], '') &lt;&gt; ''))&#xA;&#xA;&#x9;&#x9;AND NOT EXISTS (SELECT 0 FROM [aberration].[dbo].[PI_absence_to_group] a WHERE a.DELIVERY_ID = m.No_)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Ограничение]"
      DTS:CreationName=""
      DTS:DTSID="{8E3CDDD1-F5B0-4D78-9DD4-C263BF6FE7DA}"
      DTS:From="Package\Поиск и загрузка новых сообщений"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Ограничение"
      DTS:To="Package\Send messages" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="152,42"
          Id="Package\Send messages"
          TopLeft="335,226" />
        <NodeLayout
          Size="254,42"
          Id="Package\Поиск и загрузка новых сообщений"
          TopLeft="280,148" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Ограничение]"
          TopLeft="409,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>