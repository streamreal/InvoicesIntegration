<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/18/2020 1:13:22 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETP025"
  DTS:CreatorName="ELTRANSPLUS\andreydruzhinin"
  DTS:DTSID="{25C3A29C-5429-4D13-85ED-6D7DB28B3E3A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.71"
  DTS:LocaleID="1049"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="5"
  DTS:VersionGUID="{D6529E80-825F-4B12-BB84-70A682195C0A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Поиск и добавление новых файлов ДТ"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{BAA92260-34AB-4678-9FDB-ED5D78CA5EAE}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Поиск и добавление новых файлов ДТ"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0d148c0de3994da89c5caa841da7e564"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="CheckDtFiles.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Data.SqlClient;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;

namespace ST_0d148c0de3994da89c5caa841da7e564
{
    class CheckDtFiles
    {
        public static void LoadNewDeclarations(SqlConnection connection)
        {
            DirectoryInfo di = new DirectoryInfo(@"N:\");
			DataContext db = new DataContext(connection);
			Table<notices_dt_files> table = db.GetTable<notices_dt_files>();
			var savedRegNums = table.Select(d => d.regnum);
			
			foreach (FileInfo fi in di.GetFiles("GTD_????????_??????_???????.pdf", SearchOption.AllDirectories))
            {
                string regNum = fi.Name.Replace(".pdf", "").Replace("GTD_", "").Replace("_", "/").ToLower();
				string year = regNum.Substring(13, 2);
                int yearNum;
                int.TryParse(year, out yearNum);

                if (yearNum >= 20)
                {
					int count = savedRegNums.Where(d => d == regNum).Select(d => d).Count();

					if (count > 0)
					{
						continue;
					}
					else
					{
						notices_dt_files toInsert = new notices_dt_files
						{
							regnum = regNum,
							fullpath = fi.FullName,
							load_datetime = DateTime.Now,
							was_processed = 0
						};

						table.InsertOnSubmit(toInsert);
						db.SubmitChanges();
					}					
                }                
            }					
        }
    }

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "webproject.dbo.notices_dt_files")]
	public partial class notices_dt_files
	{

		private int _id;

		private string _regnum;

		private string _vat;

		private string _fullpath;

		private System.Nullable<System.DateTime> _load_datetime;

		private System.Nullable<int> _was_processed;

		private System.Nullable<System.DateTime> _sent_datetime;

		public notices_dt_files()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.Default, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_regnum", DbType = "VarChar(50)")]
		public string regnum
		{
			get
			{
				return this._regnum;
			}
			set
			{
				if ((this._regnum != value))
				{
					this._regnum = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vat", DbType = "VarChar(50)")]
		public string vat
		{
			get
			{
				return this._vat;
			}
			set
			{
				if ((this._vat != value))
				{
					this._vat = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fullpath", DbType = "VarChar(300)")]
		public string fullpath
		{
			get
			{
				return this._fullpath;
			}
			set
			{
				if ((this._fullpath != value))
				{
					this._fullpath = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_load_datetime", DbType = "DateTime")]
		public System.Nullable<System.DateTime> load_datetime
		{
			get
			{
				return this._load_datetime;
			}
			set
			{
				if ((this._load_datetime != value))
				{
					this._load_datetime = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_was_processed", DbType = "Int")]
		public System.Nullable<int> was_processed
		{
			get
			{
				return this._was_processed;
			}
			set
			{
				if ((this._was_processed != value))
				{
					this._was_processed = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_sent_datetime", DbType = "DateTime")]
		public System.Nullable<System.DateTime> sent_datetime
		{
			get
			{
				return this._sent_datetime;
			}
			set
			{
				if ((this._sent_datetime != value))
				{
					this._sent_datetime = value;
				}
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d148c0de3994da89c5caa841da7e564.Properties.Settings.get_Default():ST_0d148c0de3994da89c5caa841da7e564.Properties.Sett" +
    "ings")]

namespace ST_0d148c0de3994da89c5caa841da7e564.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_0d148c0de3994da89c5caa841da7e564.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C3E06022-7674-419D-82EB-CAF764649786}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0d148c0de3994da89c5caa841da7e564</RootNamespace>
    <AssemblyName>ST_0d148c0de3994da89c5caa841da7e564</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="CheckDtFiles.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
#endregion

namespace ST_0d148c0de3994da89c5caa841da7e564
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                SqlConnection connection = (SqlConnection)Dts.Connections["10.10.0.28.automation.phpuser"].AcquireConnection(Dts.Transaction);
                CheckDtFiles.LoadNewDeclarations(connection);
                Dts.Connections["10.10.0.28.automation.phpuser"].ReleaseConnection(connection);
            }
            catch (Exception e)
            {
                Dts.Events.FireError(0 ,"", e.Message, "", 0);
            }
                
                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0d148c0de3994da89c5caa841da7e564</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0d148c0de3994da89c5caa841da7e564</msb:DisplayName>
		<msb:ProjectId>{9BCB2307-03EA-4506-BFCF-5044EBE2ED4F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0d148c0de3994da89c5caa841da7e564.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="CheckDtFiles.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0d148c0de3994da89c5caa841da7e564")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0d148c0de3994da89c5caa841da7e564")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
[assembly: NeutralResourcesLanguage("ru")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d148c0de3994da89c5caa841da7e564.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d148c0de3994da89c5caa841da7e564.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d148c0de3994da89c5caa841da7e564.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0d148c0de3994da89c5caa841da7e564.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0d148c0de3994da89c5caa841da7e564.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0d148c0de3994da89c5caa841da7e564.dll">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
AACGCBECOgIIAKAjAAAAAIYAFAYGAAkAQCQAAAAAhhjKBwYACQAhIgAAAACDGMoHBgAJAEgkAAAA
AJMIdAdVAgkAdCQAAAAAkwhiAlsCCQB7JAAAAACTCG4CYQIJAIMkAAAAAJYIbAloAgoAiiQAAAAA
hhjKBwYACgCSJAAAAACRGNAHbQIKACEiAAAAAIYYygcGAAoAniQAAAAAkRjQB20CCgAhIgAAAACG
GMoHBgAKAAAAAQDuBgAAAQDOBAAAAQDOBAAAAQDOBAAAAQDOBAAAAQDOBAAAAQDOBAAAAQDOBAAA
AQDOBAkAygcBABEAygcGABkAygcKACkAygcQADEAygcQADkAygcQAEEAygcQAEkAygcQAFEAygcQ
AFkAygcQAGEAygcQAGkAygcQALEAygcGALkAygcGANEAygcGAOEAygcGAAEBygcGACEBygcVAIEA
ygcQAIkAygc7AIkANwFCADkBqgFRAEkBrgdaAFEBlgFjAEkB7QlsAEkBsgB4AIEBVgmUAIEAtwi4
AJEBvAHCAJkBEwHGAJkBuAfCAJkBDgXMAKEByQLSAEkBmQnZALEBgwHjAEkBDQHsAEkBegX4AIEB
SAIOAYEBuAk+AZEBxQHCAMkAyglJAQwAygdVARQAygdVARwAXQlVAYkAbQgGAHEAygcGAJkB3wlo
AQwAwQR9AQwAeAmBAckA3wmGARQAeAmBARQAwQR9AekAHgmiAckBBgmoAdEB0AWuAckBjAa1AdkB
vAa5AdkBzga+AckBNAnDAfEAKwHCAOEBwAfJAckBigkBAOkAygcGADkB0gnSAQkBygfYASkBygcG
AAgAOADyAQgAPAD3ASkAewCQAy4ACwCbAi4AEwCkAi4AGwDDAi4AIwDMAi4AKwD1Ai4AMwD1Ai4A
OwD1Ai4AQwDMAi4ASwD7Ai4AUwD1Ai4AWwASAy4AYwAaA0kAewBqBGMAcwBkA2kAewCWBIMAgwD3
AYkAewC/BKMAiwD3AakAewDuBMkAewAeBeMAawD3AekAewBJBQMBawD3AQkBkwDDAikBkwDDAkEB
awD3ARwAbgGOAZsBAwABAAUACAAGAAoAAAAKAXECAAD7BXUCAABLCXUCAAApBXUCAADxAXkCAADx
AIICAAAVAnkCAAB4B4oCAACCApACAACCCZYCAgAEAAMAAQAFAAMAAgAGAAUAAQAHAAUAAgAIAAcA
AQAJAAcAAgAKAAkAAQALAAkAAgAMAAsAAQANAAsAAgAOAA0AAQAPAA0AAgAQAA8AAQARAA8AAgAV
ABEAAgAWABMAAQAXABMAAgAYABUATgFbAWEBBIAAAAEAAAA2HX1nAAAAAAAAUAAAAAQAAAAAAAAA
AAAAAOABxQAAAAAABAAAAAAAAAAAAAAA4AG5AAAAAAAEAAAAAAAAAAAAAADgAVcHAAAAAAQAAAAA
AAAAAAAAAOABTgIAAAAADQAAAAAAAAAAAAAA6QEyBQAAAAAEAAAAAAAAAAAAAADgAdkFAAAAAA0A
AAAAAAAAAAAAAOkBiwAAAAAAAAAAAAEAAAAbCAAABwACAAgAAgAJAAQAKwBMADUAiQA3ALIANQAE
AU0AKwE1AC8BNwA5AU8AKwEAAAA8PmNfX0Rpc3BsYXlDbGFzczBfMABUYWJsZWAxAE51bGxhYmxl
YDEASVF1ZXJ5YWJsZWAxAEV4cHJlc3Npb25gMQBJbnQzMgBGdW5jYDIAU1RfMGQxNDhjMGRlMzk5
NGRhODljNWNhYTg0MWRhN2U1NjQAPD45ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBMYW1iZGEAU3lzdGVtLkRhdGEAbXNjb3JsaWIAPD5j
AEF1dG9TeW5jAGdldF93YXNfcHJvY2Vzc2VkAHNldF93YXNfcHJvY2Vzc2VkAGdldF9pZABzZXRf
aWQARmllbGQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAR2V0VGFibGUAUXVl
cnlhYmxlAFJ1bnRpbWVGaWVsZEhhbmRsZQBSdW50aW1lTWV0aG9kSGFuZGxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldEZpZWxkRnJvbUhhbmRsZQBHZXRNZXRob2RGcm9tSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAGdldF9OYW1lAGdldF9GdWxsTmFtZQBEYXRlVGltZQBnZXRfbG9hZF9kYXRldGltZQBz
ZXRfbG9hZF9kYXRldGltZQBnZXRfc2VudF9kYXRldGltZQBzZXRfc2VudF9kYXRldGltZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUAV2hlcmUAU3lzdGVtLkNvcmUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAVHJ5UGFyc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBOZXV0cmFsUmVzb3VyY2VzTGFuZ3VhZ2VBdHRyaWJ1dGUAVGFi
bGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQ29sdW1uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X0hhc1ZhbHVlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3lzdGVtLkRhdGEuTGlucS5NYXBwaW5nAFN0cmlu
ZwBTdWJzdHJpbmcAZ2V0X2Z1bGxwYXRoAHNldF9mdWxscGF0aABNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBFcXVh
bABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMGQxNDhjMGRlMzk5
NGRhODljNWNhYTg0MWRhN2U1NjQuZGxsAGdldF9JdGVtAFN5c3RlbQByZWdOdW0ARW51bQBnZXRf
cmVnbnVtAHNldF9yZWdudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBNZW1iZXJFeHByZXNzaW9u
AFBhcmFtZXRlckV4cHJlc3Npb24AQ29uc3RhbnRFeHByZXNzaW9uAEJpbmFyeUV4cHJlc3Npb24A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAElEYkNvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFz
ZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBjb25uZWN0aW9uAFNlYXJjaE9wdGlvbgBFeGNlcHRp
b24ARmllbGRJbmZvAE1ldGhvZEluZm8ARmlsZUluZm8AQ3VsdHVyZUluZm8ARmlsZVN5c3RlbUlu
Zm8ARGlyZWN0b3J5SW5mbwBTeXN0ZW0uRGF0YS5MaW5xAFN5c3RlbS5MaW5xAGdldF9SZXNvdXJj
ZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBQYXJhbWV0ZXIA
VG9Mb3dlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMGQxNDhjMGRlMzk5
NGRhODljNWNhYTg0MWRhN2U1NjQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFN1Ym1pdENoYW5nZXMAU1RfMGQxNDhjMGRlMzk5NGRhODljNWNhYTg0MWRhN2U1
NjQuUHJvcGVydGllcwBDaGVja0R0RmlsZXMAR2V0RmlsZXMAbm90aWNlc19kdF9maWxlcwBTZXR0
aW5ncwBTeXN0ZW0uTGlucS5FeHByZXNzaW9ucwBMb2FkTmV3RGVjbGFyYXRpb25zAGdldF9Db25u
ZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAGdldF92YXQA
c2V0X3ZhdABPYmplY3QAU2VsZWN0AEluc2VydE9uU3VibWl0AGdldF9EZWZhdWx0AEdldFZhbHVl
T3JEZWZhdWx0AHNldF9UYXNrUmVzdWx0AENvbnN0YW50AFN5c3RlbS5EYXRhLlNxbENsaWVudABD
b3VudABEYXRhQ29udGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBvcF9JbmVxdWFsaXR5AFByb3Bl
cnR5AAAAAAdOADoAXAAAA2QAAD9HAFQARABfAD8APwA/AD8APwA/AD8APwBfAD8APwA/AD8APwA/
AF8APwA/AD8APwA/AD8APwAuAHAAZABmAAAJLgBwAGQAZgAAAQAJRwBUAEQAXwAAA18AAAMvAAA7
MQAwAC4AMQAwAC4AMAAuADIAOAAuAGEAdQB0AG8AbQBhAHQAaQBvAG4ALgBwAGgAcAB1AHMAZQBy
AABxUwBUAF8AMABkADEANAA4AGMAMABkAGUAMwA5ADkANABkAGEAOAA5AGMANQBjAGEAYQA4ADQA
MQBkAGEANwBlADUANgA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAAAADl1oLEpqXGQrW6appw7cRnAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAjR4HCxJBEkUV
EkkBEgwVEk0BDhJRHRJVCBJVEhwIEgwGIAEBEoCZCTABABUSSQEeAAQKARIMCAABEoCdEYChCAAC
ElESgJ0OCAABEoCpEYCtCwACEoC1EoClEoCxEBABAhUSgL0BHgASgKUdElEKCgEVEoC5AhIMDh0Q
AgIVEk0BHgEVEk0BHgAVEoC9ARUSgLkCHgAeAQUKAhIMDgkgAh0SVQ4RgMUDIAAOBSACDg4OBSAC
DggIBgACAg4QCAkAAhKA1RwSgJ0IAAESgNkRgN0LAAISgLUSgKUSgNkLAAISgOESgKUSgKUJCgEV
EoC5Ag4CHBABAhUSTQEeABUSTQEeABUSgL0BFRKAuQIeAAIDCgEOCQoBFRKAuQIODgQKAg4OChAB
AQgVEk0BHgAEAAARZQYVEWEBEWUFIAEBEwAFFRFhAQgGFRJJARIMBQACAg4ODgcCFRFhARFlFRFh
ARFlAyAAAgQgABMABwACAhFlEWUMBwIVEWEBCBURYQEIBgcCEj0SeQUgABKA5QUgABKA6QYgARKA
7RwDIAAcBCABHBwEIAEBHAUgABKA8QggBQIIDg4OCAUgABKA9QcgAgEOEoD1CLd6XFYZNOCJCImE
Xc2AgMyRBAAAAAAEAQAAAAIGCAIGDgcGFRFhARFlBgYVEWEBCAQGEoCFBAYSgIkDBhIYAwYSIAMG
ESQFAAEBEj0DIAAICCAAFRFhARFlCSABARURYQERZQcgABURYQEICCABARURYQEIBQAAEoCFBQAA
EoCJBgABARKAiQQAABIYAwAAAQMoAAgDKAAOCCgAFRFhARFlBygAFRFhAQgFCAASgIUFCAASgIkE
CAASGAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfMGQxNDhjMGRlMzk5NGRhODljNWNhYTg0MWRhN2U1NjQAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMAAABwEAAnJ1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNSsBAAEAVA4ETmFtZR93ZWJwcm9qZWN0
LmRiby5ub3RpY2VzX2R0X2ZpbGVzgNgBAAUAVA4HU3RvcmFnZQNfaWRUVXZTeXN0ZW0uRGF0YS5M
aW5xLk1hcHBpbmcuQXV0b1N5bmMsIFN5c3RlbS5EYXRhLkxpbnEsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5CEF1dG9TeW5j
AAAAAFQOBkRiVHlwZRVJbnQgTk9UIE5VTEwgSURFTlRJVFlUAg1Jc0RiR2VuZXJhdGVkAVQCDElz
UHJpbWFyeUtleQErAQACAFQOB1N0b3JhZ2UHX3JlZ251bVQOBkRiVHlwZQtWYXJDaGFyKDUwKSgB
AAIAVA4HU3RvcmFnZQRfdmF0VA4GRGJUeXBlC1ZhckNoYXIoNTApLgEAAgBUDgdTdG9yYWdlCV9m
dWxscGF0aFQOBkRiVHlwZQxWYXJDaGFyKDMwMCkvAQACAFQOB1N0b3JhZ2UOX2xvYWRfZGF0ZXRp
bWVUDgZEYlR5cGUIRGF0ZVRpbWUqAQACAFQOB1N0b3JhZ2UOX3dhc19wcm9jZXNzZWRUDgZEYlR5
cGUDSW50LwEAAgBUDgdTdG9yYWdlDl9zZW50X2RhdGV0aW1lVA4GRGJUeXBlCERhdGVUaW1lAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAPA+AAAAAAAAAAAAAAo/AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8PgAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAfWc2HQAAAQB9ZzYdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAwAGQAMQA0ADgAYwAwAGQAZQAzADkAOQA0AGQAYQA4ADkAYwA1AGMAYQBhADgANAAxAGQAYQA3
AGUANQA2ADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA0ADcA
OAAuADIANgA0ADkAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAw
AGQAMQA0ADgAYwAwAGQAZQAzADkAOQA0AGQAYQA4ADkAYwA1AGMAYQBhADgANAAxAGQAYQA3AGUA
NQA2ADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADAAZAAxADQAOABjADAAZABlADMAOQA5ADQAZABhADgAOQBjADUAYwBhAGEAOAA0ADEA
ZABhADcAZQA1ADYANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwAwAGQAMQA0ADgAYwAwAGQAZQAzADkAOQA0AGQAYQA4ADkAYwA1AGMAYQBhADgANAAxAGQA
YQA3AGUANQA2ADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcANAA3ADgALgAyADYANAA5ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcANAA3ADgALgAyADYANAA5ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAHD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--В данном разделе CDATA содержатся сведения о макете пакета. В данном разделе содержатся сведения о координатах (x,y), ширине и высоте.-->
<!--В случае возникновения ошибки при редактировании этого раздела вручную его можно удалить. -->
<!--Пакет можно загрузить обычным образом, но прежние сведения о макете будут утеряны, и конструктор автоматически перераспределит элементы в области конструктора.-->
<Objects
  Version="8">
  <!--Все приведенные ниже узлы будут содержать свойства, не влияющие на поведение среды выполнения.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="269,42"
          Id="Package\Поиск и добавление новых файлов ДТ"
          TopLeft="189,93" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>