#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace сSharpProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aberration")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertinsurance_peregon_deviation(insurance_peregon_deviation instance);
    partial void Updateinsurance_peregon_deviation(insurance_peregon_deviation instance);
    partial void Deleteinsurance_peregon_deviation(insurance_peregon_deviation instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::сSharpProject.Properties.Settings.Default.aberrationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<insurance_peregon_deviation> insurance_peregon_deviation
		{
			get
			{
				return this.GetTable<insurance_peregon_deviation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.insurance_peregon_deviation")]
	public partial class insurance_peregon_deviation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DELIVERY_ID;
		
		private string _CUSTOMER_NAME;
		
		private int _MESSAGE_SEND;
		
		private System.DateTime _LOAD_DATE;
		
		private int _id;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDELIVERY_IDChanging(string value);
    partial void OnDELIVERY_IDChanged();
    partial void OnCUSTOMER_NAMEChanging(string value);
    partial void OnCUSTOMER_NAMEChanged();
    partial void OnMESSAGE_SENDChanging(int value);
    partial void OnMESSAGE_SENDChanged();
    partial void OnLOAD_DATEChanging(System.DateTime value);
    partial void OnLOAD_DATEChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public insurance_peregon_deviation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELIVERY_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DELIVERY_ID
		{
			get
			{
				return this._DELIVERY_ID;
			}
			set
			{
				if ((this._DELIVERY_ID != value))
				{
					this.OnDELIVERY_IDChanging(value);
					this.SendPropertyChanging();
					this._DELIVERY_ID = value;
					this.SendPropertyChanged("DELIVERY_ID");
					this.OnDELIVERY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(50)")]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this.OnCUSTOMER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_NAME = value;
					this.SendPropertyChanged("CUSTOMER_NAME");
					this.OnCUSTOMER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESSAGE_SEND", DbType="Int NOT NULL")]
		public int MESSAGE_SEND
		{
			get
			{
				return this._MESSAGE_SEND;
			}
			set
			{
				if ((this._MESSAGE_SEND != value))
				{
					this.OnMESSAGE_SENDChanging(value);
					this.SendPropertyChanging();
					this._MESSAGE_SEND = value;
					this.SendPropertyChanged("MESSAGE_SEND");
					this.OnMESSAGE_SENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAD_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime LOAD_DATE
		{
			get
			{
				return this._LOAD_DATE;
			}
			set
			{
				if ((this._LOAD_DATE != value))
				{
					this.OnLOAD_DATEChanging(value);
					this.SendPropertyChanging();
					this._LOAD_DATE = value;
					this.SendPropertyChanged("LOAD_DATE");
					this.OnLOAD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
